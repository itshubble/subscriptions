{"version":3,"sources":["workspace/common/WorkspaceToolbar.js","workspace/common/NoRecords.js","workspace/analytics/Summary.js","workspace/analytics/SubscriptionsSummary.js","workspace/analytics/LineGraph.js","workspace/analytics/SubscriberCharts.js","workspace/analytics/RevenueSummary.js","workspace/analytics/BarGraph.js","workspace/analytics/RevenueCharts.js","workspace/analytics/PlanSummary.js","workspace/analytics/PlanCharts.js","workspace/analytics/Analytics.js"],"names":["useToolbarStyles","makeStyles","theme","appBar","color","palette","primary","background","toolbar","paddingLeft","spacing","paddingRight","buttons","marginLeft","action","textTransform","title","text","fontWeight","highlight","type","secondary","main","backgroundColor","lighten","light","dark","actionIcon","marginRight","WorkspaceToolbar","props","classes","selectionCount","actions","onAction","makeActionHandler","identifier","normalTitle","className","variant","id","component","selectedTitle","selected","position","elevation","clsx","map","size","onClick","icon","Fragment","useStyles","container","display","alignItems","justifyContent","flexDirection","image","width","height","marginTop","message","fontSize","NoRecords","actionText","actionHandler","src","alt","content","paddingTop","paddingBottom","flex","button","padding","upIcon","verticalAlign","up","success","downIcon","down","error","small","Summary","Typography","period","number","delta","change","root","borderRadius","minHeight","maxHeight","details","SubscriptionsSummary","data","Card","CardContent","subscribers","subscribersChange","subscribersDelta","Divider","ltv","ltvChange","ltvDelta","churnRate","churnChange","churnDelta","style","margin","marginBottom","tooltip","item","subtitle","months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","LineGraph","name","dataKey","info","CustomTooltip","active","payload","label","Paper","value","top","right","left","bottom","strokeDasharray","stroke","fill","activeDot","r","space","SubscriberCharts","subscriberData","churnRateData","RevenueSummary","totalRevenue","totalRevenueChange","totalRevenueDelta","recoveredRevenue","recoveredRevenueChange","recoveredRevenueDelta","dueRevenue","dueRevenueChange","dueRevenueDelta","parent","colors","blues","reds","purples","oranges","BarGraph","names","keys","index","bar","stackId","RevenueCharts","revenueData","transactionData","PlanSummary","conversions","conversionsChange","conversionsDelta","conversionRate","conversionRateChange","conversionRateDelta","cancellationRate","cancellationRateChange","cancellationRateDelta","PlanCharts","planData","conversionData","mapDispatchToProps","fetchAnalytics","connect","analytics","useEffect","subscriptionSummary","revenueSummary","planSummary","box","Grid","xs","md"],"mappings":"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","file":"static/js/17.d5b8b147.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    appBar: {\n        color: theme.palette.primary,\n        background: \"white\",\n    },\n    toolbar: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    buttons: {\n        marginLeft: \"auto\",\n    },\n    action: {\n        textTransform: \"none\",\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    title: {\n        color: theme.palette.text.primary,\n        fontWeight: 500,\n    },\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    actionIcon: {\n        marginRight: 4,\n    },\n}));\n\nfunction WorkspaceToolbar(props) {\n    const classes = useToolbarStyles();\n    const { title, selectionCount, actions, onAction } = props;\n\n    const makeActionHandler = (identifier) => () => onAction(identifier);\n\n    const normalTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"h6\"\n            id=\"tableTitle\"\n            component=\"div\"\n        >\n            {title}\n        </Typography>\n    );\n\n    const selectedTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"subtitle1\"\n            component=\"div\"\n        >\n            {selectionCount} selected\n        </Typography>\n    );\n\n    const selected = selectionCount > 0;\n\n    const recordButtons = () => {\n        if (actions) {\n            return actions.map(\n                (action) =>\n                    !action.primary && (\n                        <Button\n                            className={classes.action}\n                            variant=\"text\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={makeActionHandler(action.identifier)}\n                        >\n                            <action.icon className={classes.actionIcon} />\n                            {action.title}\n                        </Button>\n                    )\n            );\n        }\n        return null;\n    };\n\n    const normalButtons = () => {\n        if (actions) {\n            return (\n                <React.Fragment>\n                    {actions.map(\n                        (action) =>\n                            action.primary && (\n                                <Button\n                                    className={classes.action}\n                                    variant=\"text\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    onClick={makeActionHandler(\n                                        action.identifier\n                                    )}\n                                >\n                                    <action.icon\n                                        className={classes.actionIcon}\n                                    />\n                                    {action.title}\n                                </Button>\n                            )\n                    )}\n                </React.Fragment>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <AppBar position=\"static\" elevation={1} className={classes.appBar}>\n            <Toolbar\n                className={clsx(classes.toolbar, {\n                    [classes.highlight]: selected,\n                })}\n            >\n                {selected ? selectedTitle : normalTitle}\n\n                <div className={classes.buttons}>\n                    {selected ? recordButtons() : normalButtons()}\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nWorkspaceToolbar.propTypes = {\n    selectionCount: PropTypes.number.isRequired,\n};\n\nexport default WorkspaceToolbar;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n    },\n    image: {\n        width: \"auto\",\n        height: 400,\n        marginTop: 96,\n    },\n    message: {\n        fontSize: 20,\n        fontWeight: 400,\n        color: theme.palette.text.secondary,\n    },\n    action: {\n        marginTop: 16,\n    },\n}));\n\nexport default function NoRecords(props) {\n    const classes = useStyles();\n    const { message, actionText, actionHandler, action, image } = props;\n\n    return (\n        <div className={classes.container}>\n            <img className={classes.image} src={image} alt=\"\" />\n            <Typography className={classes.message}>{message}</Typography>\n            {action && (\n                <Button\n                    className={classes.action}\n                    variant=\"contained\"\n                    size=\"large\"\n                    color=\"secondary\"\n                    onClick={actionHandler}\n                >\n                    {actionText}\n                </Button>\n            )}\n        </div>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Up from \"@material-ui/icons/ExpandLessSharp\";\nimport Down from \"@material-ui/icons/ExpandMoreSharp\";\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        paddingTop: 24,\n        paddingBottom: 24,\n        flex: \"1 0 auto\",\n    },\n    button: {\n        padding: 15,\n        marginLeft: \"auto\",\n    },\n    upIcon: {\n        verticalAlign: \"bottom\",\n        fontSize: 32,\n    },\n    up: {\n        color: theme.palette.success.main,\n    },\n    downIcon: {\n        verticalAlign: \"bottom\",\n        fontSize: 32,\n    },\n    down: {\n        color: theme.palette.error.main,\n    },\n    small: {\n        fontSize: 14,\n    },\n}));\n\nexport default function Summary(props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.content}>\n            <Typography variant=\"subtitle1\" color=\"textPrimary\">\n                {props.title}\n            </Typography>\n            <Typography\n                variant=\"subtitle1\"\n                color=\"textSecondary\"\n                className={classes.small}\n            >\n                {props.period}\n            </Typography>\n            <Typography component=\"h3\" variant=\"h3\">\n                {props.number}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                {props.delta === \"positive\" ? (\n                    <div className={classes.up}>\n                        <Up className={classes.upIcon} />\n                        {props.change}\n                    </div>\n                ) : (\n                    <div className={classes.down}>\n                        <Down className={classes.downIcon} />\n                        {props.change}\n                    </div>\n                )}\n            </Typography>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Summary from \"./Summary\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: 20,\n        borderRadius: 0,\n        minHeight: 700,\n        maxHeight: 700,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n    },\n    details: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    button: {\n        padding: 15,\n        marginLeft: \"auto\",\n    },\n    upIcon: {\n        verticalAlign: \"bottom\",\n        fontSize: 32,\n    },\n    up: {\n        color: theme.palette.success.main,\n    },\n    downIcon: {\n        verticalAlign: \"bottom\",\n        fontSize: 32,\n    },\n    down: {\n        color: theme.palette.error.main,\n    },\n    small: {\n        fontSize: 14,\n    },\n}));\n\nexport default function SubscriptionsSummary(props) {\n    const classes = useStyles();\n    const { data } = props;\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent className={classes.details}>\n                <Summary\n                    title=\"Total Subscriptions\"\n                    period={data.period}\n                    number={data.subscribers}\n                    change={data.subscribersChange}\n                    delta={data.subscribersDelta}\n                />\n                <Divider />\n                <Summary\n                    title=\"Subscriber Lifetime Value\"\n                    period={data.period}\n                    number={`₹ ${data.ltv}`}\n                    change={`₹ ${data.ltvChange}`}\n                    delta={data.ltvDelta}\n                />\n                <Divider />\n                <Summary\n                    title=\"Subscriber Churn Rate\"\n                    period={data.period}\n                    number={`${data.churnRate}%`}\n                    change={`${data.churnChange}%`}\n                    delta={data.churnDelta}\n                />\n            </CardContent>\n        </Card>\n    );\n}\n","import React from \"react\";\nimport {\n    ResponsiveContainer,\n    AreaChart,\n    Area,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n} from \"recharts\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n    style: {\n        margin: 8,\n        marginBottom: 48,\n        width: \"auto\",\n        height: 220,\n    },\n    tooltip: {\n        justifyContent: \"center\",\n        padding: 8,\n    },\n    item: {\n        margin: 2,\n    },\n    subtitle: {\n        color: \"#777777\",\n    },\n}));\n\nconst months = {\n    Jan: \"January\",\n    Feb: \"February\",\n    Mar: \"March\",\n    Apr: \"April\",\n    May: \"May\",\n    Jun: \"June\",\n    Jul: \"July\",\n    Aug: \"August\",\n    Sep: \"September\",\n    Oct: \"October\",\n    Nov: \"November\",\n    Dec: \"December\",\n};\n\nfunction LineGraph(props, theme) {\n    const classes = useStyles();\n\n    const { title, name, color, dataKey, info, data } = props;\n\n    const CustomTooltip = ({ active, payload, label }) => {\n        if (active && payload) {\n            return (\n                <Paper className={classes.tooltip} elevation={4}>\n                    <div\n                        className={classes.item}\n                    >{`Month: ${months[label]}`}</div>\n                    <hr />\n                    <div className={classes.item}>\n                        {`${name}: ${payload[0].value}`}\n                    </div>\n                </Paper>\n            );\n        }\n        return null;\n    };\n    return (\n        <div className={classes.style}>\n            <Typography variant=\"subtitle1\" color=\"textPrimary\">\n                <div className={classes.title}>{title}</div>\n                <div className={classes.subtitle}>{info}</div>\n            </Typography>\n            <ResponsiveContainer>\n                <AreaChart\n                    data={data}\n                    margin={{\n                        top: 24,\n                        right: 24,\n                        left: 8,\n                        bottom: 24,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"2 2\" />\n                    <XAxis dataKey=\"month\" />\n                    <YAxis />\n                    <Tooltip content={<CustomTooltip />} />\n                    <Area\n                        type=\"monotone\"\n                        dataKey={dataKey}\n                        stroke={color}\n                        fill={color}\n                        activeDot={{ r: 4 }}\n                    />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    );\n}\n\nexport default LineGraph;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LineGraph from \"./LineGraph\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        borderRadius: 0,\n        minHeight: 700,\n        maxHeight: 700,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n    },\n    content: {\n        minHeight: 600,\n        maxHeight: 600,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n    },\n    style: {\n        margin: 20,\n        width: \"auto\",\n        height: 240,\n    },\n    space: {\n        margin: 4,\n    },\n}));\n\nfunction SubscriberCharts(props) {\n    const classes = useStyles();\n\n    const { subscriberData, churnRateData } = props;\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent className={classes.content}>\n                <LineGraph\n                    data={subscriberData}\n                    title=\"Net Subscriber Change\"\n                    name=\"Subscribers\"\n                    dataKey=\"subscribers\"\n                    color=\"#4285F4\"\n                    info=\"The net change in the absolute number of subscribers.\"\n                />\n                <div className={classes.space}></div>\n                <LineGraph\n                    data={churnRateData}\n                    title=\"Subscriber Churn Rate\"\n                    name=\"Churn Rate\"\n                    dataKey=\"churnRate\"\n                    color=\"#EA4335\"\n                    info=\"The rate at which customers stop subscribing.\"\n                />\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default SubscriberCharts;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Summary from \"./Summary\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: 20,\n        borderRadius: 0,\n        minHeight: 700,\n        maxHeight: 700,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n    },\n    details: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    button: {\n        padding: 15,\n        marginLeft: \"auto\",\n    },\n    upIcon: {\n        verticalAlign: \"bottom\",\n        fontSize: 32,\n    },\n    up: {\n        color: theme.palette.success.main,\n    },\n    downIcon: {\n        verticalAlign: \"bottom\",\n        fontSize: 32,\n    },\n    down: {\n        color: theme.palette.error.main,\n    },\n    small: {\n        fontSize: 14,\n    },\n}));\n\nexport default function RevenueSummary(props) {\n    const classes = useStyles();\n    const { data } = props;\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent className={classes.details}>\n                <Summary\n                    title=\"Total Billed Revenue\"\n                    period={data.period}\n                    number={`₹ ${data.totalRevenue}`}\n                    change={`₹ ${data.totalRevenueChange}`}\n                    delta={data.totalRevenueDelta}\n                />\n                <Divider />\n                <Summary\n                    title=\"Recovered Revenue\"\n                    period={data.period}\n                    number={`₹ ${data.recoveredRevenue}`}\n                    change={`₹ ${data.recoveredRevenueChange}`}\n                    delta={data.recoveredRevenueDelta}\n                />\n                <Divider />\n                <Summary\n                    title=\"Revenue Past Due\"\n                    period={data.period}\n                    number={`₹ ${data.dueRevenue}`}\n                    change={`₹ ${data.dueRevenueChange}`}\n                    delta={data.dueRevenueDelta}\n                />\n            </CardContent>\n        </Card>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    ResponsiveContainer,\n    BarChart,\n    Bar,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n} from \"recharts\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n    style: {\n        margin: 16,\n        marginBottom: 88,\n        width: \"auto\",\n        height: 240,\n        justifyContent: \"center\",\n    },\n    tooltip: {\n        justifyContent: \"center\",\n        padding: 8,\n    },\n    item: {\n        margin: 2,\n    },\n    parent: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    subtitle: {\n        color: \"#777777\",\n    },\n}));\n\nconst months = {\n    Jan: \"January\",\n    Feb: \"February\",\n    Mar: \"March\",\n    Apr: \"April\",\n    May: \"May\",\n    Jun: \"June\",\n    Jul: \"July\",\n    Aug: \"August\",\n    Sep: \"September\",\n    Oct: \"October\",\n    Nov: \"November\",\n    Dec: \"December\",\n};\n\nconst colors = {\n    blues: [\"#90CAF9\", \"#42A5F5\", \"#1E88E5\", \"#1565C0\", \"#0D47A1\"],\n    reds: [\"#FFCDD2\", \"#E57373\", \"#F44336\", \"#D32F2F\", \"#B71C1C\"],\n    purples: [\"#E1BEE7\", \"#BA68C8\", \"#9C27B0\", \"#7B1FA2\", \"#4A148C\"],\n    oranges: [\"#FFE0B2\", \"#FFB74D\", \"#FF9800\", \"#F57C00\", \"#E65100\"],\n};\n\nfunction BarGraph(props, theme) {\n    const classes = useStyles();\n    const { title, names, info, data, keys, color } = props;\n\n    const CustomTooltip = ({ active, payload, label }) => {\n        if (active && payload) {\n            return (\n                <Paper className={classes.tooltip} elevation={4}>\n                    <div className={classes.item}>\n                        {`Month: ${months[label]}`}\n                    </div>\n                    <hr />\n                    {props.names.map((name, index) => (\n                        <div className={classes.parent}>\n                            <div\n                                className={classes.item}\n                                style={{ color: colors[color][index] }}\n                            >\n                                ◼\n                            </div>\n                            <div className={classes.item}>\n                                {`${name}: ${payload[index].value}`}\n                            </div>\n                        </div>\n                    ))}\n                </Paper>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <div className={classes.style}>\n            <Typography variant=\"subtitle1\" color=\"textPrimary\">\n                <div className={classes.title}>{title}</div>\n                <div className={classes.subtitle}>{info}</div>\n            </Typography>\n            <ResponsiveContainer>\n                <BarChart\n                    data={data}\n                    margin={{\n                        top: 20,\n                        right: 30,\n                        left: 20,\n                        bottom: 5,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"month\" />\n                    <YAxis />\n                    <Tooltip content={<CustomTooltip />} />\n                    <Legend />\n                    {keys.map((bar, index) => (\n                        <Bar\n                            name={names[index]}\n                            dataKey={bar}\n                            stackId=\"a\"\n                            fill={colors[color][index]}\n                        />\n                    ))}\n                </BarChart>\n            </ResponsiveContainer>\n        </div>\n    );\n}\n\nexport default BarGraph;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BarGraph from \"./BarGraph\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        borderRadius: 0,\n        minHeight: 700,\n        maxHeight: 700,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n    },\n}));\n\nfunction RevenueCharts(props) {\n    const classes = useStyles();\n\n    const { revenueData, transactionData } = props;\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <BarGraph\n                    data={revenueData}\n                    title=\"Revenue Status\"\n                    names={[\"Billed Revenue\", \"Revenue Past Due\"]}\n                    keys={[\"billedRevenue\", \"revenuePastDue\"]}\n                    info=\"The split-up of recovered and due revenue.\"\n                    color=\"blues\"\n                />\n                <BarGraph\n                    data={transactionData}\n                    title=\"Transactions Breakdown\"\n                    names={[\n                        \"Pending\",\n                        \"Payment Failed\",\n                        \"No Billing Info\",\n                        \"Cancelled\",\n                        \"Converted\",\n                    ]}\n                    keys={[\n                        \"pending\",\n                        \"paymentFailed\",\n                        \"noBillingInfo\",\n                        \"cancelled\",\n                        \"converted\",\n                    ]}\n                    info=\"The split-up of all transactions.\"\n                    color=\"reds\"\n                />\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default RevenueCharts;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Summary from \"./Summary\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: 20,\n        borderRadius: 0,\n        minHeight: 700,\n        maxHeight: 700,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n    },\n    details: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    button: {\n        padding: 15,\n        marginLeft: \"auto\",\n    },\n    upIcon: {\n        verticalAlign: \"bottom\",\n        fontSize: 32,\n    },\n    up: {\n        color: theme.palette.success.main,\n    },\n    downIcon: {\n        verticalAlign: \"bottom\",\n        fontSize: 32,\n    },\n    down: {\n        color: theme.palette.error.main,\n    },\n    small: {\n        fontSize: 14,\n    },\n}));\n\nexport default function PlanSummary(props) {\n    const classes = useStyles();\n    const { data } = props;\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent className={classes.details}>\n                <Summary\n                    title=\"Total Plans Converted\"\n                    period={data.period}\n                    number={data.conversions}\n                    change={data.conversionsChange}\n                    delta={data.conversionsDelta}\n                />\n                <Divider />\n                <Summary\n                    title=\"Plans Conversion Rate\"\n                    period={data.period}\n                    number={`${data.conversionRate}%`}\n                    change={`${data.conversionRateChange}%`}\n                    delta={data.conversionRateDelta}\n                />\n                <Divider />\n                <Summary\n                    title=\"Plans Cancellation Rate\"\n                    period={data.period}\n                    number={`${data.cancellationRate}%`}\n                    change={`${data.cancellationRateChange}%`}\n                    delta={data.cancellationRateDelta}\n                />\n            </CardContent>\n        </Card>\n    );\n}\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BarGraph from \"./BarGraph\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        borderRadius: 0,\n        minHeight: 700,\n        maxHeight: 700,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n    },\n}));\n\nfunction PlanCharts(props) {\n    const classes = useStyles();\n\n    const { planData, conversionData } = props;\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <BarGraph\n                    data={planData}\n                    title=\"Plans Breakdown\"\n                    names={[\n                        \"Gold Plan\",\n                        \"Silver Plan\",\n                        \"Bronze Plan\",\n                        \"Platinum Plan\",\n                    ]}\n                    keys={[\n                        \"goldPlan\",\n                        \"silverPlan\",\n                        \"bronzePlan\",\n                        \"platinumPlan\",\n                    ]}\n                    info=\"The split-up of net subscribers for each plan.\"\n                    color=\"purples\"\n                />\n                <BarGraph\n                    data={conversionData}\n                    title=\"Conversions Breakdown\"\n                    names={[\"New\", \"Reactivated\", \"Churned\"]}\n                    keys={[\"new\", \"reactivated\", \"churned\"]}\n                    info=\"The split-up of all monthly changes in your customer base.\"\n                    color=\"oranges\"\n                />\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default PlanCharts;\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/actions\";\nimport WorkspaceToolbar from \"../common/WorkspaceToolbar\";\nimport NoRecords from \"../common/NoRecords\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SubscriptionsSummary from \"./SubscriptionsSummary\";\nimport SubscriberCharts from \"./SubscriberCharts\";\nimport RevenueSummary from \"./RevenueSummary\";\nimport RevenueCharts from \"./RevenueCharts\";\nimport PlanSummary from \"./PlanSummary\";\nimport PlanCharts from \"./PlanCharts\";\n\nconst useStyles = makeStyles((theme) => ({\n    item: {\n        padding: 8,\n    },\n    title: {\n        margin: 24,\n        marginBottom: 0,\n    },\n}));\n\nfunction Analytics(props) {\n    const classes = useStyles();\n    const { analytics, fetchAnalytics } = props;\n\n    useEffect(() => {\n        fetchAnalytics();\n    }, [fetchAnalytics]);\n\n    if (analytics) {\n        const subscriptionSummary = analytics.subscriptionSummary;\n        const revenueSummary = analytics.revenueSummary;\n        const planSummary = analytics.planSummary;\n        const subscriberData = analytics.subscriberData;\n        const churnRateData = analytics.churnRateData;\n        const revenueData = analytics.revenueData;\n        const transactionData = analytics.transactionData;\n        const planData = analytics.planData;\n        const conversionData = analytics.conversionData;\n\n        return (\n            <div className={classes.box}>\n                <WorkspaceToolbar title=\"Analytics\" />\n                <div>\n                    <Typography\n                        variant=\"h6\"\n                        color=\"textPrimary\"\n                        className={classes.title}\n                    >\n                        Subscribers\n                    </Typography>\n                    <Grid container={true}>\n                        <Grid\n                            item={true}\n                            className={classes.item}\n                            xs={12}\n                            md={3}\n                        >\n                            <SubscriptionsSummary data={subscriptionSummary} />\n                        </Grid>\n                        <Grid\n                            item={true}\n                            className={classes.item}\n                            xs={12}\n                            md={9}\n                        >\n                            <SubscriberCharts\n                                subscriberData={subscriberData}\n                                churnRateData={churnRateData}\n                            />\n                        </Grid>\n                    </Grid>\n                </div>\n                <div>\n                    <Typography\n                        variant=\"h6\"\n                        color=\"textPrimary\"\n                        className={classes.title}\n                    >\n                        Revenue\n                    </Typography>\n                    <Grid container={true} className={classes.container}>\n                        <Grid\n                            item={true}\n                            className={classes.item}\n                            xs={12}\n                            md={3}\n                        >\n                            <RevenueSummary data={revenueSummary} />\n                        </Grid>\n                        <Grid\n                            item={true}\n                            className={classes.item}\n                            xs={12}\n                            md={9}\n                        >\n                            <RevenueCharts\n                                revenueData={revenueData}\n                                transactionData={transactionData}\n                            />\n                        </Grid>\n                    </Grid>\n                </div>\n                <div>\n                    <Typography\n                        variant=\"h6\"\n                        color=\"textPrimary\"\n                        className={classes.title}\n                    >\n                        Plans\n                    </Typography>\n                    <Grid container={true} className={classes.container}>\n                        <Grid\n                            item={true}\n                            className={classes.item}\n                            xs={12}\n                            md={3}\n                        >\n                            <PlanSummary data={planSummary} />\n                        </Grid>\n                        <Grid\n                            item={true}\n                            className={classes.item}\n                            xs={12}\n                            md={9}\n                        >\n                            <PlanCharts\n                                planData={planData}\n                                conversionData={conversionData}\n                            />\n                        </Grid>\n                    </Grid>\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <NoRecords\n                message=\"Sorry, we do not have enough data to show insights yet.\"\n                image=\"assets/images/empty-analytics.svg\"\n            />\n        );\n    }\n}\n\nfunction mapStateToProps(props) {\n    return {\n        analytics: props.analytics,\n    };\n}\n\nconst mapDispatchToProps = {\n    fetchAnalytics: actions.fetchAnalytics,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Analytics);\n"],"sourceRoot":""}