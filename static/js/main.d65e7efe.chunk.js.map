{"version":3,"sources":["server/api.js","common/countries.js","common/crossStorage.js","redux/actions.js","layouts/AddDialog.js","layouts/MainToolbar.js","layouts/MainDrawer.js","workspace/configuration.js","error/configuration.js","routes.js","workspace/common/FormDrawer.js","workspace/account/AccountFormDrawer.js","workspace/account/EditAccount.js","workspace/subscription/SubscriptionFormDrawer.js","workspace/transaction/TransactionFormDrawer.js","workspace/plan/PlanFormDrawer.js","workspace/api-key/APIKeyFormDrawer.js","workspace/plan/EditPlan.js","workspace/invoice/InvoiceFormDrawer.js","workspace/invoice/EditInvoice.js","workspace/transaction/EditTransaction.js","layouts/MainLayout.js","layouts/index.js","common/PrimaryLayout.js","theme.js","App.js","serviceWorker.js","redux/reducers.js","redux/store.js","index.js","workspace/common/CountrySelect.js","workspace/common/Lookup.js","workspace/common/FormsyTextField.js","workspace/common/RecordForm.js","redux/actionTypes.js"],"names":["initializeAccount","account","createdAt","Date","updatedAt","initializeSubscription","subscription","startsAt","activatedAt","cancelledAt","pausedAt","currentPeriodStart","currentPeriodEnd","initializeInvoice","invoice","closedAt","dueAt","items","i","length","item","startedAt","endedAt","initializeTransaction","transaction","initializePlan","plan","newClient","version","axios","defaults","baseURL","process","newAccount","a","post","response","data","saveAccount","put","id","getAccount","get","getAccounts","params","accounts","records","newSubscription","saveSubscription","getSubscription","getSubscriptions","subscriptions","saveInvoice","getInvoice","getInvoices","invoices","newTransaction","saveTransaction","getTransaction","getTransactions","transactions","newPlan","savePlan","getPlan","getPlans","plans","getAnalytics","code","label","findCountryByCode","index","array","value","comparator","middle","high","low","binarySearch","console","log","undefined","connection","result","crossStorage","CrossStorageClient","onConnect","newCrossStorage","client","handleError","dispatch","error","message","JSON","parse","stringify","showNotification","newAPIKey","type","ActionTypes","payload","createAccount","fetchAccounts","fetchAccountComplete","fetchAccount","fetchAccountsComplete","editAccount","clearAccount","createSubscription","fetchSubscriptions","fetchSubscriptionComplete","fetchSubscription","fetchSubscriptionsComplete","clearSubscription","newInvoice","fetchInvoices","fetchInvoiceComplete","fetchInvoice","fetchInvoicesComplete","editInvoice","clearInvoice","createTransaction","fetchTransactions","fetchTransactionComplete","fetchTransaction","fetchTransactionsComplete","editTransaction","clearTransaction","createPlan","fetchPlans","fetchPlanComplete","fetchPlan","fetchPlansComplete","editPlan","clearPlan","fetchAnalyticsComplete","analytics","fetchAnalytics","closeDialog","category","closeNotification","fetchUserComplete","user","fetchUser","csClient","headers","common","Authorization","accessToken","logout","del","useStyles","makeStyles","theme","root","minHeight","minWidth","overflow","main","padding","groupTitle","fontSize","backgroundColor","paddingLeft","marginTop","marginBottom","textTransform","icon","display","marginLeft","marginRight","link","color","textDecoration","add","background","width","borderRadius","cursor","linkTitle","textAlign","groups","title","links","action","mapDispatchToProps","connect","props","classes","onClose","open","anchor","makeHandler","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","className","map","group","Grid","container","spacing","onClick","Icon","Typography","logoButton","height","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","palette","primary","appBarShift","enteringScreen","toolbar","hide","buttons","addButton","paddingRight","logoutButton","dispay","actions","state","withRouter","toggleDrawer","drawerOpen","React","useState","addDialogAnchor","setAddDialogAnchor","AppBar","position","clsx","Toolbar","IconButton","edge","Button","src","alt","variant","size","event","currentTarget","firstName","Boolean","flexShrink","whiteSpace","drawerClose","overflowX","alignItems","justifyContent","mixins","navigationGroups","useTheme","handleCloseDrawer","Drawer","paper","direction","Divider","Fragment","key","List","ListItem","button","url","history","push","ListItemIcon","ListItemText","workspaceConfiguration","path","component","lazy","exact","errorConfiguration","routes","to","flexDirection","breakpoints","down","rootWide","navigation","paddingTop","paddingBottom","listItem","content","overflowY","scrollbarWidth","contentWide","wideDrawerWidth","actionsWide","spring","flexGrow","FormDrawer","onSave","options","updateLookupOptions","showMore","setShowMore","values","setValues","tabIndex","setTabIndex","saveDisabled","setSaveDisabled","elevation","groupIndex","identifier","selected","tabText","RecordForm","onValueChange","field","newValues","onValidityChange","Box","boxShadow","disabled","requestValues","forEach","children","toRequest","dialogAction","extraAction","defaultProps","required","readOnly","quickAdd","unique","hidden","tooltip","multipleValues","defaultValue","validations","validationErrors","isAlphanumeric","minLength","maxLength","isEmail","AccountFormDrawer","extractValues","onCancel","isNumeric","isInt","rows","SubscriptionFormDrawer","TransactionFormDrawer","PlanFormDrawer","APIKeyFormDrawer","InvoiceFormDrawer","Alert","easeOut","contentShift","progress","maxWidth","maxHeight","suspense","top","left","layouts","openDialog","notification","setDrawerOpen","handleCloseNotification","reason","fallback","CircularProgress","renderRoutes","Snackbar","autoHideDuration","SnackbarContent","severityMap","SUCCESS","ERROR","severity","renderNotification","withStyles","default","text","Layout","createMuiTheme","keys","xs","sm","md","lg","xl","overrides","black","white","light","dark","contrastText","secondary","warning","info","success","grey","A100","A200","A400","A700","contrastThreshold","tonalOffset","hint","divider","level2","level1","active","hover","hoverOpacity","selectedOpacity","disabledBackground","disabledOpacity","focus","focusOpacity","activatedOpacity","shadows","typography","htmlFontSize","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","h1","fontWeight","lineHeight","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","shape","easeInOut","easeIn","shortest","shorter","short","standard","complex","mobileStepper","speedDial","modal","snackbar","nprogress","checking","checkingProgress","checkingText","isUserLoading","useEffect","CssBaseline","ThemeProvider","thickness","window","location","hostname","match","rootReducer","combineReducers","internalRedirect","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","option","withFormsy","fullWidth","onChange","Autocomplete","countries","autoHighlight","getOptionLabel","renderOption","isoCode","String","fromCodePoint","toUpperCase","replace","character","charCodeAt","renderInput","TextField","inputProps","autoComplete","updateOptions","renderOptionLabel","name","inputValue","setInputValue","onInputChange","errorMessage","setValue","helperText","chips","flexWrap","chip","margin","maginLeft","startDate","endDate","apis","account_lookup","plan_lookup","contexts","context","api","search","this","setOptions","prepareLookupContexts","makeChangeHandler","target","makeRangeHandler","newValue","Object","assign","makeDateChangeHandler","which","date","format","makeLookupChangeHandler","getSelectedTitle","find","utils","DateFnsUtils","onValid","onInvalid","fieldIndex","preventFirstValidation","multiline","inputVariant","FormGroup","FormControlLabel","control","Switch","FormControl","InputLabel","Select","labelId","MenuItem","startTitle","endTitle","renderSelect","multiple","renderValue","Chip","renderMultiSelect","searchText","userName","lastName","NEW_API_KEY","NEW_ACCOUNT","FETCH_ACCOUNT_COMPLETE","FETCH_ACCOUNTS_COMPLETE","EDIT_ACCOUNT","CLEAR_ACCOUNT","NEW_SUBSCRIPTION","FETCH_SUBSCRIPTION_COMPLETE","FETCH_SUBSCRIPTIONS_COMPLETE","EDIT_SUBSCRIPTION","CLEAR_SUBSCRIPTION","NEW_INVOICE","FETCH_INVOICE_COMPLETE","FETCH_INVOICES_COMPLETE","EDIT_INVOICE","CLEAR_INVOICE","NEW_TRANSACTION","FETCH_TRANSACTION_COMPLETE","FETCH_TRANSACTIONS_COMPLETE","EDIT_TRANSACTION","CLEAR_TRANSACTION","NEW_PLAN","FETCH_PLAN_COMPLETE","FETCH_PLANS_COMPLETE","EDIT_PLAN","CLEAR_PLAN","FETCH_ANALYTICS_COMPLETE","CLOSE_DIALOG","SHOW_NOTIFICATION","CLOSE_NOTIFICATION","FETCH_USER_COMPLETE","FETCH_USER_FAILED","INTERNAL_REDIRECT"],"mappings":"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","file":"static/js/main.d65e7efe.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst DEFAULT_API_VERSION = \"v1\";\n\nfunction initializeAccount(account) {\n    account.createdAt = new Date(account.createdAt);\n    account.updatedAt = new Date(account.updatedAt);\n    return account;\n}\n\nfunction initializeSubscription(subscription) {\n    const {\n        startsAt,\n        activatedAt,\n        cancelledAt,\n        pausedAt,\n        currentPeriodStart,\n        currentPeriodEnd,\n        createdAt,\n        updatedAt,\n    } = subscription;\n\n    subscription.startsAt = new Date(startsAt);\n    subscription.activatedAt = activatedAt ? new Date(activatedAt) : null;\n    subscription.cancelledAt = cancelledAt ? new Date(cancelledAt) : null;\n    subscription.pausedAt = pausedAt ? new Date(pausedAt) : null;\n    subscription.currentPeriodStart = currentPeriodStart\n        ? new Date(currentPeriodStart)\n        : null;\n    subscription.currentPeriodEnd = currentPeriodEnd\n        ? new Date(currentPeriodEnd)\n        : null;\n    subscription.createdAt = new Date(createdAt);\n    subscription.updatedAt = new Date(updatedAt);\n\n    return subscription;\n}\n\nfunction initializeInvoice(invoice) {\n    const { closedAt, dueAt, updatedAt, createdAt, items } = invoice;\n    invoice.closedAt = closedAt ? new Date(closedAt) : null;\n    invoice.dueAt = new Date(dueAt);\n    invoice.updatedAt = new Date(updatedAt);\n    invoice.createdAt = new Date(createdAt);\n\n    for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        item.startedAt = new Date(item.startedAt);\n        item.endedAt = new Date(item.endedAt);\n    }\n\n    return invoice;\n}\n\nfunction initializeTransaction(transaction) {\n    transaction.createdAt = new Date(transaction.createdAt);\n    transaction.updatedAt = new Date(transaction.updatedAt);\n\n    return transaction;\n}\n\nfunction initializePlan(plan) {\n    plan.createdAt = new Date(plan.createdAt);\n    plan.updatedAt = new Date(plan.updatedAt);\n\n    return plan;\n}\n\nexport function newClient(version = DEFAULT_API_VERSION) {\n    axios.defaults.baseURL = `${process.env.REACT_APP_API_URL}/api/${version}`;\n\n    return {\n        // Account\n\n        newAccount: async (account) => {\n            const response = await axios.post(`/accounts`, account);\n            return initializeAccount(response.data);\n        },\n\n        saveAccount: async (account) => {\n            const response = await axios.put(\n                `/accounts/${account.id}`,\n                account\n            );\n            return initializeAccount(response.data);\n        },\n\n        getAccount: async (id) => {\n            const response = await axios.get(`/accounts/${id}`);\n            return initializeAccount(response.data);\n        },\n\n        getAccounts: async (params) => {\n            const response = await axios.get(`/accounts`, { params });\n            const accounts = response.data;\n            const { records } = accounts;\n            for (let i = 0; i < records.length; i++) {\n                records[i] = initializeAccount(records[i]);\n            }\n            return accounts;\n        },\n\n        // Subscription\n        newSubscription: async (subscription) => {\n            const response = await axios.post(`/subscriptions`, subscription);\n            return initializeSubscription(response.data);\n        },\n\n        saveSubscription: async (subscription) => {\n            const response = await axios.put(\n                `/subscriptions/${subscription.id}`,\n                subscription\n            );\n            return initializeSubscription(response.data);\n        },\n\n        getSubscription: async (id) => {\n            const response = await axios.get(`/subscriptions/${id}`);\n            return initializeSubscription(response.data);\n        },\n\n        getSubscriptions: async (params) => {\n            const response = await axios.get(`/subscriptions`, { params });\n            const subscriptions = response.data;\n            const { records } = subscriptions;\n            for (let i = 0; i < records.length; i++) {\n                records[i] = initializeSubscription(records[i]);\n            }\n            return subscriptions;\n        },\n\n        // Invoice\n        saveInvoice: async (invoice) => {\n            const response = await axios.put(\n                `/invoices/${invoice.id}`,\n                invoice\n            );\n            return initializeInvoice(response.data);\n        },\n\n        getInvoice: async (id) => {\n            const response = await axios.get(`/invoices/${id}`);\n            return initializeInvoice(response.data);\n        },\n\n        getInvoices: async (params) => {\n            const response = await axios.get(`/invoices`, { params });\n            const invoices = response.data;\n            const { records } = invoices;\n            for (let i = 0; i < records.length; i++) {\n                records[i] = initializeInvoice(records[i]);\n            }\n            return invoices;\n        },\n\n        // Transaction\n        newTransaction: async (transaction) => {\n            const response = await axios.post(`/transactions`, transaction);\n            return initializeTransaction(response.data);\n        },\n\n        saveTransaction: async (transaction) => {\n            const response = await axios.put(\n                `/transactions/${transaction.id}`,\n                transaction\n            );\n            return initializeTransaction(response.data);\n        },\n\n        getTransaction: async (id) => {\n            const response = await axios.get(`/transactions/${id}`);\n            return initializeTransaction(response.data);\n        },\n\n        getTransactions: async (params) => {\n            const response = await axios.get(`/transactions`, { params });\n            const transactions = response.data;\n            const { records } = transactions;\n            for (let i = 0; i < records.length; i++) {\n                records[i] = initializeTransaction(records[i]);\n            }\n            return transactions;\n        },\n\n        // Plan\n\n        newPlan: async (plan) => {\n            const response = await axios.post(`/plans`, plan);\n            return initializePlan(response);\n        },\n\n        savePlan: async (plan) => {\n            const response = await axios.put(`/plans/${plan.id}`, plan);\n            return initializePlan(response);\n        },\n\n        getPlan: async (id) => {\n            const response = await axios.get(`/plans/${id}`);\n            return initializePlan(response.data);\n        },\n\n        getPlans: async (params) => {\n            const response = await axios.get(`/plans`, { params });\n            const plans = response.data;\n            const { records } = plans;\n            for (let i = 0; i < records.length; i++) {\n                records[i] = initializePlan(records[i]);\n            }\n            return plans;\n        },\n\n        // Analytics\n        getAnalytics: (params) => axios.get(`/analytics`, { params }),\n    };\n}\n","/* Source: https://bitbucket.org/atlassian/atlaskit-mk-2/raw/4ad0e56649c3e6c973e226b7efaeb28cb240ccb0/packages/core/select/src/data/countries.js */\nexport const data = [\n    { code: \"AD\", label: \"Andorra\" },\n    { code: \"AE\", label: \"United Arab Emirates\" },\n    { code: \"AF\", label: \"Afghanistan\" },\n    { code: \"AG\", label: \"Antigua and Barbuda\" },\n    { code: \"AI\", label: \"Anguilla\" },\n    { code: \"AL\", label: \"Albania\" },\n    { code: \"AM\", label: \"Armenia\" },\n    { code: \"AO\", label: \"Angola\" },\n    { code: \"AQ\", label: \"Antarctica\" },\n    { code: \"AR\", label: \"Argentina\" },\n    { code: \"AS\", label: \"American Samoa\" },\n    { code: \"AT\", label: \"Austria\" },\n    { code: \"AU\", label: \"Australia\" },\n    { code: \"AW\", label: \"Aruba\" },\n    { code: \"AX\", label: \"Alland Islands\" },\n    { code: \"AZ\", label: \"Azerbaijan\" },\n    { code: \"BA\", label: \"Bosnia and Herzegovina\" },\n    { code: \"BB\", label: \"Barbados\" },\n    { code: \"BD\", label: \"Bangladesh\" },\n    { code: \"BE\", label: \"Belgium\" },\n    { code: \"BF\", label: \"Burkina Faso\" },\n    { code: \"BG\", label: \"Bulgaria\" },\n    { code: \"BH\", label: \"Bahrain\" },\n    { code: \"BI\", label: \"Burundi\" },\n    { code: \"BJ\", label: \"Benin\" },\n    { code: \"BL\", label: \"Saint Barthelemy\" },\n    { code: \"BM\", label: \"Bermuda\" },\n    { code: \"BN\", label: \"Brunei Darussalam\" },\n    { code: \"BO\", label: \"Bolivia\" },\n    { code: \"BR\", label: \"Brazil\" },\n    { code: \"BS\", label: \"Bahamas\" },\n    { code: \"BT\", label: \"Bhutan\" },\n    { code: \"BV\", label: \"Bouvet Island\" },\n    { code: \"BW\", label: \"Botswana\" },\n    { code: \"BY\", label: \"Belarus\" },\n    { code: \"BZ\", label: \"Belize\" },\n    { code: \"CA\", label: \"Canada\" },\n    { code: \"CC\", label: \"Cocos (Keeling) Islands\" },\n    { code: \"CD\", label: \"Congo, Democratic Republic of the\" },\n    { code: \"CF\", label: \"Central African Republic\" },\n    { code: \"CG\", label: \"Congo, Republic of the\" },\n    { code: \"CH\", label: \"Switzerland\" },\n    { code: \"CI\", label: \"Cote d'Ivoire\" },\n    { code: \"CK\", label: \"Cook Islands\" },\n    { code: \"CL\", label: \"Chile\" },\n    { code: \"CM\", label: \"Cameroon\" },\n    { code: \"CN\", label: \"China\" },\n    { code: \"CO\", label: \"Colombia\" },\n    { code: \"CR\", label: \"Costa Rica\" },\n    { code: \"CU\", label: \"Cuba\" },\n    { code: \"CV\", label: \"Cape Verde\" },\n    { code: \"CW\", label: \"Curacao\" },\n    { code: \"CX\", label: \"Christmas Island\" },\n    { code: \"CY\", label: \"Cyprus\" },\n    { code: \"CZ\", label: \"Czech Republic\" },\n    { code: \"DE\", label: \"Germany\" },\n    { code: \"DJ\", label: \"Djibouti\" },\n    { code: \"DK\", label: \"Denmark\" },\n    { code: \"DM\", label: \"Dominica\" },\n    { code: \"DO\", label: \"Dominican Republic\" },\n    { code: \"DZ\", label: \"Algeria\" },\n    { code: \"EC\", label: \"Ecuador\" },\n    { code: \"EE\", label: \"Estonia\" },\n    { code: \"EG\", label: \"Egypt\" },\n    { code: \"EH\", label: \"Western Sahara\" },\n    { code: \"ER\", label: \"Eritrea\" },\n    { code: \"ES\", label: \"Spain\" },\n    { code: \"ET\", label: \"Ethiopia\" },\n    { code: \"FI\", label: \"Finland\" },\n    { code: \"FJ\", label: \"Fiji\" },\n    { code: \"FK\", label: \"Falkland Islands (Malvinas)\" },\n    { code: \"FM\", label: \"Micronesia, Federated States of\" },\n    { code: \"FO\", label: \"Faroe Islands\" },\n    { code: \"FR\", label: \"France\" },\n    { code: \"GA\", label: \"Gabon\" },\n    { code: \"GB\", label: \"United Kingdom\" },\n    { code: \"GD\", label: \"Grenada\" },\n    { code: \"GE\", label: \"Georgia\" },\n    { code: \"GF\", label: \"French Guiana\" },\n    { code: \"GG\", label: \"Guernsey\" },\n    { code: \"GH\", label: \"Ghana\" },\n    { code: \"GI\", label: \"Gibraltar\" },\n    { code: \"GL\", label: \"Greenland\" },\n    { code: \"GM\", label: \"Gambia\" },\n    { code: \"GN\", label: \"Guinea\" },\n    { code: \"GP\", label: \"Guadeloupe\" },\n    { code: \"GQ\", label: \"Equatorial Guinea\" },\n    { code: \"GR\", label: \"Greece\" },\n    { code: \"GS\", label: \"South Georgia and the South Sandwich Islands\" },\n    { code: \"GT\", label: \"Guatemala\" },\n    { code: \"GU\", label: \"Guam\" },\n    { code: \"GW\", label: \"Guinea-Bissau\" },\n    { code: \"GY\", label: \"Guyana\" },\n    { code: \"HK\", label: \"Hong Kong\" },\n    { code: \"HM\", label: \"Heard Island and McDonald Islands\" },\n    { code: \"HN\", label: \"Honduras\" },\n    { code: \"HR\", label: \"Croatia\" },\n    { code: \"HT\", label: \"Haiti\" },\n    { code: \"HU\", label: \"Hungary\" },\n    { code: \"ID\", label: \"Indonesia\" },\n    { code: \"IE\", label: \"Ireland\" },\n    { code: \"IL\", label: \"Israel\" },\n    { code: \"IM\", label: \"Isle of Man\" },\n    { code: \"IN\", label: \"India\" },\n    { code: \"IO\", label: \"British Indian Ocean Territory\" },\n    { code: \"IQ\", label: \"Iraq\" },\n    { code: \"IR\", label: \"Iran, Islamic Republic of\" },\n    { code: \"IS\", label: \"Iceland\" },\n    { code: \"IT\", label: \"Italy\" },\n    { code: \"JE\", label: \"Jersey\" },\n    { code: \"JM\", label: \"Jamaica\" },\n    { code: \"JO\", label: \"Jordan\" },\n    { code: \"JP\", label: \"Japan\" },\n    { code: \"KE\", label: \"Kenya\" },\n    { code: \"KG\", label: \"Kyrgyzstan\" },\n    { code: \"KH\", label: \"Cambodia\" },\n    { code: \"KI\", label: \"Kiribati\" },\n    { code: \"KM\", label: \"Comoros\" },\n    { code: \"KN\", label: \"Saint Kitts and Nevis\" },\n    { code: \"KP\", label: \"Korea, Democratic People's Republic of\" },\n    { code: \"KR\", label: \"Korea, Republic of\" },\n    { code: \"KW\", label: \"Kuwait\" },\n    { code: \"KY\", label: \"Cayman Islands\" },\n    { code: \"KZ\", label: \"Kazakhstan\" },\n    { code: \"LA\", label: \"Lao People's Democratic Republic\" },\n    { code: \"LB\", label: \"Lebanon\" },\n    { code: \"LC\", label: \"Saint Lucia\" },\n    { code: \"LI\", label: \"Liechtenstein\" },\n    { code: \"LK\", label: \"Sri Lanka\" },\n    { code: \"LR\", label: \"Liberia\" },\n    { code: \"LS\", label: \"Lesotho\" },\n    { code: \"LT\", label: \"Lithuania\" },\n    { code: \"LU\", label: \"Luxembourg\" },\n    { code: \"LV\", label: \"Latvia\" },\n    { code: \"LY\", label: \"Libya\" },\n    { code: \"MA\", label: \"Morocco\" },\n    { code: \"MC\", label: \"Monaco\" },\n    { code: \"MD\", label: \"Moldova, Republic of\" },\n    { code: \"ME\", label: \"Montenegro\" },\n    { code: \"MF\", label: \"Saint Martin (French part)\" },\n    { code: \"MG\", label: \"Madagascar\" },\n    { code: \"MH\", label: \"Marshall Islands\" },\n    { code: \"MK\", label: \"Macedonia, the Former Yugoslav Republic of\" },\n    { code: \"ML\", label: \"Mali\" },\n    { code: \"MM\", label: \"Myanmar\" },\n    { code: \"MN\", label: \"Mongolia\" },\n    { code: \"MO\", label: \"Macao\" },\n    { code: \"MP\", label: \"Northern Mariana Islands\" },\n    { code: \"MQ\", label: \"Martinique\" },\n    { code: \"MR\", label: \"Mauritania\" },\n    { code: \"MS\", label: \"Montserrat\" },\n    { code: \"MT\", label: \"Malta\" },\n    { code: \"MU\", label: \"Mauritius\" },\n    { code: \"MV\", label: \"Maldives\" },\n    { code: \"MW\", label: \"Malawi\" },\n    { code: \"MX\", label: \"Mexico\" },\n    { code: \"MY\", label: \"Malaysia\" },\n    { code: \"MZ\", label: \"Mozambique\" },\n    { code: \"NA\", label: \"Namibia\" },\n    { code: \"NC\", label: \"New Caledonia\" },\n    { code: \"NE\", label: \"Niger\" },\n    { code: \"NF\", label: \"Norfolk Island\" },\n    { code: \"NG\", label: \"Nigeria\" },\n    { code: \"NI\", label: \"Nicaragua\" },\n    { code: \"NL\", label: \"Netherlands\" },\n    { code: \"NO\", label: \"Norway\" },\n    { code: \"NP\", label: \"Nepal\" },\n    { code: \"NR\", label: \"Nauru\" },\n    { code: \"NU\", label: \"Niue\" },\n    { code: \"NZ\", label: \"New Zealand\" },\n    { code: \"OM\", label: \"Oman\" },\n    { code: \"PA\", label: \"Panama\" },\n    { code: \"PE\", label: \"Peru\" },\n    { code: \"PF\", label: \"French Polynesia\" },\n    { code: \"PG\", label: \"Papua New Guinea\" },\n    { code: \"PH\", label: \"Philippines\" },\n    { code: \"PK\", label: \"Pakistan\" },\n    { code: \"PL\", label: \"Poland\" },\n    { code: \"PM\", label: \"Saint Pierre and Miquelon\" },\n    { code: \"PN\", label: \"Pitcairn\" },\n    { code: \"PR\", label: \"Puerto Rico\" },\n    { code: \"PS\", label: \"Palestine, State of\" },\n    { code: \"PT\", label: \"Portugal\" },\n    { code: \"PW\", label: \"Palau\" },\n    { code: \"PY\", label: \"Paraguay\" },\n    { code: \"QA\", label: \"Qatar\" },\n    { code: \"RE\", label: \"Reunion\" },\n    { code: \"RO\", label: \"Romania\" },\n    { code: \"RS\", label: \"Serbia\" },\n    { code: \"RU\", label: \"Russian Federation\" },\n    { code: \"RW\", label: \"Rwanda\" },\n    { code: \"SA\", label: \"Saudi Arabia\" },\n    { code: \"SB\", label: \"Solomon Islands\" },\n    { code: \"SC\", label: \"Seychelles\" },\n    { code: \"SD\", label: \"Sudan\" },\n    { code: \"SE\", label: \"Sweden\" },\n    { code: \"SG\", label: \"Singapore\" },\n    { code: \"SH\", label: \"Saint Helena\" },\n    { code: \"SI\", label: \"Slovenia\" },\n    { code: \"SJ\", label: \"Svalbard and Jan Mayen\" },\n    { code: \"SK\", label: \"Slovakia\" },\n    { code: \"SL\", label: \"Sierra Leone\" },\n    { code: \"SM\", label: \"San Marino\" },\n    { code: \"SN\", label: \"Senegal\" },\n    { code: \"SO\", label: \"Somalia\" },\n    { code: \"SR\", label: \"Suriname\" },\n    { code: \"SS\", label: \"South Sudan\" },\n    { code: \"ST\", label: \"Sao Tome and Principe\" },\n    { code: \"SV\", label: \"El Salvador\" },\n    { code: \"SX\", label: \"Sint Maarten (Dutch part)\" },\n    { code: \"SY\", label: \"Syrian Arab Republic\" },\n    { code: \"SZ\", label: \"Swaziland\" },\n    { code: \"TC\", label: \"Turks and Caicos Islands\" },\n    { code: \"TD\", label: \"Chad\" },\n    { code: \"TF\", label: \"French Southern Territories\" },\n    { code: \"TG\", label: \"Togo\" },\n    { code: \"TH\", label: \"Thailand\" },\n    { code: \"TJ\", label: \"Tajikistan\" },\n    { code: \"TK\", label: \"Tokelau\" },\n    { code: \"TL\", label: \"Timor-Leste\" },\n    { code: \"TM\", label: \"Turkmenistan\" },\n    { code: \"TN\", label: \"Tunisia\" },\n    { code: \"TO\", label: \"Tonga\" },\n    { code: \"TR\", label: \"Turkey\" },\n    { code: \"TT\", label: \"Trinidad and Tobago\" },\n    { code: \"TV\", label: \"Tuvalu\" },\n    { code: \"TW\", label: \"Taiwan, Province of China\" },\n    { code: \"TZ\", label: \"United Republic of Tanzania\" },\n    { code: \"UA\", label: \"Ukraine\" },\n    { code: \"UG\", label: \"Uganda\" },\n    { code: \"US\", label: \"United States\" },\n    { code: \"UY\", label: \"Uruguay\" },\n    { code: \"UZ\", label: \"Uzbekistan\" },\n    { code: \"VA\", label: \"Holy See (Vatican City State)\" },\n    { code: \"VC\", label: \"Saint Vincent and the Grenadines\" },\n    { code: \"VE\", label: \"Venezuela\" },\n    { code: \"VG\", label: \"British Virgin Islands\" },\n    { code: \"VI\", label: \"US Virgin Islands\" },\n    { code: \"VN\", label: \"Vietnam\" },\n    { code: \"VU\", label: \"Vanuatu\" },\n    { code: \"WF\", label: \"Wallis and Futuna\" },\n    { code: \"WS\", label: \"Samoa\" },\n    { code: \"XK\", label: \"Kosovo\" },\n    { code: \"YE\", label: \"Yemen\" },\n    { code: \"YT\", label: \"Mayotte\" },\n    { code: \"ZA\", label: \"South Africa\" },\n    { code: \"ZM\", label: \"Zambia\" },\n    { code: \"ZW\", label: \"Zimbabwe\" },\n];\n\nfunction binarySearch(array, value, comparator) {\n    let high = array.length - 1;\n    let low = 0;\n\n    if (value < array[low]) {\n        return -1;\n    }\n\n    if (value > array[high]) {\n        return -(high + 1);\n    }\n\n    let middle;\n    while (high >= low) {\n        middle = (high + low) >> 1;\n\n        if (comparator(array, value, middle) === 0) {\n            return middle;\n        } else if (comparator(array, value, middle) > 0) {\n            high = middle - 1;\n        } else {\n            low = middle + 1;\n        }\n    }\n\n    return -(middle + 1);\n}\n\nexport function findCountryByCode(code) {\n    const index = binarySearch(data, code, (array, value, middle) => {\n        console.log(\"CM\");\n        console.log(array[middle], value);\n        return value < array[middle].code\n            ? -1\n            : value > array[middle].code\n            ? 1\n            : 0;\n    });\n    return index >= 0 ? data[index] : undefined;\n}\n","import crossStorage from \"cross-storage\";\n\nconst newCrossStorage = async () => {\n    const result = new crossStorage.CrossStorageClient(\n        `${process.env.REACT_APP_WEBSITE_URL}/hub.html`\n    );\n    await result.onConnect();\n    return result;\n};\n\nexport default {\n    connection: newCrossStorage(),\n};\n","import * as ActionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nimport { newClient } from \"../server/api\";\nimport crossStorage from \"../common/crossStorage\";\n\nconst client = newClient();\n\nfunction handleError(dispatch, error, message) {\n    /* By default, if an instance of the Error class is printed, a lot of information is hidden.\n     * Therefore, we convert it to a regular object and then print it.\n     */\n    console.log(error);\n    console.log(JSON.parse(JSON.stringify(error)));\n    let action;\n    if (error.response) {\n        // Assuming that we receive a JSON.\n        action = showNotification(\n            error.response.data.message || message,\n            \"ERROR\"\n        );\n    } else {\n        action = showNotification(message, \"ERROR\");\n    }\n    dispatch(action);\n}\n\nexport function newAPIKey() {\n    return {\n        type: ActionTypes.NEW_API_KEY,\n        payload: null,\n    };\n}\n\n/* ACCOUNT\n *  1. newAccount()\n *  2. createAccount()\n *  3. saveAccount()\n *  4. fetchAccountComplete()\n *  5. fetchAccount()\n *  6. fetchAccountsComplete()\n *  7. fetchAccounts()\n *  8. editAccount()\n *  9. clearAccount()\n */\n\nexport function newAccount() {\n    return {\n        type: ActionTypes.NEW_ACCOUNT,\n        payload: null,\n    };\n}\n\n// TODO: Error boundaries\nexport function createAccount(account) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving account...\", \"LOADING\"));\n            await client.newAccount(account);\n            dispatch(fetchAccounts({}));\n            dispatch(\n                showNotification(\"Successfully created account\", \"SUCCESS\")\n            );\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to create account\");\n        }\n    };\n}\n\nexport function saveAccount(account) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving account...\", \"LOADING\"));\n            const newAccount = await client.saveAccount(account);\n            dispatch(fetchAccounts({}));\n            dispatch(fetchAccountComplete(newAccount));\n            dispatch(showNotification(\"Successfully saved account\", \"SUCCESS\"));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to save account\");\n        }\n    };\n}\n\nexport function fetchAccountComplete(account) {\n    return {\n        type: ActionTypes.FETCH_ACCOUNT_COMPLETE,\n        payload: account,\n    };\n}\n\nexport function fetchAccount(id) {\n    return async (dispatch) => {\n        try {\n            // dispatch(showNotification('Loading account...', 'LOADING'));\n            const account = await client.getAccount(id);\n            dispatch(fetchAccountComplete(account));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to fetch account\");\n        }\n    };\n}\n\nexport function fetchAccountsComplete(accounts) {\n    return {\n        type: ActionTypes.FETCH_ACCOUNTS_COMPLETE,\n        payload: accounts,\n    };\n}\n\nexport function fetchAccounts(params) {\n    return async (dispatch) => {\n        try {\n            // dispatch(showNotification('Loading accounts...', 'LOADING'));\n            const accounts = await client.getAccounts(params);\n            dispatch(fetchAccountsComplete(accounts));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to fetch accounts\");\n        }\n    };\n}\n\nexport function editAccount(account) {\n    return {\n        type: ActionTypes.EDIT_ACCOUNT,\n        payload: account,\n    };\n}\n\nexport function clearAccount() {\n    return {\n        type: ActionTypes.CLEAR_ACCOUNT,\n        payload: null,\n    };\n}\n\n/* SUBSCRIPTION\n *  1. newSubscription()\n *  2. createSubscription()\n *  3. saveSubscription() -> TODO\n *  4. fetchSubscriptionComplete()\n *  5. fetchSubscription()\n *  6. fetchSubscriptionsComplete()\n *  7. fetchSubscriptions()\n *  8. editSubscription() -> TODO\n *  9. clearSubscription()\n */\n\nexport function newSubscription() {\n    return {\n        type: ActionTypes.NEW_SUBSCRIPTION,\n        payload: null,\n    };\n}\n\nexport function createSubscription(subscription) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving subscription...\", \"LOADING\"));\n            await client.newSubscription(subscription);\n            dispatch(fetchSubscriptions({}));\n            dispatch(\n                showNotification(\"Successfully created subscription\", \"SUCCESS\")\n            );\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to create subscription.\");\n        }\n    };\n}\n\nexport function saveSubscription(subscription) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving subscription...\", \"LOADING\"));\n            const newSubscription = await client.saveSubscription(subscription);\n            dispatch(fetchSubscriptions());\n            dispatch(fetchSubscriptionComplete(newSubscription));\n            dispatch(\n                showNotification(\"Successfully saved subscription\", \"SUCCESS\")\n            );\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to save subscription\");\n        }\n    };\n}\n\nexport function fetchSubscriptionComplete(subscription) {\n    return {\n        type: ActionTypes.FETCH_SUBSCRIPTION_COMPLETE,\n        payload: subscription,\n    };\n}\n\nexport function fetchSubscription(id) {\n    return async (dispatch) => {\n        try {\n            // dispatch(showNotification('Loading subscription...', 'LOADING'));\n            const subscription = await client.getSubscription(id);\n            dispatch(fetchSubscriptionComplete(subscription));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to fetch subscription\");\n        }\n    };\n}\n\nexport function fetchSubscriptionsComplete(subscriptions) {\n    return {\n        type: ActionTypes.FETCH_SUBSCRIPTIONS_COMPLETE,\n        payload: subscriptions,\n    };\n}\n\nexport function fetchSubscriptions(params) {\n    return async (dispatch) => {\n        try {\n            const subscriptions = await client.getSubscriptions(params);\n            dispatch(fetchSubscriptionsComplete(subscriptions));\n        } catch (error) {\n\n            handleError(dispatch, error, \"Failed to fetch subscriptions\");\n        }\n    };\n}\n\nexport function editSubscription(subscription) {\n    return {\n        type: ActionTypes.EDIT_SUBSCRIPTION,\n        payload: subscription,\n    };\n}\n\nexport function clearSubscription() {\n    return {\n        type: ActionTypes.CLEAR_SUBSCRIPTION,\n        payload: null,\n    };\n}\n\n/* INVOICE\n *  1. newInvoice()\n *  2. createInvoice() -> TODO\n *  3. saveInvoice()\n *  4. fetchInvoiceComplete()\n *  5. fetchInvoice()\n *  6. fetchInvoicesComplete()\n *  7. fetchInvoices()\n *  8. editInvoice()\n *  9. clearInvoice()\n */\n\nexport function newInvoice() {\n    return {\n        type: ActionTypes.NEW_INVOICE,\n        payload: null,\n    };\n}\n\nexport function saveInvoice(invoice) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving invoice...\", \"LOADING\"));\n            const newInvoice = await client.saveInvoice(invoice);\n            dispatch(fetchInvoices({})); // BUG: This action does not acknowledge the filters.\n            dispatch(fetchInvoiceComplete(newInvoice));\n            dispatch(showNotification(\"Successfully saved invoice\", \"SUCCESS\"));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to save invoice\");\n        }\n    };\n}\n\nexport function fetchInvoiceComplete(invoice) {\n    return {\n        type: ActionTypes.FETCH_INVOICE_COMPLETE,\n        payload: invoice,\n    };\n}\n\nexport function fetchInvoice(id) {\n    return async (dispatch) => {\n        try {\n            // dispatch(showNotification('Loading invoice...', 'LOADING'));\n            const invoice = await client.getInvoice(id);\n            dispatch(fetchInvoiceComplete(invoice));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to fetch invoice\");\n        }\n    };\n}\n\nexport function fetchInvoicesComplete(invoices) {\n    return {\n        type: ActionTypes.FETCH_INVOICES_COMPLETE,\n        payload: invoices,\n    };\n}\n\nexport function fetchInvoices(params) {\n    return async (dispatch) => {\n        try {\n            // dispatch(showNotification('Loading invoices...', 'LOADING'));\n            const invoices = await client.getInvoices(params);\n            dispatch(fetchInvoicesComplete(invoices));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to fetch invoices\");\n        }\n    };\n}\n\nexport function editInvoice(invoice) {\n    return {\n        type: ActionTypes.EDIT_INVOICE,\n        payload: invoice,\n    };\n}\n\nexport function clearInvoice() {\n    return {\n        type: ActionTypes.CLEAR_INVOICE,\n        payload: null,\n    };\n}\n\n/* TRANSACTION\n *  1. newTransaction()\n *  2. createTransaction()\n *  3. saveTransaction()\n *  4. fetchTransactionComplete()\n *  5. fetchTransaction()\n *  6. fetchTransactionsComplete()\n *  7. fetchTransactions()\n *  8. editTransaction()\n *  9. clearTransaction()\n */\n\nexport function newTransaction() {\n    return {\n        type: ActionTypes.NEW_TRANSACTION,\n        payload: null,\n    };\n}\n\nexport function createTransaction(transaction) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving transaction...\", \"LOADING\"));\n            await client.newTransaction(transaction);\n            dispatch(fetchTransactions({}));\n            dispatch(\n                showNotification(\"Successfully created transaction\", \"SUCCESS\")\n            );\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to create transaction\");\n        }\n    };\n}\n\nexport function saveTransaction(transaction) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving transaction...\", \"LOADING\"));\n            const newTransaction = await client.saveTransaction(transaction);\n            dispatch(fetchTransactions({})); // BUG: This action does not acknowledge the filters.\n            dispatch(fetchTransactionComplete(newTransaction));\n            dispatch(\n                showNotification(\"Successfully saved transaction\", \"SUCCESS\")\n            );\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to save transaction\");\n        }\n    };\n}\n\nexport function fetchTransactionComplete(transaction) {\n    return {\n        type: ActionTypes.FETCH_TRANSACTION_COMPLETE,\n        payload: transaction,\n    };\n}\n\nexport function fetchTransaction(id) {\n    return async (dispatch) => {\n        const transaction = await client.getTransaction(id);\n        dispatch(fetchTransactionComplete(transaction));\n    };\n}\n\nexport function fetchTransactionsComplete(transactions) {\n    return {\n        type: ActionTypes.FETCH_TRANSACTIONS_COMPLETE,\n        payload: transactions,\n    };\n}\n\nexport function fetchTransactions(params) {\n    return async (dispatch) => {\n        try {\n            const transactions = await client.getTransactions(params);\n            dispatch(fetchTransactionsComplete(transactions));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to fetch transactions\");\n        }\n    };\n}\n\nexport function editTransaction(transaction) {\n    return {\n        type: ActionTypes.EDIT_TRANSACTION,\n        payload: transaction,\n    };\n}\n\nexport function clearTransaction() {\n    return {\n        type: ActionTypes.CLEAR_TRANSACTION,\n        payload: null,\n    };\n}\n\n/* PLAN\n *  1. newPlan()\n *  2. createPlan()\n *  3. savePlan()\n *  4. fetchPlanComplete()\n *  5. fetchPlan()\n *  6. fetchPlansComplete()\n *  7. fetchPlans()\n *  8. editPlan()\n *  9. clearPlan()\n */\n\nexport function newPlan() {\n    return {\n        type: ActionTypes.NEW_PLAN,\n        payload: null,\n    };\n}\n\nexport function createPlan(plan) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving plan...\", \"LOADING\"));\n            await client.newPlan(plan);\n            dispatch(fetchPlans({}));\n            dispatch(showNotification(\"Successfully created plan\", \"SUCCESS\"));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to create plan\");\n        }\n    };\n}\n\nexport function savePlan(plan) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving plan...\", \"LOADING\"));\n            const newPlan = await client.savePlan(plan);\n            dispatch(fetchPlans({}));\n            dispatch(fetchPlanComplete(newPlan));\n            dispatch(showNotification(\"Successfully saved plan\", \"SUCCESS\"));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to save plan\");\n        }\n    };\n}\n\nexport function fetchPlanComplete(plan) {\n    return {\n        type: ActionTypes.FETCH_PLAN_COMPLETE,\n        payload: plan,\n    };\n}\n\nexport function fetchPlan(id) {\n    return async (dispatch) => {\n        try {\n            // dispatch(showNotification('Loading plan...', 'LOADING'));\n            const plan = await client.getPlan(id);\n            dispatch(fetchPlanComplete(plan));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to save plan\");\n        }\n    };\n}\n\nexport function fetchPlansComplete(plans) {\n    return {\n        type: ActionTypes.FETCH_PLANS_COMPLETE,\n        payload: plans,\n    };\n}\n\nexport function fetchPlans(params) {\n    return async (dispatch) => {\n        try {\n            const plans = await client.getPlans(params);\n            dispatch(fetchPlansComplete(plans));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to fetch plans\");\n        }\n    };\n}\n\nexport function editPlan(plan) {\n    return {\n        type: ActionTypes.EDIT_PLAN,\n        payload: plan,\n    };\n}\n\nexport function clearPlan() {\n    return {\n        type: ActionTypes.CLEAR_PLAN,\n        payload: null,\n    };\n}\n\n/* Analytics */\n\nexport function fetchAnalyticsComplete(analytics) {\n    return {\n        type: ActionTypes.FETCH_ANALYTICS_COMPLETE,\n        payload: analytics,\n    };\n}\n\nexport function fetchAnalytics(params) {\n    return async (dispatch) => {\n        try {\n            const response = await axios.get(\"/api/v1/analytics\", { params });\n            const analytics = response.data;\n            dispatch(fetchAnalyticsComplete(analytics));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to fetch analytics data\");\n        }\n    };\n}\n\n/* MISC\n * 1. closeDialog\n * 2. showNotification\n * 3. closeNotification\n */\n\nexport function closeDialog() {\n    return {\n        type: ActionTypes.CLOSE_DIALOG,\n        payload: null,\n    };\n}\n\nexport function showNotification(message, category) {\n    return {\n        type: ActionTypes.SHOW_NOTIFICATION,\n        payload: {\n            message,\n            category,\n        },\n    };\n}\n\nexport function closeNotification() {\n    return {\n        type: ActionTypes.CLOSE_NOTIFICATION,\n        payload: null,\n    };\n}\n\nexport function fetchUserComplete(user) {\n    return {\n        type: ActionTypes.FETCH_USER_COMPLETE,\n        payload: user,\n    };\n}\n\nexport function fetchUserFailed() {\n    return {\n        type: ActionTypes.FETCH_USER_FAILED,\n        payload: null,\n    };\n}\n\nexport function fetchUser() {\n    return async (dispatch) => {\n        let user = null;\n        try {\n            const csClient = await crossStorage.connection;\n            user = JSON.parse(await csClient.get(\"user\"));\n            axios.defaults.headers.common = {\n                Authorization: `bearer ${user.accessToken}`,\n            };\n        } catch (error) {\n            handleError(dispatch, error, \"Cannot find an active user session.\");\n        }\n\n        dispatch(user ? fetchUserComplete(user) : fetchUserFailed());\n    };\n}\n\nexport function logout() {\n    return async (dispatch) => {\n        try {\n            const csClient = await crossStorage.connection;\n            await csClient.del(\"user\");\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to logout!\");\n        }\n        /* Redirect the user to the login page. */\n        dispatch(fetchUserComplete(null));\n    };\n}\n\nexport function internalRedirect(path) {\n    return {\n        type: ActionTypes.INTERNAL_REDIRECT,\n        payload: path,\n    };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Popover from \"@material-ui/core/Popover\";\n\nimport { connect } from \"react-redux\";\nimport {\n    newAccount,\n    newSubscription,\n    newInvoice,\n    newTransaction,\n    newPlan,\n    newAPIKey,\n} from \"../redux/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minHeight: 260,\n        minWidth: 400,\n        overflow: \"hidden\",\n    },\n    main: {\n        padding: 16,\n    },\n    groupTitle: {\n        fontSize: 12,\n        backgroundColor: \"#F0F0F0\",\n        padding: 8,\n        paddingLeft: 16,\n        marginTop: 0,\n        marginBottom: 0,\n        textTransform: \"uppercase\",\n    },\n    icon: {\n        display: \"block !important\",\n        marginLeft: \"auto !important\",\n        marginRight: \"auto !important\",\n    },\n    link: {\n        color: \"black\",\n        textDecoration: \"none\",\n    },\n    add: {\n        padding: 12,\n        \"&:hover\": {\n            background: \"#D3D3D3\",\n        },\n        width: 100,\n        borderRadius: 4,\n        cursor: \"pointer\",\n    },\n    linkTitle: {\n        marginTop: 4,\n        textAlign: \"center\",\n        fontSize: 12,\n    },\n}));\n\nconst groups = [\n    {\n        title: \"Record\",\n        links: [\n            {\n                id: \"account\",\n                title: \"Account\",\n                icon: \"account_circle\",\n                action: \"newAccount\",\n            },\n            {\n                id: \"subscription\",\n                title: \"Subscription\",\n                icon: \"autorenew\",\n                action: \"newSubscription\",\n            },\n            {\n                id: \"transaction\",\n                title: \"Transaction\",\n                icon: \"monetization_on\",\n                action: \"newTransaction\",\n            },\n        ],\n    },\n    {\n        title: \"Configuration\",\n        links: [\n            {\n                id: \"plan\",\n                title: \"Plan\",\n                icon: \"local_offer\",\n                action: \"newPlan\",\n            },\n            {\n                id: \"api-key\",\n                title: \"API Key\",\n                icon: \"code\",\n                action: \"newAPIKey\",\n            },\n        ],\n    },\n];\n\nfunction AddDialog(props) {\n    const classes = useStyles();\n    const { onClose, open, anchor } = props;\n    const makeHandler = (link) => () => {\n        onClose();\n        props[link.action]();\n    };\n\n    return (\n        <Popover\n            open={open}\n            anchorEl={anchor}\n            onClose={onClose}\n            anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"center\",\n            }}\n            transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"center\",\n            }}\n        >\n            <div className={classes.root}>\n                {groups.map((group, index) => (\n                    <div>\n                        <h6 className={classes.groupTitle}>{group.title}</h6>\n                        <Grid\n                            className={classes.main}\n                            container={true}\n                            spacing={0}\n                        >\n                            {group.links.map((link, index) => (\n                                <Grid item={true}>\n                                    <div\n                                        className={classes.add}\n                                        onClick={makeHandler(link)}\n                                    >\n                                        <Icon className={classes.icon}>\n                                            {link.icon}\n                                        </Icon>\n                                        <Typography\n                                            className={classes.linkTitle}\n                                        >\n                                            {link.title}\n                                        </Typography>\n                                    </div>\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </div>\n                ))}\n            </div>\n        </Popover>\n    );\n}\n\nAddDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedValue: PropTypes.string.isRequired,\n};\n\nconst mapDispatchToProps = {\n    newAccount,\n    newSubscription,\n    newInvoice,\n    newTransaction,\n    newPlan,\n    newAPIKey,\n};\n\nexport default connect(null, mapDispatchToProps)(AddDialog);\n","import React from \"react\";\nimport {\n    AppBar,\n    Button,\n    Toolbar,\n    makeStyles,\n    IconButton,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport LogoutIcon from \"@material-ui/icons/ExitToApp\";\n\nimport AddDialog from \"./AddDialog\";\nimport * as actions from \"../redux/actions\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    logoButton: {\n        height: 64,\n        width: 180,\n        borderRadius: 0,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        color: theme.palette.primary,\n        background: \"white\",\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    toolbar: {},\n    hide: {\n        display: \"none\",\n    },\n    buttons: {\n        marginLeft: \"auto\",\n    },\n    addButton: {\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    logoutButton: {\n        marginLeft: 8,\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    icon: {\n        dispay: \"inline-block\",\n        marginRight: 4,\n    },\n}));\n\nfunction MainToolbar(props) {\n    const { toggleDrawer, drawerOpen, user, logout } = props;\n    const classes = useStyles();\n    const [addDialogAnchor, setAddDialogAnchor] = React.useState(null);\n\n    const handleOpenAddDialog = (event) =>\n        setAddDialogAnchor(event.currentTarget);\n    const handleCloseAddDialog = () => setAddDialogAnchor(null);\n\n    return (\n        <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n                [classes.appBarShift]: drawerOpen,\n            })}\n        >\n            <Toolbar className={classes.toolbar}>\n                <IconButton\n                    onClick={toggleDrawer}\n                    edge=\"start\"\n                    className={{ [classes.hide]: drawerOpen }}\n                >\n                    <MenuIcon />\n                </IconButton>\n\n                <Button className={classes.logoButton}>\n                    <img\n                        src=\"assets/images/hubble.png\"\n                        alt=\"Hubble logo\"\n                        height=\"40px\"\n                    />\n                </Button>\n                <div className={classes.buttons}>\n                    <Button\n                        className={classes.addButton}\n                        variant=\"text\"\n                        size=\"small\"\n                        color=\"primary\"\n                        onClick={handleOpenAddDialog}\n                    >\n                        <AddIcon className={classes.icon} />\n                        Quick Add\n                    </Button>\n\n                    <Button\n                        className={classes.logoutButton}\n                        variant=\"text\"\n                        size=\"small\"\n                        color=\"secondary\"\n                        onClick={logout}\n                    >\n                        <LogoutIcon className={classes.icon} />\n                        Logout {user.firstName}\n                    </Button>\n                </div>\n\n                <AddDialog\n                    open={Boolean(addDialogAnchor)}\n                    onClose={handleCloseAddDialog}\n                    anchor={addDialogAnchor}\n                />\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.user,\n    };\n}\n\nconst mapDispatchToProps = {\n    fetchUser: actions.fetchUser,\n    logout: actions.logout,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(MainToolbar));\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport AccountsIcon from \"@material-ui/icons/AccountCircle\";\nimport PreferencesIcon from \"@material-ui/icons/Settings\";\nimport AnalyticsIcon from \"@material-ui/icons/BarChart\";\nimport TransactionsIcon from \"@material-ui/icons/MonetizationOn\";\nimport SubscriptionsIcon from \"@material-ui/icons/Autorenew\";\nimport IvoicesIcon from \"@material-ui/icons/Receipt\";\nimport PlansIcon from \"@material-ui/icons/LocalOffer\";\nimport APIKeysIcon from \"@material-ui/icons/Code\";\nimport WebhooksIcon from \"@material-ui/icons/CallReceived\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: \"nowrap\",\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: \"hidden\",\n        width: 60,\n    },\n    toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n}));\n\nconst navigationGroups = [\n    {\n        id: \"primary\",\n        items: [\n            {\n                id: \"accounts\",\n                title: \"Accounts\",\n                icon: <AccountsIcon />,\n                link: \"/accounts\",\n            },\n            {\n                id: \"subscriptions\",\n                title: \"Subscriptions\",\n                icon: <SubscriptionsIcon />,\n                link: \"/subscriptions\",\n            },\n            {\n                id: \"invoices\",\n                title: \"Invoices\",\n                icon: <IvoicesIcon />,\n                link: \"/invoices\",\n            },\n            {\n                id: \"transactions\",\n                title: \"Transactions\",\n                icon: <TransactionsIcon />,\n                link: \"/transactions\",\n            },\n        ],\n    },\n    {\n        id: \"dashboard\",\n        items: [\n            {\n                id: \"analytics\",\n                title: \"Analytics\",\n                icon: <AnalyticsIcon />,\n                link: \"/analytics\",\n            },\n        ],\n    },\n    {\n        id: \"developers\",\n        items: [\n            {\n                id: \"api-keys\",\n                title: \"API Keys\",\n                icon: <APIKeysIcon />,\n                link: \"/api-keys\",\n            },\n            {\n                id: \"webhooks\",\n                title: \"Webhooks\",\n                icon: <WebhooksIcon />,\n                link: \"/webhooks\",\n            },\n        ],\n    },\n    {\n        id: \"configuration\",\n        items: [\n            {\n                id: \"plans\",\n                title: \"Plans\",\n                icon: <PlansIcon />,\n                link: \"/plans\",\n            },\n            {\n                id: \"preferences\",\n                title: \"Preferences\",\n                icon: <PreferencesIcon />,\n                link: \"/preferences\",\n            },\n        ],\n    },\n];\n\nfunction MainDrawer(props) {\n    const makeLinkHandler = (url) => () => props.history.push(url);\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const { open, handleCloseDrawer } = props;\n    return (\n        <Drawer\n            variant=\"permanent\"\n            className={clsx(classes.drawer, {\n                [classes.drawerOpen]: open,\n                [classes.drawerClose]: !open,\n            })}\n            classes={{\n                paper: clsx({\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                }),\n            }}\n        >\n            <div className={classes.toolbar}>\n                <IconButton onClick={handleCloseDrawer}>\n                    {theme.direction === \"rtl\" ? (\n                        <ChevronRightIcon />\n                    ) : (\n                        <ChevronLeftIcon />\n                    )}\n                </IconButton>\n            </div>\n            <Divider />\n            {navigationGroups.map((group, index) => (\n                <React.Fragment key={group.id}>\n                    <List>\n                        {group.items.map((item, index) => (\n                            <ListItem\n                                button\n                                key={item.id}\n                                onClick={makeLinkHandler(item.link)}\n                            >\n                                <ListItemIcon>{item.icon}</ListItemIcon>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        ))}\n                    </List>\n                    {index + 1 < navigationGroups.length && <Divider />}\n                </React.Fragment>\n            ))}\n        </Drawer>\n    );\n}\n\nexport default withRouter(MainDrawer);\n","import React from \"react\";\n\nconst workspaceConfiguration = [\n    // API Key\n    {\n        path: \"/api-keys\",\n        component: React.lazy(() => import(\"./api-key/ViewAPIKeys\")),\n    },\n\n    // Webhooks\n    {\n        path: \"/webhooks\",\n        component: React.lazy(() => import(\"./webhook/ViewWebhooks\")),\n    },\n\n    // Account\n    {\n        path: \"/accounts/:identifier\",\n        component: React.lazy(() => import(\"./account/ViewAccount\")),\n    },\n    {\n        path: \"/accounts\",\n        component: React.lazy(() => import(\"./account/ViewAccounts\")),\n        exact: true,\n    },\n\n    // Invoice\n    {\n        path: \"/invoices/:identifier\",\n        component: React.lazy(() => import(\"./invoice/ViewInvoice\")),\n    },\n    {\n        path: \"/invoices\",\n        component: React.lazy(() => import(\"./invoice/ViewInvoices\")),\n        exact: true,\n    },\n\n    // Subscription\n    {\n        path: \"/subscriptions/:identifier\",\n        component: React.lazy(() => import(\"./subscription/ViewSubscription\")),\n    },\n    {\n        path: \"/subscriptions\",\n        component: React.lazy(() => import(\"./subscription/ViewSubscriptions\")),\n        exact: true,\n    },\n\n    // Transaction\n    {\n        path: \"/transactions/:identifier\",\n        component: React.lazy(() => import(\"./transaction/ViewTransaction\")),\n    },\n    {\n        path: \"/transactions\",\n        component: React.lazy(() => import(\"./transaction/ViewTransactions\")),\n        exact: true,\n    },\n\n    // Plan\n    {\n        path: \"/plans/:identifier\",\n        component: React.lazy(() => import(\"./plan/ViewPlan\")),\n    },\n    {\n        path: \"/plans\",\n        component: React.lazy(() => import(\"./plan/ViewPlans\")),\n        exact: true,\n    },\n\n    // Analytics\n    {\n        path: \"/analytics\",\n        component: React.lazy(() => import(\"./analytics/Analytics\")),\n        exact: true,\n    },\n\n    // Preferences\n    {\n        path: \"/preferences\",\n        component: React.lazy(() => import(\"./preferences/Preferences\")),\n        exact: true,\n    },\n];\n\nexport default workspaceConfiguration;\n","import React from \"react\";\n\nconst errorConfiguration = [\n    {\n        path: \"/error/404\",\n        component: React.lazy(() => import(\"./Error404\")),\n    },\n    {\n        path: \"/error/500\",\n        component: React.lazy(() => import(\"./Error500\")),\n    },\n];\n\nexport default errorConfiguration;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport workspaceConfiguration from \"./workspace/configuration\";\nimport errorConfiguration from \"./error/configuration\";\n\nconst routes = [\n    ...workspaceConfiguration,\n    ...errorConfiguration,\n    {\n        path: \"/\",\n        exact: true,\n        component: () => <Redirect to=\"/analytics\" />,\n    },\n    {\n        component: () => <Redirect to=\"/error/404\" />,\n    },\n];\n\nexport default routes;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport PropTypes from \"prop-types\";\n\nimport RecordForm from \"./RecordForm\";\nimport * as actions from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Drawer from \"@material-ui/core/Drawer\";\n\nconst rightDrawerWidth = 600;\nconst wideDrawerWidth = 1000;\nconst navigationWidth = 100;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: rightDrawerWidth,\n        display: \"flex\",\n        flexDirection: \"column\",\n\n        [theme.breakpoints.down(\"md\")]: {\n            width: 400,\n        },\n    },\n    rootWide: {\n        width: wideDrawerWidth,\n        [theme.breakpoints.down(\"md\")]: {\n            width: 500,\n        },\n    },\n    appBar: {},\n    toolbar: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    title: {},\n    container: {\n        paddingLeft: 24,\n        paddingRight: 0,\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    navigation: {\n        width: \"navigationWidth\",\n        height: \"calc(100vh - 128px)\",\n        paddingTop: 24,\n        paddingBottom: 24,\n        marginRight: 24,\n    },\n    listItem: {\n        paddingLeft: 40,\n        paddingRight: 40,\n    },\n    content: {\n        paddingTop: 24,\n        paddingBottom: 24,\n        overflowY: \"auto\",\n        height: \"calc(100vh - 128px)\",\n        width: rightDrawerWidth,\n        scrollbarWidth: \"thin\",\n    },\n    contentWide: {\n        width: wideDrawerWidth - navigationWidth,\n    },\n    actions: {\n        width: rightDrawerWidth,\n        height: 64,\n        padding: 16,\n        display: \"flex\",\n        flexDirection: \"row-reverse\",\n\n        [theme.breakpoints.down(\"md\")]: {\n            width: 400,\n        },\n    },\n    actionsWide: {\n        width: wideDrawerWidth,\n\n        [theme.breakpoints.down(\"md\")]: {\n            width: 500,\n        },\n    },\n    spring: {\n        flexGrow: 1,\n    },\n}));\n\nfunction toRequest(groups, values) {\n    const result = {};\n    groups.forEach((group) => {\n        group.children.forEach((field) => {\n            /*if (field.type === \"time_range\") {\n                result[field.identifier] = values[field.identifier].option;\n                if (values[field.identifier].option === \"custom\") {\n                    result[field.startIdentifier] = values[\n                        field.identifier\n                    ].startDate.getTime();\n                    result[field.endIdentifier] = values[\n                        field.identifier\n                    ].endDate.getTime();\n                }\n            }*/\n            switch (field.type) {\n                case \"account_lookup\":\n                case \"plan_lookup\": {\n                    result[field.identifier] = values[field.identifier].id;\n                    break;\n                }\n\n                case \"country\": {\n                    result[field.identifier] = values[field.identifier].code;\n                    break;\n                }\n\n                default: {\n                    result[field.identifier] = values[field.identifier];\n                    break;\n                }\n            }\n        });\n    });\n    return result;\n}\n\nfunction FormDrawer(props) {\n    const {\n        closeDialog,\n        title,\n        groups,\n        open,\n        onSave,\n        options,\n        updateLookupOptions,\n    } = props;\n    const classes = useStyles(props);\n    const [showMore, setShowMore] = React.useState(props.showMore);\n    const [values, setValues] = React.useState(props.values);\n    const [tabIndex, setTabIndex] = React.useState(0);\n    const [saveDisabled, setSaveDisabled] = React.useState(true);\n\n    const handleShowMore = () => {\n        setShowMore(!showMore);\n    };\n    const handleSave = () => {\n        closeDialog();\n        const requestValues = toRequest(groups, values);\n        console.log(requestValues);\n        onSave(requestValues);\n    };\n    // TODO: Create a deep copy without serializing!\n    const handleValueChange = (field, value) => {\n        const newValues = JSON.parse(JSON.stringify(values));\n        newValues[field.identifier] = value;\n        setValues(newValues);\n    };\n\n    return (\n        <Drawer className={classes.drawer} anchor=\"right\" open={open}>\n            <div\n                className={\n                    showMore\n                        ? clsx(classes.root, classes.rootWide)\n                        : classes.root\n                }\n            >\n                <AppBar\n                    position=\"static\"\n                    elevation={1}\n                    className={classes.appBar}\n                >\n                    <Toolbar className={classes.toolbar}>\n                        <Typography className={classes.title} variant=\"h6\">\n                            {title}\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n\n                <div className={classes.container}>\n                    {showMore && (\n                        <List component=\"nav\" className={classes.navigation}>\n                            {groups.map((group, groupIndex) => (\n                                <ListItem\n                                    className={classes.listItem}\n                                    key={group.identifier}\n                                    button={true}\n                                    selected={tabIndex === groupIndex}\n                                    onClick={() => setTabIndex(groupIndex)}\n                                >\n                                    <ListItemText\n                                        primary={group.label}\n                                        className={classes.tabText}\n                                    />\n                                </ListItem>\n                            ))}\n                        </List>\n                    )}\n\n                    <div\n                        className={\n                            showMore\n                                ? clsx(classes.content, classes.contentWide)\n                                : classes.content\n                        }\n                    >\n                        <RecordForm\n                            groups={groups}\n                            values={values}\n                            onValueChange={handleValueChange}\n                            tabIndex={tabIndex}\n                            showMore={showMore}\n                            options={options}\n                            updateLookupOptions={updateLookupOptions}\n                            onValidityChange={setSaveDisabled}\n                        />\n                    </div>\n                </div>\n\n                <Box\n                    boxShadow={4}\n                    className={\n                        showMore\n                            ? clsx(classes.actions, classes.actionsWide)\n                            : classes.actions\n                    }\n                >\n                    <Button\n                        disabled={saveDisabled}\n                        onClick={handleSave}\n                        color=\"primary\"\n                        className={classes.dialogAction}\n                    >\n                        Save\n                    </Button>\n                    <Button\n                        onClick={closeDialog}\n                        color=\"primary\"\n                        className={classes.dialogAction}\n                    >\n                        Cancel\n                    </Button>\n                    <div className={classes.spring}></div>\n                    <Button\n                        size=\"small\"\n                        variant=\"text\"\n                        onClick={handleShowMore}\n                        color=\"secondary\"\n                        className={classes.extraAction}\n                    >\n                        <Icon>\n                            {showMore\n                                ? \"keyboard_arrow_right\"\n                                : \"keyboard_arrow_left\"}\n                        </Icon>\n                        {showMore ? \"Show Less\" : \"Show More\"}\n                    </Button>\n                </Box>\n            </div>\n        </Drawer>\n    );\n}\n\nFormDrawer.propTypes = {\n    title: PropTypes.string.isRequired,\n    showMore: PropTypes.bool,\n    account: PropTypes.object,\n    onSave: PropTypes.func.isRequired,\n};\n\nFormDrawer.defaultProps = {\n    showMore: false,\n    account: null,\n};\n\nconst mapDispatchToProps = {\n    closeDialog: actions.closeDialog,\n};\n\nexport default connect(null, mapDispatchToProps)(FormDrawer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { extractValues } from \"../common/RecordForm\";\n\nimport FormDrawer from \"../common/FormDrawer\";\n\n// text, large_text, number, date_picker, date_range_picker, switch, phone_number, email_address\n// multiple_options (multiselect), single_option (drop down)\n// lookup - organization, user, account\n\n// Only top level children can have quickAdd. Groups cannot have required, unique, multipleValues, mininmumValues, maximumValues.\n// Groups can have readOnly, hidden, tooltip\n// The same person can work in multiple organizations. But such cases are rare. Therefore, the system should be kept\n// simple and not accomodate such cases. given, there are other work arounds.\n\n// The user name should be unique across your organization.\nconst groups = [\n    {\n        label: \"Basic\",\n        children: [\n            {\n                label: \"User Name\",\n                identifier: \"userName\",\n                type: \"text\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The user name of the account.\",\n                multipleValues: false,\n                defaultValue: \"\",\n                validations: \"isAlphanumeric,minLength:3,maxLength:30\",\n                validationErrors: {\n                    isAlphanumeric:\n                        \"The user name can contain only letters and digits.\",\n                    minLength: \"The user name must be 3-30 characters long.\",\n                    maxLength: \"The user name must be 3-30 characters long.\",\n                },\n            },\n            {\n                label: \"First Name\",\n                identifier: \"firstName\",\n                type: \"text\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The first name of the account.\",\n                multipleValues: false,\n                defaultValue: \"\",\n                validations: \"isAlphanumeric,minLength:3,maxLength:30\",\n                validationErrors: {\n                    isAlphanumeric:\n                        \"The first name can contain only letters and digits.\",\n                    minLength: \"The first name must be 3-30 characters long.\",\n                    maxLength: \"The first name must be 3-30 characters long.\",\n                },\n            },\n            {\n                label: \"Last Name\",\n                identifier: \"lastName\",\n                type: \"text\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The last name of the account.\",\n                multipleValues: false,\n                defaultValue: \"\",\n                validations: \"isAlphanumeric,minLength:3,maxLength:30\",\n                validationErrors: {\n                    isAlphanumeric:\n                        \"The last name can contain only letters and digits.\",\n                    minLength: \"The last name must be 3-30 characters long.\",\n                    maxLength: \"The last name must be 3-30 characters long.\",\n                },\n            },\n            {\n                label: \"Email Address\",\n                identifier: \"emailAddress\",\n                type: \"email_address\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The email address of the account.\",\n                multipleValues: true,\n                defaultValue: \"\",\n                validations: \"isEmail\",\n                validationErrors: {\n                    isEmail: \"Please enter a valid email address.\",\n                },\n            },\n            {\n                label: \"Phone Number\",\n                identifier: \"phoneNumber\",\n                type: \"phone_number\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The phone number of the account.\",\n                multipleValues: true,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Address Line 1\",\n                identifier: \"addressLine1\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The first line of address.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Address Line 2\",\n                identifier: \"addressLine2\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The first line of address.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"City\",\n                identifier: \"city\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The city.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"State\",\n                identifier: \"state\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The state where the customer resides.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Country\",\n                identifier: \"country\",\n                type: \"country\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The country where the customer resides.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Zip Code\",\n                identifier: \"zipCode\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip:\n                    \"The zip code of the location where the customer resides.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n        ],\n    },\n];\n\nfunction AccountFormDrawer(props) {\n    const { title, onSave, showMore, open } = props;\n\n    const values = props.account || extractValues(groups);\n    return (\n        <FormDrawer\n            title={title}\n            showMore={showMore}\n            groups={groups}\n            values={values}\n            onSave={onSave}\n            open={open}\n        />\n    );\n}\n\nAccountFormDrawer.propTypes = {\n    title: PropTypes.string.isRequired,\n    showMore: PropTypes.bool,\n    account: PropTypes.object,\n    onSave: PropTypes.func.isRequired,\n};\n\nAccountFormDrawer.defaultProps = {\n    showMore: false,\n    account: null,\n    onCancel: null,\n};\n\nexport default AccountFormDrawer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport * as actions from \"../../redux/actions\";\nimport AccountFormDrawer from \"./AccountFormDrawer\";\n\nfunction EditAccount(props) {\n    const { account, saveAccount } = props;\n    const handleSave = (values) => {\n        saveAccount({\n            ...account,\n            ...values,\n        });\n    };\n    return (\n        <AccountFormDrawer\n            title=\"Edit Account\"\n            showMore={true}\n            onSave={handleSave}\n            account={account}\n            open={true}\n        />\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        account: state.account,\n    };\n}\n\nconst mapDispatchToProps = {\n    saveAccount: actions.saveAccount,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditAccount);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { extractValues } from \"../common/RecordForm\";\nimport FormDrawer from \"../common/FormDrawer\";\n\nconst groups = [\n    {\n        label: \"Basic\",\n        children: [\n            {\n                label: \"Account\",\n                identifier: \"accountId\",\n                type: \"account_lookup\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The account associated with the subscription.\",\n                multipleValues: false,\n                defaultValue: null,\n            },\n            {\n                label: \"Plan\",\n                identifier: \"planId\",\n                type: \"plan_lookup\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The plan associated with the subscription.\",\n                multipleValues: false,\n                defaultValue: null,\n            },\n            {\n                label: \"Price Per Billing Cycle\",\n                identifier: \"pricePerBillingCycle\",\n                type: \"number\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The price per billing cycle.\",\n                multipleValues: true,\n                defaultValue: 0,\n                validations: \"isNumeric\",\n                validationErrors: {\n                    isNumeric: \"Please enter a valid number.\",\n                },\n            },\n            {\n                label: \"Setup Fee\",\n                identifier: \"setupFee\",\n                type: \"number\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The fee required for setup of the subscription.\",\n                multipleValues: true,\n                defaultValue: 0,\n                validations: \"isNumeric\",\n                validationErrors: {\n                    isNumeric: \"Please enter a valid number.\",\n                },\n            },\n            {\n                label: \"Quantity\",\n                identifier: \"quantity\",\n                type: \"number\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The quantity of the plan.\",\n                multipleValues: false,\n                defaultValue: null,\n                validations: \"isNumeric\",\n                validationErrors: {\n                    isNumeric: \"Please enter a valid number.\",\n                },\n            },\n            {\n                label: \"Starts\",\n                identifier: \"startsAt\",\n                type: \"date_time\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"Start date time of the subscription.\",\n                multipleValues: false,\n                defaultValue: new Date(),\n            },\n            {\n                label: \"Total Billing Cycles\",\n                identifier: \"totalBillingCycles\",\n                type: \"number\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The total number of billing cycles in the term.\",\n                multipleValues: false,\n                defaultValue: 0,\n                validations: \"isInt\",\n                validationErrors: {\n                    isInt: \"Please enter a valid integer.\",\n                },\n            },\n            {\n                label: \"Renews\",\n                identifier: \"renews\",\n                type: \"switch\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip:\n                    \"Boolean value stating whether subscription is recurring.\",\n                multipleValues: false,\n                defaultValue: false,\n            },\n            {\n                label: \"Notes\",\n                identifier: \"notes\",\n                type: \"large_text\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                rows: 4,\n                tooltip:\n                    \"Notes about this subscription. It is displayed in the invoice.\",\n                defaultValue: \"\",\n                validations: {\n                    maxLength: 200,\n                },\n                validationErrors: {\n                    maxLength: \"The notes must be 0-200 characters long.\",\n                },\n            },\n            {\n                label: \"Terms and Conditions\",\n                identifier: \"termsAndConditions\",\n                type: \"large_text\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                rows: 4,\n                tooltip:\n                    \"Terms and conditions applied to this subscription. It is displayed in the invoice and can be used to highlight important terms and conditions related to the subscription or charges.\",\n                defaultValue: \"\",\n                validations: {\n                    maxLength: 200,\n                },\n                validationErrors: {\n                    maxLength:\n                        \"The terms and conditions must be 0-200 characters long.\",\n                },\n            },\n        ],\n    },\n];\n\nfunction SubscriptionFormDrawer(props) {\n    const { title, onSave, showMore, open } = props;\n\n    const values = props.account || extractValues(groups);\n    return (\n        <FormDrawer\n            title={title}\n            showMore={showMore}\n            groups={groups}\n            values={values}\n            onSave={(values) => {\n                console.log(values);\n                onSave(values);\n            }}\n            open={open}\n        />\n    );\n}\n\nSubscriptionFormDrawer.propTypes = {\n    title: PropTypes.string.isRequired,\n    showMore: PropTypes.bool,\n    account: PropTypes.object,\n    onSave: PropTypes.func.isRequired,\n};\n\nSubscriptionFormDrawer.defaultProps = {\n    showMore: false,\n    account: null,\n    onCancel: null,\n};\n\nexport default SubscriptionFormDrawer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { extractValues } from \"../common/RecordForm\";\nimport FormDrawer from \"../common/FormDrawer\";\n\nconst groups = [\n    {\n        label: \"Basic\",\n        children: [\n            {\n                label: \"Reference ID\",\n                identifier: \"referenceId\",\n                type: \"text\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"Reference ID of the transaction.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Comments\",\n                identifier: \"comments\",\n                type: \"large_text\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"Any comments on the transaction.\",\n                multipleValues: false,\n                defaultValue: \"\",\n                rows: 4,\n                validations: \"maxLength:200\",\n                validationErrors: {\n                    maxLength: \"The comment must be 0-200 characters long.\",\n                },\n            },\n            {\n                label: \"Amount\",\n                identifier: \"amount\",\n                type: \"number\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"Amount of the transaction.\",\n                multipleValues: false,\n                defaultValue: 0,\n                validations: \"isNumeric\",\n                validationErrors: {\n                    isNumeric: \"Please enter a valid number.\",\n                },\n            },\n            {\n                label: \"Tax\",\n                identifier: \"tax\",\n                type: \"number\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"Tax of the transaction.\",\n                multipleValues: false,\n                defaultValue: 0,\n                validations: \"isNumeric\",\n                validationErrors: {\n                    isNumeric: \"Please enter a valid number.\",\n                },\n            },\n            {\n                label: \"Action\",\n                identifier: \"action\",\n                type: \"select\",\n                options: [\n                    {\n                        value: \"purchase\",\n                        title: \"Purchase\",\n                    },\n                    {\n                        value: \"verify\",\n                        title: \"Verify\",\n                    },\n                    {\n                        value: \"refund\",\n                        title: \"Refund\",\n                    },\n                ],\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"Action can be purchase, verify or refund.\",\n                multipleValues: false,\n                defaultValue: \"purchase\",\n            },\n            {\n                label: \"Payment Method\",\n                identifier: \"paymentMethod\",\n                type: \"select\",\n                options: [\n                    {\n                        value: \"cash\",\n                        title: \"Cash\",\n                    },\n                    {\n                        value: \"credit_card\",\n                        title: \"Credit Card\",\n                    },\n                    {\n                        value: \"debit_card\",\n                        title: \"Debit Card\",\n                    },\n                    {\n                        value: \"online\",\n                        title: \"Online / Netbanking\",\n                    },\n                ],\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"Method of Payment.\",\n                multipleValues: false,\n                defaultValue: \"cash\",\n            },\n        ],\n    },\n];\n\nfunction TransactionFormDrawer(props) {\n    const { title, onSave, showMore, open } = props;\n\n    const values = props.transaction || extractValues(groups);\n    return (\n        <FormDrawer\n            title={title}\n            showMore={showMore}\n            groups={groups}\n            values={values}\n            onSave={onSave}\n            open={open}\n        />\n    );\n}\n\nTransactionFormDrawer.propTypes = {\n    title: PropTypes.string.isRequired,\n    showMore: PropTypes.bool,\n    transaction: PropTypes.object,\n    onSave: PropTypes.func.isRequired,\n};\n\nTransactionFormDrawer.defaultProps = {\n    showMore: false,\n    transaction: null,\n    onCancel: null,\n};\n\nexport default TransactionFormDrawer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { extractValues } from \"../common/RecordForm\";\nimport FormDrawer from \"../common/FormDrawer\";\n\nconst groups = [\n    {\n        label: \"Basic\",\n        children: [\n            {\n                label: \"Name\",\n                identifier: \"name\",\n                type: \"text\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The name of the plan.\",\n                multipleValues: false,\n                defaultValue: \"\",\n                validations: \"isAlphanumeric,minLength:2,maxLength:100\",\n                validationErrors: {\n                    isAlphanumeric:\n                        \"The plan name can contain only letters and digits.\",\n                    minLength: \"The plan name must be 2-100 characters long.\",\n                    maxLength: \"The plan name must be 2-100 characters long.\",\n                },\n            },\n            {\n                label: \"Code\",\n                identifier: \"code\",\n                type: \"text\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The code of the plan.\",\n                multipleValues: false,\n                defaultValue: \"\",\n                validations: \"isAlphanumeric,minLength:2,maxLength:20\",\n                validationErrors: {\n                    isAlphanumeric:\n                        \"The code name can contain only letters and digits.\",\n                    minLength: \"The code name must be 2-20 characters long.\",\n                    maxLength: \"The code name must be 2-20 characters long.\",\n                },\n            },\n            {\n                label: \"Description\",\n                identifier: \"description\",\n                type: \"large_text\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The description of the plan.\",\n                multipleValues: false,\n                defaultValue: \"\",\n                rows: 4,\n                validations: \"maxLength:200\",\n                validationErrors: {\n                    maxLength: \"The description must be 0-200 characters long.\",\n                },\n            },\n            {\n                label: \"Billing Cycle Period\",\n                identifier: \"billingCyclePeriod\",\n                type: \"number\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The billing cycle period of the plan.\",\n                multipleValues: false,\n                defaultValue: 0,\n                validations: \"isInt\",\n                validationErrors: {\n                    isInt: \"Please enter a valid integer.\",\n                },\n            },\n            {\n                label: \"Billing Cycle Period Unit\",\n                identifier: \"billingCyclePeriodUnit\",\n                type: \"select\",\n                options: [\n                    {\n                        value: \"days\",\n                        title: \"Days\",\n                    },\n                    {\n                        value: \"months\",\n                        title: \"Months\",\n                    },\n                ],\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The billing cycle period unit of the plan.\",\n                multipleValues: false,\n                defaultValue: \"days\",\n            },\n            {\n                label: \"Price Per Billing Cycle\",\n                identifier: \"pricePerBillingCycle\",\n                type: \"number\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip:\n                    \"The price per billing cycle for each unit of the plan.\",\n                multipleValues: false,\n                defaultValue: 0,\n                validations: \"isNumeric\",\n                validationErrors: {\n                    isNumeric: \"Please enter a valid number.\",\n                },\n            },\n            {\n                label: \"Setup Fee\",\n                identifier: \"setupFee\",\n                type: \"number\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The setup fee of the plan.\",\n                multipleValues: false,\n                defaultValue: 0,\n                validations: \"isNumeric\",\n                validationErrors: {\n                    isNumeric: \"Please enter a valid number.\",\n                },\n            },\n            {\n                label: \"Total Billing Cycles\",\n                identifier: \"totalBillingCycles\",\n                type: \"number\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The total number of billing cycles for the plan.\",\n                multipleValues: false,\n                defaultValue: 0,\n                validations: \"isInt\",\n                validationErrors: {\n                    isInt: \"Please enter a valid integer.\",\n                },\n            },\n            {\n                label: \"Trial Period\",\n                identifier: \"trialPeriod\",\n                type: \"number\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The trial period of the plan.\",\n                multipleValues: false,\n                defaultValue: 0,\n                validations: \"isInt\",\n                validationErrors: {\n                    isInt: \"Please enter a valid integer.\",\n                },\n            },\n            {\n                label: \"Trial Period Unit\",\n                identifier: \"trialPeriodUnit\",\n                type: \"select\",\n                options: [\n                    {\n                        value: \"days\",\n                        title: \"Days\",\n                    },\n                    {\n                        value: \"months\",\n                        title: \"Months\",\n                    },\n                ],\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The trial period unit of the plan.\",\n                multipleValues: false,\n                defaultValue: \"days\",\n            },\n            {\n                label: \"Renew\",\n                identifier: \"renew\",\n                type: \"switch\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip:\n                    \"Determines whether the subscription renews after the term.\",\n                multipleValues: false,\n                defaultValue: false,\n            },\n        ],\n    },\n];\n\nfunction PlanFormDrawer(props) {\n    const { title, onSave, showMore, open } = props;\n\n    const values = props.plan || extractValues(groups);\n    return (\n        <FormDrawer\n            title={title}\n            showMore={showMore}\n            groups={groups}\n            values={values}\n            onSave={onSave}\n            open={open}\n        />\n    );\n}\n\nPlanFormDrawer.propTypes = {\n    title: PropTypes.string.isRequired,\n    showMore: PropTypes.bool,\n    plan: PropTypes.object,\n    onSave: PropTypes.func.isRequired,\n};\n\nPlanFormDrawer.defaultProps = {\n    showMore: false,\n    plan: null,\n    onCancel: null,\n};\n\nexport default PlanFormDrawer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { extractValues } from \"../common/RecordForm\";\n\nimport FormDrawer from \"../common/FormDrawer\";\n\n// text, large_text, number, date_picker, date_range_picker, switch, phone_number, email_address\n// multiple_options (multiselect), single_option (drop down)\n// lookup - organization, user, account\n\n// Only top level children can have quickAdd. Groups cannot have required, unique, multipleValues, mininmumValues, maximumValues.\n// Groups can have readOnly, hidden, tooltip\n// The same person can work in multiple organizations. But such cases are rare. Therefore, the system should be kept\n// simple and not accomodate such cases. given, there are other work arounds.\n\n// The user name should be unique across your organization.\nconst groups = [\n    {\n        label: \"Basic\",\n        children: [\n            {\n                label: \"Name\",\n                identifier: \"name\",\n                type: \"text\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: true,\n                hidden: false,\n                tooltip: \"The name of the API key.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Read Permissions\",\n                identifier: \"readPermisions\",\n                type: \"multi_select\",\n                options: [\n                    {\n                        value: \"READ_ACCOUNTS\",\n                        title: \"Accounts\",\n                    },\n                    {\n                        value: \"READ_SUBSCRIPTIONS\",\n                        title: \"Subscriptions\",\n                    },\n                    {\n                        value: \"READ_INVOICES\",\n                        title: \"Invoices\",\n                    },\n                    {\n                        value: \"READ_TRANSACTIONS\",\n                        title: \"Transactions\",\n                    },\n                ],\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip:\n                    \"The resources that the API key provides read access to.\",\n                multipleValues: false,\n                defaultValue: [],\n            },\n            {\n                label: \"Read Write Permissions\",\n                identifier: \"readWritePermisions\",\n                type: \"multi_select\",\n                options: [\n                    {\n                        value: \"READ_WRITE_ACCOUNTS\",\n                        title: \"Accounts\",\n                    },\n                    {\n                        value: \"READ_WRITE_SUBSCRIPTIONS\",\n                        title: \"Subscriptions\",\n                    },\n                    {\n                        value: \"READ_WRITE_INVOICES\",\n                        title: \"Invoices\",\n                    },\n                    {\n                        value: \"READ_WRITE_TRANSACTIONS\",\n                        title: \"Transactions\",\n                    },\n                ],\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip:\n                    \"The resources that the API key provides read-write access to.\",\n                multipleValues: false,\n                defaultValue: [],\n            },\n        ],\n    },\n];\n\nfunction APIKeyFormDrawer(props) {\n    const { title, onSave, showMore, open } = props;\n\n    const values = props.account || extractValues(groups);\n    return (\n        <FormDrawer\n            title={title}\n            showMore={showMore}\n            groups={groups}\n            values={values}\n            onSave={onSave}\n            open={open}\n        />\n    );\n}\n\nAPIKeyFormDrawer.propTypes = {\n    title: PropTypes.string.isRequired,\n    showMore: PropTypes.bool,\n    account: PropTypes.object,\n    onSave: PropTypes.func.isRequired,\n};\n\nAPIKeyFormDrawer.defaultProps = {\n    showMore: false,\n    account: null,\n    onCancel: null,\n};\n\nexport default APIKeyFormDrawer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport * as actions from \"../../redux/actions\";\nimport PlanFormDrawer from \"./PlanFormDrawer\";\n\nfunction EditPlan(props) {\n    const { plan, savePlan } = props;\n    return (\n        <PlanFormDrawer\n            title=\"Edit Plan\"\n            showMore={true}\n            onSave={savePlan}\n            plan={plan}\n            open={true}\n        />\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        plan: state.plan,\n    };\n}\n\nconst mapDispatchToProps = {\n    savePlan: actions.savePlan,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPlan);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { extractValues } from \"../common/RecordForm\";\nimport FormDrawer from \"../common/FormDrawer\";\n\n// text, large_text, number, date_picker, date_range_picker, switch, phone_number, email_address\n// multiple_options (multiselect), single_option (drop down)\n// lookup - organization, user, invoice\n\n// Only top level children can have quickAdd. Groups cannot have required, unique, multipleValues, mininmumValues, maximumValues.\n// Groups can have readOnly, hidden, tooltip\n// The same person can work in multiple organizations. But such cases are rare. Therefore, the system should be kept\n// simple and not accomodate such cases. given, there are other work arounds.\n\n// The user name should be unique across your organization.\nconst groups = [\n    {\n        label: \"Basic\",\n        children: [\n            {\n                label: \"Notes\",\n                identifier: \"notes\",\n                type: \"large_text\",\n                rows: 4,\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The notes for the invoice.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Terms and Conditions\",\n                identifier: \"termsAndConditions\",\n                rows: 4,\n                type: \"large_text\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The terms and conditions applied to the invoice.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n        ],\n    },\n];\n\nfunction InvoiceFormDrawer(props) {\n    const { title, onSave, showMore, open } = props;\n\n    const values = props.invoice || extractValues(groups);\n    return (\n        <FormDrawer\n            title={title}\n            showMore={showMore}\n            groups={groups}\n            values={values}\n            onSave={onSave}\n            open={open}\n        />\n    );\n}\n\nInvoiceFormDrawer.propTypes = {\n    title: PropTypes.string.isRequired,\n    showMore: PropTypes.bool,\n    invoice: PropTypes.object,\n    onSave: PropTypes.func.isRequired,\n};\n\nInvoiceFormDrawer.defaultProps = {\n    showMore: false,\n    invoice: null,\n    onCancel: null,\n};\n\nexport default InvoiceFormDrawer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport * as actions from \"../../redux/actions\";\nimport InvoiceFormDrawer from \"./InvoiceFormDrawer\";\n\nfunction EditInvoice(props) {\n    const { invoice, saveInvoice } = props;\n    const handleSave = (values) => {\n        saveInvoice({\n            ...invoice,\n            ...values,\n        });\n    };\n    return (\n        <InvoiceFormDrawer\n            title=\"Edit Invoice\"\n            showMore={true}\n            onSave={handleSave}\n            invoice={invoice}\n            open={true}\n        />\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        invoice: state.invoice,\n    };\n}\n\nconst mapDispatchToProps = {\n    saveInvoice: actions.saveInvoice,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditInvoice);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport * as actions from \"../../redux/actions\";\nimport TransactionFormDrawer from \"./TransactionFormDrawer\";\n\nfunction EditTransaction(props) {\n    const { transaction, saveTransaction } = props;\n    return (\n        <TransactionFormDrawer\n            title=\"Edit Transaction\"\n            showMore={true}\n            onSave={saveTransaction}\n            transaction={transaction}\n            open={true}\n        />\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        transaction: state.transaction,\n    };\n}\n\nconst mapDispatchToProps = {\n    saveTransaction: actions.saveTransaction,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTransaction);\n","import React, { Suspense } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\n\n// TODO: Update this import when Material UI moves this to production.\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { renderRoutes } from \"react-router-config\";\nimport MainToolbar from \"./MainToolbar\";\nimport MainDrawer from \"./MainDrawer\";\nimport { connect } from \"react-redux\";\n\nimport routes from \"../routes\";\nimport AccountFormDrawer from \"../workspace/account/AccountFormDrawer\";\nimport EditAccount from \"../workspace/account/EditAccount\";\nimport SubscriptionFormDrawer from \"../workspace/subscription/SubscriptionFormDrawer\";\nimport TransactionFormDrawer from \"../workspace/transaction/TransactionFormDrawer\";\nimport PlanFormDrawer from \"../workspace/plan/PlanFormDrawer\";\nimport APIKeyFormDrawer from \"../workspace/api-key/APIKeyFormDrawer\";\nimport EditPlan from \"../workspace/plan/EditPlan\";\nimport EditInvoice from \"../workspace/invoice/EditInvoice\";\nimport EditTransaction from \"../workspace/transaction/EditTransaction\";\nimport * as actions from \"../redux/actions\";\n\nconst miniDrawerWidth = 60;\nconst drawerWidth = 240;\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    content: {\n        transition: theme.transitions.create(\"margin\", {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: miniDrawerWidth,\n        marginTop: 64,\n    },\n    contentShift: {\n        marginLeft: drawerWidth,\n        marginTop: 64,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    progress: {\n        maxWidth: 24,\n        maxHeight: 24,\n        color: \"white\",\n    },\n    drawer: {\n        width: 50,\n    },\n    suspense: {\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -24,\n        marginLeft: -24,\n    },\n}));\n\n// TODO: The layouts should be configurable.\n// TODO: Show drawer instead of toolbar for smaller screens.\nfunction MainLayout(props) {\n    const {\n        openDialog,\n        notification,\n        closeNotification,\n        createAccount,\n        createSubscription,\n        createTransaction,\n        createPlan,\n    } = props;\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n    const classes = useStyles();\n\n    const toggleDrawer = () => {\n        setDrawerOpen(!drawerOpen);\n    };\n\n    const handleCloseNotification = (event, reason) => {\n        if (reason !== \"clickaway\") {\n            closeNotification();\n        }\n    };\n\n    const renderNotification = (notification) => {\n        if (notification) {\n            if (notification.category === \"LOADING\") {\n                return (\n                    <Snackbar\n                        open={true}\n                        autoHideDuration={6000}\n                        onClose={handleCloseNotification}\n                    >\n                        <SnackbarContent\n                            message={notification.message}\n                            action={\n                                <CircularProgress\n                                    className={classes.progress}\n                                />\n                            }\n                        />\n                    </Snackbar>\n                );\n            }\n\n            const severityMap = {\n                SUCCESS: \"success\",\n                ERROR: \"error\",\n            };\n            const severity = severityMap[notification.category]\n                ? severityMap[notification.category]\n                : \"SUCCESS\";\n\n            return (\n                <Snackbar\n                    open={true}\n                    autoHideDuration={6000}\n                    onClose={handleCloseNotification}\n                >\n                    <Alert\n                        severity={severity}\n                        onClose={handleCloseNotification}\n                    >\n                        {notification.message}\n                    </Alert>\n                </Snackbar>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n                <MainDrawer\n                    open={drawerOpen}\n                    handleCloseDrawer={toggleDrawer}\n                />\n                <MainToolbar\n                    drawerOpen={drawerOpen}\n                    toggleDrawer={toggleDrawer}\n                />\n\n                <main\n                    className={clsx(classes.content, {\n                        [classes.contentShift]: drawerOpen,\n                    })}\n                >\n                    <Suspense\n                        fallback={\n                            <CircularProgress\n                                size=\"48px\"\n                                className={classes.suspense}\n                            />\n                        }\n                    >\n                        {renderRoutes(routes)}\n                    </Suspense>\n                    {props.children}\n                </main>\n\n                {/* <MainFooter /> */}\n            </div>\n\n            <AccountFormDrawer\n                title=\"New Account\"\n                onSave={createAccount}\n                open={openDialog === \"NEW_ACCOUNT\"}\n            />\n            <SubscriptionFormDrawer\n                title=\"New Subscription\"\n                onSave={createSubscription}\n                open={openDialog === \"NEW_SUBSCRIPTION\"}\n            />\n            <TransactionFormDrawer\n                title=\"New Transaction\"\n                onSave={createTransaction}\n                open={openDialog === \"NEW_TRANSACTION\"}\n            />\n            <PlanFormDrawer\n                title=\"New Plan\"\n                onSave={createPlan}\n                open={openDialog === \"NEW_PLAN\"}\n            />\n            <APIKeyFormDrawer\n                title=\"New API Key\"\n                onSave={() => {}}\n                open={openDialog === \"NEW_API_KEY\"}\n            />\n\n            {openDialog === \"EDIT_INVOICE\" && <EditInvoice />}\n            {openDialog === \"EDIT_TRANSACTION\" && <EditTransaction />}\n            {openDialog === \"EDIT_ACCOUNT\" && <EditAccount />}\n            {openDialog === \"EDIT_PLAN\" && <EditPlan />}\n\n            {renderNotification(notification)}\n        </React.Fragment>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        openDialog: state.openDialog,\n        notification: state.notification,\n    };\n}\n\nconst mapDispatchToProps = {\n    closeNotification: actions.closeNotification,\n    createAccount: actions.createAccount,\n    createPlan: actions.createPlan,\n    createSubscription: actions.createSubscription,\n    createTransaction: actions.createTransaction,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout);\n","import MainLayout from \"./MainLayout\";\n\nconst layouts = {\n    main: MainLayout,\n};\n\nexport default layouts;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport layouts from \"../layouts\";\n\nconst styles = (theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.default,\n        color: theme.palette.text.primary,\n    },\n});\n\nfunction PrimaryLayout(props) {\n\tconst { classes } = props;\n\n    // const Layout = layouts[settings.layout.name];\n    const Layout = layouts[\"main\"];\n    return <Layout className={classes.root} {...props} />;\n}\n\nexport default withStyles(styles)(withRouter(PrimaryLayout));\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n    breakpoints: {\n        keys: [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"],\n        values: { xs: 0, sm: 600, md: 960, lg: 1280, xl: 1920 },\n    },\n    direction: \"ltr\",\n    mixins: {\n        toolbar: {\n            minHeight: 56,\n            \"@media (min-width:0px) and (orientation: landscape)\": {\n                minHeight: 48,\n            },\n            \"@media (min-width:600px)\": { minHeight: 64 },\n        },\n    },\n    overrides: {},\n    palette: {\n        common: { black: \"#000\", white: \"#fff\" },\n        type: \"light\",\n        primary: {\n            main: \"#1976d2\",\n            light: \"rgb(71, 145, 219)\",\n            dark: \"rgb(17, 82, 147)\",\n            contrastText: \"#fff\",\n        },\n        secondary: {\n            main: \"rgb(220, 0, 78)\",\n            light: \"rgb(227, 51, 113)\",\n            dark: \"rgb(154, 0, 54)\",\n            contrastText: \"#fff\",\n        },\n        error: {\n            light: \"#e57373\",\n            main: \"#f44336\",\n            dark: \"#d32f2f\",\n            contrastText: \"#fff\",\n        },\n        warning: {\n            light: \"#ffb74d\",\n            main: \"#ff9800\",\n            dark: \"#f57c00\",\n            contrastText: \"rgba(0, 0, 0, 0.87)\",\n        },\n        info: {\n            light: \"#64b5f6\",\n            main: \"#2196f3\",\n            dark: \"#1976d2\",\n            contrastText: \"#fff\",\n        },\n        success: {\n            light: \"#81c784\",\n            main: \"#4caf50\",\n            dark: \"#388e3c\",\n            contrastText: \"rgba(0, 0, 0, 0.87)\",\n        },\n        grey: {\n            \"50\": \"#fafafa\",\n            \"100\": \"#f5f5f5\",\n            \"200\": \"#eeeeee\",\n            \"300\": \"#e0e0e0\",\n            \"400\": \"#bdbdbd\",\n            \"500\": \"#9e9e9e\",\n            \"600\": \"#757575\",\n            \"700\": \"#616161\",\n            \"800\": \"#424242\",\n            \"900\": \"#212121\",\n            A100: \"#d5d5d5\",\n            A200: \"#aaaaaa\",\n            A400: \"#303030\",\n            A700: \"#616161\",\n        },\n        contrastThreshold: 3,\n        tonalOffset: 0.2,\n        text: {\n            primary: \"rgba(0, 0, 0, 0.87)\",\n            secondary: \"rgba(0, 0, 0, 0.54)\",\n            disabled: \"rgba(0, 0, 0, 0.38)\",\n            hint: \"rgba(0, 0, 0, 0.38)\",\n        },\n        divider: \"rgba(0, 0, 0, 0.12)\",\n        background: {\n            paper: \"#fff\",\n            default: \"#fff\",\n            level2: \"#f5f5f5\",\n            level1: \"#fff\",\n        },\n        action: {\n            active: \"rgba(0, 0, 0, 0.54)\",\n            hover: \"rgba(0, 0, 0, 0.04)\",\n            hoverOpacity: 0.04,\n            selected: \"rgba(0, 0, 0, 0.08)\",\n            selectedOpacity: 0.08,\n            disabled: \"rgba(0, 0, 0, 0.26)\",\n            disabledBackground: \"rgba(0, 0, 0, 0.12)\",\n            disabledOpacity: 0.38,\n            focus: \"rgba(0, 0, 0, 0.12)\",\n            focusOpacity: 0.12,\n            activatedOpacity: 0.12,\n        },\n    },\n    props: {},\n    shadows: [\n        \"none\",\n        \"0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)\",\n        \"0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)\",\n        \"0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)\",\n        \"0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)\",\n        \"0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)\",\n        \"0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)\",\n        \"0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)\",\n        \"0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)\",\n        \"0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)\",\n        \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\n        \"0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)\",\n        \"0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)\",\n        \"0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)\",\n        \"0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)\",\n        \"0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)\",\n        \"0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)\",\n        \"0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)\",\n        \"0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)\",\n        \"0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)\",\n        \"0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)\",\n        \"0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)\",\n        \"0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)\",\n        \"0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)\",\n        \"0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)\",\n    ],\n    typography: {\n        htmlFontSize: 16,\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        fontSize: 14,\n        fontWeightLight: 300,\n        fontWeightRegular: 400,\n        fontWeightMedium: 500,\n        fontWeightBold: 700,\n        h1: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 300,\n            fontSize: \"6rem\",\n            lineHeight: 1.167,\n            letterSpacing: \"-0.01562em\",\n        },\n        h2: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 300,\n            fontSize: \"3.75rem\",\n            lineHeight: 1.2,\n            letterSpacing: \"-0.00833em\",\n        },\n        h3: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"3rem\",\n            lineHeight: 1.167,\n            letterSpacing: \"0em\",\n        },\n        h4: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"2.125rem\",\n            lineHeight: 1.235,\n            letterSpacing: \"0.00735em\",\n        },\n        h5: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"1.5rem\",\n            lineHeight: 1.334,\n            letterSpacing: \"0em\",\n        },\n        h6: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 500,\n            fontSize: \"1.25rem\",\n            lineHeight: 1.6,\n            letterSpacing: \"0.0075em\",\n        },\n        subtitle1: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"1rem\",\n            lineHeight: 1.75,\n            letterSpacing: \"0.00938em\",\n        },\n        subtitle2: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 500,\n            fontSize: \"0.875rem\",\n            lineHeight: 1.57,\n            letterSpacing: \"0.00714em\",\n        },\n        body1: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"1rem\",\n            lineHeight: 1.5,\n            letterSpacing: \"0.00938em\",\n        },\n        body2: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"0.875rem\",\n            lineHeight: 1.43,\n            letterSpacing: \"0.01071em\",\n        },\n        button: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 500,\n            fontSize: \"0.875rem\",\n            lineHeight: 1.75,\n            letterSpacing: \"0.02857em\",\n            textTransform: \"none\",\n        },\n        caption: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"0.75rem\",\n            lineHeight: 1.66,\n            letterSpacing: \"0.03333em\",\n        },\n        overline: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"0.75rem\",\n            lineHeight: 2.66,\n            letterSpacing: \"0.08333em\",\n            textTransform: \"uppercase\",\n        },\n    },\n    shape: { borderRadius: 4 },\n    transitions: {\n        easing: {\n            easeInOut: \"cubic-bezier(0.4, 0, 0.2, 1)\",\n            easeOut: \"cubic-bezier(0.0, 0, 0.2, 1)\",\n            easeIn: \"cubic-bezier(0.4, 0, 1, 1)\",\n            sharp: \"cubic-bezier(0.4, 0, 0.6, 1)\",\n        },\n        duration: {\n            shortest: 150,\n            shorter: 200,\n            short: 250,\n            standard: 300,\n            complex: 375,\n            enteringScreen: 225,\n            leavingScreen: 195,\n        },\n    },\n    zIndex: {\n        mobileStepper: 1000,\n        speedDial: 1050,\n        appBar: 1100,\n        drawer: 1200,\n        modal: 1300,\n        snackbar: 1400,\n        tooltip: 1500,\n    },\n    nprogress: { color: \"#000\" },\n});\n\nexport default theme;\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { PrimaryLayout } from \"./common\";\nimport { ThemeProvider, makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\n\nimport theme from \"./theme\";\nimport * as actions from \"./redux/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n    checking: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        height: \"100vh\",\n        width: \"100%\",\n    },\n    checkingProgress: {\n        marginTop: 16,\n    },\n    checkingText: {\n        marginTop: 16,\n        fontSize: 16,\n    },\n}));\n\nfunction App(props) {\n    const { user, isUserLoading, fetchUser } = props;\n    const classes = useStyles();\n\n    const renderCheckingAuthorization = () => {\n        if (isUserLoading) {\n            return (\n                <div className={classes.checking}>\n                    <CircularProgress\n                        size={50}\n                        thickness={4}\n                        className={classes.checkingProgress}\n                        variant=\"indeterminate\"\n                    />\n                    <Typography className={classes.checkingText}>\n                        Checking authorization...\n                    </Typography>\n                </div>\n            );\n        }\n\n        if (!isUserLoading && !user) {\n            window.location = `${process.env.REACT_APP_WEBSITE_URL}/login`;\n        }\n\n        return null;\n    };\n\n    useEffect(() => {\n        fetchUser();\n    }, [fetchUser]);\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <BrowserRouter>\n                <ThemeProvider theme={theme}>\n                    {user && <PrimaryLayout />}\n                    {renderCheckingAuthorization()}\n                </ThemeProvider>\n            </BrowserRouter>\n        </React.Fragment>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.user,\n        isUserLoading: state.isUserLoading,\n    };\n}\n\nconst mapDispatchToProps = {\n    fetchUser: actions.fetchUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import { combineReducers } from \"redux\";\nimport * as ActionTypes from \"./actionTypes\";\n\nfunction dialogReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.NEW_API_KEY:\n        case ActionTypes.NEW_ACCOUNT:\n        case ActionTypes.NEW_SUBSCRIPTION:\n        case ActionTypes.NEW_INVOICE:\n        case ActionTypes.NEW_TRANSACTION:\n        case ActionTypes.NEW_PLAN:\n        case ActionTypes.EDIT_ACCOUNT:\n        case ActionTypes.EDIT_TRANSACTION:\n        case ActionTypes.EDIT_PLAN:\n        case ActionTypes.EDIT_INVOICE: {\n            return action.type;\n        }\n\n        case ActionTypes.CLOSE_DIALOG: {\n            return null;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction notificationReducer(state = null, action) {\n    if (action.type === \"SHOW_NOTIFICATION\") {\n        return {\n            message: action.payload.message,\n            category: action.payload.category,\n        };\n    } else if (action.type === \"CLOSE_NOTIFICATION\") {\n        return null;\n    }\n    return state;\n}\n\nfunction analyticsReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_ANALYTICS_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction accountsReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_ACCOUNTS_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction accountReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_ACCOUNT_COMPLETE:\n        case ActionTypes.EDIT_ACCOUNT: {\n            return action.payload;\n        }\n\n        case ActionTypes.CLEAR_ACCOUNT: {\n            return null;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction subscriptionsReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_SUBSCRIPTIONS_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction subscriptionReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_SUBSCRIPTION_COMPLETE: {\n            return action.payload;\n        }\n\n        case ActionTypes.CLEAR_SUBSCRIPTION: {\n            return null;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction invoicesReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_INVOICES_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction invoiceReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_INVOICE_COMPLETE:\n        case ActionTypes.EDIT_INVOICE: {\n            return action.payload;\n        }\n\n        case ActionTypes.CLEAR_INVOICE: {\n            return null;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction transactionsReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_TRANSACTIONS_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction transactionReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_TRANSACTION_COMPLETE:\n        case ActionTypes.EDIT_TRANSACTION: {\n            return action.payload;\n        }\n\n        case ActionTypes.CLEAR_TRANSACTION: {\n            return null;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction plansReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_PLANS_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction planReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_PLAN_COMPLETE:\n        case ActionTypes.EDIT_PLAN: {\n            return action.payload;\n        }\n\n        case ActionTypes.CLEAR_ACCOUNT: {\n            return null;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction userReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_USER_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction isUserLoadingReducer(state = true, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_USER_COMPLETE:\n        case ActionTypes.FETCH_USER_FAILED: {\n            return false;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction internalRedirectReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.INTERNAL_REDIRECT: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nconst rootReducer = combineReducers({\n    openDialog: dialogReducer,\n    notification: notificationReducer,\n    analytics: analyticsReducer,\n    accounts: accountsReducer,\n    account: accountReducer,\n    subscriptions: subscriptionsReducer,\n    subscription: subscriptionReducer,\n    transactions: transactionsReducer,\n    transaction: transactionReducer,\n    plans: plansReducer,\n    plan: planReducer,\n    invoices: invoicesReducer,\n    invoice: invoiceReducer,\n    user: userReducer,\n    isUserLoading: isUserLoadingReducer,\n    internalRedirect: internalRedirectReducer,\n});\n\nexport default rootReducer;\n","import thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nlet store;\nif (process.env.NODE_ENV === \"development\") {\n    store = createStore(\n        rootReducer,\n        compose(applyMiddleware(thunk), composeWithDevTools())\n    );\n} else {\n    store = createStore(rootReducer, compose(applyMiddleware(thunk)));\n}\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable no-use-before-define */\n\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withFormsy } from \"formsy-react\";\nimport { data as countries } from \"../../common/countries\";\n\n/* ISO 3166-1 alpha-2\n * ⚠️ No support for IE 11\n */\nfunction countryToFlag(isoCode) {\n    return typeof String.fromCodePoint !== \"undefined\"\n        ? isoCode\n              .toUpperCase()\n              .replace(/./g, (character) =>\n                  String.fromCodePoint(character.charCodeAt(0) + 127397)\n              )\n        : isoCode;\n}\n\nconst useStyles = makeStyles({\n    option: {\n        fontSize: 16,\n        \"& > span\": {\n            marginRight: 8,\n            fontSize: 18,\n        },\n    },\n});\n\nfunction CountrySelect(props) {\n    const { fullWidth, label, required, onChange, value } = props;\n    const classes = useStyles();\n\n    return (\n        <Autocomplete\n            fullWidth={fullWidth}\n            required={required}\n            options={countries}\n            classes={{\n                option: classes.option,\n            }}\n            autoHighlight={true}\n            getOptionLabel={(option) => option.label}\n            renderOption={(option) => (\n                <React.Fragment>\n                    <span>{countryToFlag(option.code)}</span>\n                    {option.label}\n                </React.Fragment>\n            )}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    label={label}\n                    variant=\"outlined\"\n                    inputProps={{\n                        ...params.inputProps,\n                        autoComplete:\n                            \"new-password\" /* Disable autocomplete and autofill */,\n                    }}\n                />\n            )}\n            onChange={onChange}\n            value={value}\n        />\n    );\n}\n\nexport default withFormsy(CountrySelect);\n","/* eslint-disable no-use-before-define */\n\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withFormsy } from \"formsy-react\";\n\nconst useStyles = makeStyles({\n    option: {},\n});\n\nfunction Lookup(props) {\n    const {\n        label,\n        options,\n        updateOptions,\n        value,\n        onChange,\n        renderOption,\n        renderOptionLabel,\n        name,\n        required,\n    } = props;\n    const classes = useStyles();\n    const [inputValue, setInputValue] = React.useState(\"\");\n\n    return (\n        <Autocomplete\n            fullWidth={true}\n            options={options}\n            classes={{\n                option: classes.option,\n            }}\n            autoHighlight={true}\n            getOptionLabel={renderOptionLabel}\n            renderOption={renderOption}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    label={label}\n                    variant=\"outlined\"\n                    inputProps={{\n                        ...params.inputProps,\n                        autoComplete:\n                            \"off\" /* Disable autocomplete and autofill */,\n                    }}\n                    required={required}\n                    name={name}\n                />\n            )}\n            onInputChange={(event, inputValue, reason) => {\n                if (reason === \"input\") {\n                    // Convert empty strings to null.\n                    updateOptions(inputValue ? inputValue : null);\n                }\n                setInputValue(inputValue);\n            }}\n            inputValue={inputValue}\n            onChange={onChange}\n            value={value}\n        />\n    );\n}\n\nexport default withFormsy(Lookup);\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { withFormsy } from \"formsy-react\";\n\nfunction FormsyTextField(props) {\n    const errorMessage = props.errorMessage;\n    const value = props.value || \"\";\n\n    const changeValue = (event) => {\n        props.setValue(event.currentTarget.value);\n        if (props.onChange) {\n            props.onChange(event);\n        }\n    };\n\n    return (\n        <TextField\n            {...props}\n            onChange={changeValue}\n            value={value}\n            error={Boolean(errorMessage)}\n            helperText={errorMessage}\n        />\n    );\n}\n\nexport default withFormsy(FormsyTextField);\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { format } from \"date-fns\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n    KeyboardTimePicker,\n    KeyboardDateTimePicker,\n} from \"@material-ui/pickers\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CountrySelect from \"./CountrySelect\";\nimport Lookup from \"./Lookup\";\nimport FormsyTextField from \"./FormsyTextField\";\nimport { newClient } from \"../../server/api\";\nimport Formsy from \"formsy-react\";\n\nconst client = newClient();\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n        paddingRight: 16,\n    },\n    extraAction: {\n        textTransform: \"none\",\n    },\n    tabText: {\n        fontWeight: 600,\n        fontSize: 13,\n    },\n    chips: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n        fontWeight: 500,\n    },\n    field: {\n        width: \"100%\",\n        maginLeft: 16,\n        marginRight: 16,\n        marginBottom: 20,\n    },\n}));\n\n// const options = [{ firstName: \"Hello\", lastName: \"World\", userName: \"hello\" }];\n\n// date_range_picker, phone_number, email_address\n// multiple_options (multiselect), single_option (drop down)\n// lookup - organization, user, contact\n\n/* The form configuration is basically an array of groups. Each group consists two attributes - `label`,\n * which is rendered on the left when you click `Shore More`, and `children` which is an array of objects\n * that describe fields. Whatever attribute is in the field configuration is accessible as\n * `field.attributeName` in `RecordForm`.\n */\n\nexport function extractValues(groups) {\n    const result = {};\n    groups.forEach((group) => {\n        group.children.forEach((field) => {\n            if (field.type === \"date_range\") {\n                result[field.identifier] = {\n                    option: field.defaultValue.option,\n                    startDate: field.defaultValue.startDate,\n                    endDate: field.defaultValue.endDate,\n                };\n            } else if (field.type === \"multi_select\") {\n                result[field.identifier] = [...field.defaultValue];\n            } else {\n                result[field.identifier] = field.defaultValue;\n            }\n        });\n    });\n    return result;\n}\n\nconst apis = {\n    account_lookup: client.getAccounts,\n    plan_lookup: client.getPlans,\n};\n\nfunction prepareLookupContexts(groups) {\n    const result = {};\n    groups.forEach((group) => {\n        group.children.forEach((field) => {\n            if (field.type in apis) {\n                const context = {\n                    updateOptions: async function (field, text) {\n                        if (text) {\n                            const api = apis[field.type];\n                            const data = await api({\n                                search: text,\n                            });\n                            this.setOptions(data.records);\n                        } else {\n                            this.setOptions([]);\n                        }\n                    },\n                };\n                const [options, setOptions] = useState([]);\n                context.options = options;\n                context.setOptions = setOptions;\n                result[field.identifier] = context;\n            }\n        });\n    });\n    return result;\n}\n\nexport default function RecordForm(props) {\n    const {\n        values,\n        groups,\n        showMore,\n        onValueChange,\n        tabIndex,\n        onValidityChange,\n    } = props;\n    const classes = useStyles(props);\n    const contexts = prepareLookupContexts(groups);\n\n    const makeChangeHandler = (field) => (event) => {\n        onValueChange(field, event.target.value);\n    };\n\n    const makeRangeHandler = (field) => (event) => {\n        const newValue = Object.assign({}, values[field.identifier]);\n        newValue.option = event.target.value;\n        onValueChange(field, newValue);\n    };\n\n    const makeDateChangeHandler = (field, which) => (date) => {\n        const newValue = Object.assign({}, values[field.identifier]);\n        // ISO format\n        newValue[which] = format(date, \"yyyy/MM/dd\");\n        onValueChange(field, newValue);\n    };\n\n    const makeLookupChangeHandler = (field) => (event, value) => {\n        onValueChange(field, value ? Object.assign({}, value) : null);\n    };\n\n    const renderSelect = (field) => (\n        <FormControl\n            variant=\"outlined\"\n            fullWidth={true}\n            size=\"medium\"\n            required={field.required}\n        >\n            <InputLabel id={field.identifier}>{field.label}</InputLabel>\n            <Select\n                labelId={field.identifier}\n                value={values[field.identifier]}\n                onChange={makeChangeHandler(field)}\n                label={field.label}\n                name={field.identifier}\n            >\n                {field.options.map((option) => (\n                    <MenuItem value={option.value}>{option.title}</MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    );\n\n    const getSelectedTitle = (field, selected) => {\n        return field.options.find((option) => option.value === selected).title;\n    };\n\n    const renderMultiSelect = (field) => (\n        <FormControl variant=\"outlined\" fullWidth={true} size=\"medium\">\n            <InputLabel id={field.identifier}>{field.label}</InputLabel>\n            <Select\n                labelId={field.identifier}\n                value={values[field.identifier]}\n                multiple={true}\n                onChange={makeChangeHandler(field)}\n                label={field.label}\n                name={field.identifier}\n                renderValue={(selected) => (\n                    <div>\n                        {selected.map((value) => (\n                            <Chip\n                                value={selected}\n                                label={getSelectedTitle(field, value)}\n                                className={classes.chip}\n                            />\n                        ))}\n                    </div>\n                )}\n            >\n                {field.options.map((option) => (\n                    <MenuItem value={option.value}>{option.title}</MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    );\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container={true}>\n                <Formsy\n                    onValid={() => onValidityChange(false)}\n                    onInvalid={() => onValidityChange(true)}\n                    className={classes.root}\n                >\n                    {groups.map((group, groupIndex) =>\n                        group.children.map((field, fieldIndex) =>\n                            (!showMore && field.quickAdd) ||\n                            (showMore && groupIndex === tabIndex) ? (\n                                <Grid\n                                    key={field.identifier}\n                                    item={true}\n                                    lg={12}\n                                    className={classes.field}\n                                >\n                                    {field.type === \"text\" && (\n                                        <FormsyTextField\n                                            label={field.label}\n                                            id={field.identifier}\n                                            name={field.identifier}\n                                            type=\"text\"\n                                            variant=\"outlined\"\n                                            fullWidth={true}\n                                            required={field.required}\n                                            value={values[field.identifier]}\n                                            onChange={makeChangeHandler(field)}\n                                            size=\"medium\"\n                                            validations={field.validations}\n                                            validationErrors={\n                                                field.validationErrors\n                                            }\n                                            preventFirstValidation={true}\n                                        />\n                                    )}\n\n                                    {field.type === \"password\" && (\n                                        <FormsyTextField\n                                            label={field.label}\n                                            id={field.identifier}\n                                            name={field.identifier}\n                                            type=\"password\"\n                                            variant=\"outlined\"\n                                            fullWidth={true}\n                                            required={field.required}\n                                            value={values[field.identifier]}\n                                            onChange={makeChangeHandler(field)}\n                                            size=\"medium\"\n                                            validations={field.validations}\n                                            validationErrors={\n                                                field.validationErrors\n                                            }\n                                            preventFirstValidation={true}\n                                        />\n                                    )}\n\n                                    {field.type === \"large_text\" && (\n                                        <FormsyTextField\n                                            id={field.identifier}\n                                            label={field.label}\n                                            name={field.identifier}\n                                            type=\"text\"\n                                            multiline={true}\n                                            rows={field.rows || 4}\n                                            fullWidth={true}\n                                            variant=\"outlined\"\n                                            required={field.required}\n                                            value={values[field.identifier]}\n                                            onChange={makeChangeHandler(field)}\n                                            size=\"medium\"\n                                            validations={field.validations}\n                                            validationErrors={\n                                                field.validationErrors\n                                            }\n                                            preventFirstValidation={true}\n                                        />\n                                    )}\n\n                                    {field.type === \"number\" && (\n                                        <FormsyTextField\n                                            id={field.identifier}\n                                            label={field.label}\n                                            name={field.identifier}\n                                            type=\"number\"\n                                            fullWidth={true}\n                                            variant=\"outlined\"\n                                            required={field.required}\n                                            value={values[field.identifier]}\n                                            onChange={makeChangeHandler(field)}\n                                            size=\"medium\"\n                                            validations={field.validations}\n                                            validationErrors={\n                                                field.validationErrors\n                                            }\n                                            preventFirstValidation={true}\n                                        />\n                                    )}\n\n                                    {field.type === \"date\" && (\n                                        <KeyboardDatePicker\n                                            id={field.identifier}\n                                            label={field.label}\n                                            name={field.identifier}\n                                            format=\"MM/dd/yyyy\"\n                                            fullWidth={true}\n                                            inputVariant=\"outlined\"\n                                            required={field.required}\n                                            value={\n                                                !values[field.identifier]\n                                                    ? new Date()\n                                                    : new Date(\n                                                          values[\n                                                              field.identifier\n                                                          ]\n                                                      )\n                                            }\n                                            onChange={(value) =>\n                                                onValueChange(field, value)\n                                            }\n                                            size=\"medium\"\n                                        />\n                                    )}\n\n                                    {field.type === \"time\" && (\n                                        <KeyboardTimePicker\n                                            id={field.identifier}\n                                            label={field.label}\n                                            name={field.identifier}\n                                            fullWidth={true}\n                                            inputVariant=\"outlined\"\n                                            required={field.required}\n                                            value={\n                                                !values[field.identifier]\n                                                    ? new Date()\n                                                    : new Date(\n                                                          values[\n                                                              field.identifier\n                                                          ]\n                                                      )\n                                            }\n                                            onChange={(value) =>\n                                                onValueChange(field, value)\n                                            }\n                                            size=\"medium\"\n                                        />\n                                    )}\n\n                                    {field.type === \"date_time\" && (\n                                        <KeyboardDateTimePicker\n                                            id={field.identifier}\n                                            label={field.label}\n                                            name={field.identifier}\n                                            fullWidth={true}\n                                            inputVariant=\"outlined\"\n                                            required={field.required}\n                                            value={\n                                                !values[field.identifier]\n                                                    ? new Date()\n                                                    : new Date(\n                                                          values[\n                                                              field.identifier\n                                                          ]\n                                                      )\n                                            }\n                                            onChange={(value) =>\n                                                onValueChange(field, value)\n                                            }\n                                            size=\"medium\"\n                                            format=\"MM/dd/yyyy, hh:mm a\"\n                                        />\n                                    )}\n\n                                    {field.type === \"switch\" && (\n                                        <FormGroup>\n                                            <FormControlLabel\n                                                id={field.identifier}\n                                                label={field.label}\n                                                name={field.identifier}\n                                                control={\n                                                    <Switch color=\"primary\" />\n                                                }\n                                                required={field.required}\n                                                value={values[field.identifier]}\n                                                onChange={makeChangeHandler(\n                                                    field\n                                                )}\n                                            />\n                                        </FormGroup>\n                                    )}\n\n                                    {field.type === \"date_range\" && (\n                                        <div>\n                                            <FormControl\n                                                variant=\"outlined\"\n                                                fullWidth={true}\n                                                size=\"medium\"\n                                            >\n                                                <InputLabel\n                                                    id={field.identifier}\n                                                >\n                                                    {field.title}\n                                                </InputLabel>\n                                                <Select\n                                                    name={field.identifier}\n                                                    labelId={field.identifier}\n                                                    value={\n                                                        values[field.identifier]\n                                                            .option\n                                                    }\n                                                    onChange={makeRangeHandler(\n                                                        field\n                                                    )}\n                                                    label={field.title}\n                                                >\n                                                    {field.options.map(\n                                                        (option) => (\n                                                            <MenuItem\n                                                                value={\n                                                                    option.value\n                                                                }\n                                                            >\n                                                                {option.title}\n                                                            </MenuItem>\n                                                        )\n                                                    )}\n                                                </Select>\n                                            </FormControl>\n                                            {values[field.identifier].option ===\n                                                \"custom\" && (\n                                                <React.Fragment>\n                                                    <KeyboardDatePicker\n                                                        margin=\"normal\"\n                                                        id={\n                                                            field.identifier +\n                                                            \"Start\"\n                                                        }\n                                                        label={field.startTitle}\n                                                        format=\"MM/dd/yyyy\"\n                                                        inputVariant=\"outlined\"\n                                                        fullWidth={true}\n                                                        name={\n                                                            field.identifier +\n                                                            \"Start\"\n                                                        }\n                                                        size=\"medium\"\n                                                        value={\n                                                            !values[\n                                                                field.identifier\n                                                            ].startDate\n                                                                ? new Date()\n                                                                : new Date(\n                                                                      values[\n                                                                          field.identifier\n                                                                      ].startDate\n                                                                  )\n                                                        }\n                                                        onChange={makeDateChangeHandler(\n                                                            field,\n                                                            \"startDate\"\n                                                        )}\n                                                    />\n                                                    <KeyboardDatePicker\n                                                        margin=\"normal\"\n                                                        name={\n                                                            field.identifier +\n                                                            \"End\"\n                                                        }\n                                                        id={\n                                                            field.identifier +\n                                                            \"End\"\n                                                        }\n                                                        label={field.endTitle}\n                                                        format=\"MM/dd/yyyy\"\n                                                        inputVariant=\"outlined\"\n                                                        fullWidth={true}\n                                                        size=\"medium\"\n                                                        value={\n                                                            !values[\n                                                                field.identifier\n                                                            ].endDate\n                                                                ? new Date()\n                                                                : new Date(\n                                                                      values[\n                                                                          field.identifier\n                                                                      ].endDate\n                                                                  )\n                                                        }\n                                                        onChange={makeDateChangeHandler(\n                                                            field,\n                                                            \"endDate\"\n                                                        )}\n                                                    />\n                                                </React.Fragment>\n                                            )}\n                                        </div>\n                                    )}\n\n                                    {field.type === \"select\" &&\n                                        renderSelect(field)}\n\n                                    {field.type === \"multi_select\" &&\n                                        renderMultiSelect(field)}\n\n                                    {field.type === \"email_address\" && (\n                                        <FormsyTextField\n                                            id={field.identifier}\n                                            label={field.label}\n                                            name={field.identifier}\n                                            type=\"text\"\n                                            fullWidth={true}\n                                            variant=\"outlined\"\n                                            required={field.required}\n                                            value={values[field.identifier]}\n                                            onChange={makeChangeHandler(field)}\n                                            validations={field.validations}\n                                            validationErrors={\n                                                field.validationErrors\n                                            }\n                                            size=\"medium\"\n                                        />\n                                    )}\n\n                                    {field.type === \"phone_number\" && (\n                                        <FormsyTextField\n                                            id={field.identifier}\n                                            label={field.label}\n                                            name={field.identifier}\n                                            type=\"text\"\n                                            fullWidth={true}\n                                            variant=\"outlined\"\n                                            required={field.required}\n                                            value={values[field.identifier]}\n                                            onChange={makeChangeHandler(field)}\n                                            validations={field.validations}\n                                            validationErrors={\n                                                field.validationErrors\n                                            }\n                                            size=\"medium\"\n                                            preventFirstValidation={true}\n                                        />\n                                    )}\n\n                                    {field.type === \"country\" && (\n                                        <CountrySelect\n                                            id={field.identifier}\n                                            label={field.label}\n                                            name={field.identifier}\n                                            fullWidth={true}\n                                            required={field.required}\n                                            value={values[field.identifier]}\n                                            onChange={makeLookupChangeHandler(\n                                                field\n                                            )}\n                                            validations={field.validations}\n                                            validationErrors={\n                                                field.validationErrors\n                                            }\n                                            size=\"medium\"\n                                            preventFirstValidation={true}\n                                        />\n                                    )}\n\n                                    {field.type === \"account_lookup\" && (\n                                        <Lookup\n                                            label={field.label}\n                                            options={\n                                                contexts[field.identifier]\n                                                    .options\n                                            }\n                                            updateOptions={(searchText) =>\n                                                contexts[\n                                                    field.identifier\n                                                ].updateOptions(\n                                                    field,\n                                                    searchText\n                                                )\n                                            }\n                                            onChange={makeLookupChangeHandler(\n                                                field\n                                            )}\n                                            value={values[field.identifier]}\n                                            renderOptionLabel={(option) =>\n                                                `${option.userName}`\n                                            }\n                                            renderOption={(option) => (\n                                                <React.Fragment>\n                                                    {`${option.userName} • ${option.firstName} ${option.lastName}`}\n                                                </React.Fragment>\n                                            )}\n                                            name={field.identifier}\n                                            required={field.required}\n                                        />\n                                    )}\n\n                                    {field.type === \"plan_lookup\" && (\n                                        <Lookup\n                                            label={field.label}\n                                            options={\n                                                contexts[field.identifier]\n                                                    .options\n                                            }\n                                            updateOptions={(searchText) =>\n                                                contexts[\n                                                    field.identifier\n                                                ].updateOptions(\n                                                    field,\n                                                    searchText\n                                                )\n                                            }\n                                            onChange={makeLookupChangeHandler(\n                                                field\n                                            )}\n                                            value={values[field.identifier]}\n                                            renderOptionLabel={(option) =>\n                                                `${option.name}`\n                                            }\n                                            renderOption={(option) => (\n                                                <React.Fragment>\n                                                    {`${option.code} • ${option.name}`}\n                                                </React.Fragment>\n                                            )}\n                                            name={field.identifier}\n                                            required={field.required}\n                                        />\n                                    )}\n                                </Grid>\n                            ) : null\n                        )\n                    )}\n                </Formsy>\n            </Grid>\n        </MuiPickersUtilsProvider>\n    );\n}\n","export const NEW_API_KEY = \"NEW_API_KEY\";\n\nexport const NEW_ACCOUNT = \"NEW_ACCOUNT\";\nexport const FETCH_ACCOUNT_COMPLETE = \"FETCH_ACCOUNT_COMPLETE\";\nexport const FETCH_ACCOUNTS_COMPLETE = \"FETCH_ACCOUNTS_COMPLETE\";\nexport const EDIT_ACCOUNT = \"EDIT_ACCOUNT\";\nexport const CLEAR_ACCOUNT = \"CLEAR_ACCOUNT\";\n\nexport const NEW_SUBSCRIPTION = \"NEW_SUBSCRIPTION\";\nexport const FETCH_SUBSCRIPTION_COMPLETE = \"FETCH_SUBSCRIPTION_COMPLETE\";\nexport const FETCH_SUBSCRIPTIONS_COMPLETE = \"FETCH_SUBSCRIPTIONS_COMPLETE\";\nexport const EDIT_SUBSCRIPTION = \"EDIT_SUBSCRIPTION\";\nexport const CLEAR_SUBSCRIPTION = \"CLEAR_SUBSCRIPTION\";\n\nexport const NEW_INVOICE = \"NEW_INVOICE\";\nexport const FETCH_INVOICE_COMPLETE = \"FETCH_INVOICE_COMPLETE\";\nexport const FETCH_INVOICES_COMPLETE = \"FETCH_INVOICES_COMPLETE\";\nexport const EDIT_INVOICE = \"EDIT_INVOICE\";\nexport const CLEAR_INVOICE = \"CLEAR_INVOICE\";\n\nexport const NEW_TRANSACTION = \"NEW_TRANSACTION\";\nexport const FETCH_TRANSACTION_COMPLETE = \"FETCH_TRANSACTION_COMPLETE\";\nexport const FETCH_TRANSACTIONS_COMPLETE = \"FETCH_TRANSACTIONS_COMPLETE\";\nexport const EDIT_TRANSACTION = \"EDIT_TRANSACTION\";\nexport const CLEAR_TRANSACTION = \"CLEAR_TRANSACTION\";\n\nexport const NEW_PLAN = \"NEW_PLAN\";\nexport const FETCH_PLAN_COMPLETE = \"FETCH_PLAN_COMPLETE\";\nexport const FETCH_PLANS_COMPLETE = \"FETCH_PLANS_COMPLETE\";\nexport const EDIT_PLAN = \"EDIT_PLAN\";\nexport const CLEAR_PLAN = \"CLEAR_PLAN\";\n\nexport const FETCH_ANALYTICS_COMPLETE = \"FETCH_ANALYTICS_COMPLETE\";\n\nexport const CLOSE_DIALOG = \"CLOSE_DIALOG\";\nexport const SHOW_NOTIFICATION = \"SHOW_NOTIFICATION\";\nexport const CLOSE_NOTIFICATION = \"CLOSE_NOTIFICATION\";\n\nexport const FETCH_USER_COMPLETE = \"FETCH_USER_COMPLETE\";\nexport const FETCH_USER_FAILED = \"FETCH_USER_FAILED\";\n\nexport const INTERNAL_REDIRECT = \"INTERNAL_REDIRECT\";\n"],"sourceRoot":""}