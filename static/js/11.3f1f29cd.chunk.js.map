{"version":3,"sources":["workspace/common/WorkspaceToolbar.js","utils.js","workspace/common/WorkspaceFilter.js","workspace/common/NoRecords.js","workspace/common/WorkspaceTableHead.js","workspace/common/WorkspaceTable.js","../node_modules/@material-ui/icons/Delete.js","workspace/subscription/ViewSubscriptions.js"],"names":["useToolbarStyles","makeStyles","theme","appBar","color","palette","primary","background","toolbar","paddingLeft","spacing","paddingRight","buttons","marginLeft","action","textTransform","title","text","fontWeight","highlight","type","secondary","main","backgroundColor","lighten","light","dark","actionIcon","marginRight","WorkspaceToolbar","props","classes","selectionCount","actions","onAction","makeActionHandler","identifier","normalTitle","className","variant","id","component","selectedTitle","selected","position","elevation","clsx","map","size","onClick","icon","Fragment","toDateString","date","toLocaleDateString","undefined","year","month","day","useStyles","root","padding","fontSize","marginBottom","clear","display","marginTop","datePicker","toURLParams","fields","values","console","log","result","forEach","field","option","startIdentifier","startDate","getTime","endIdentifier","endDate","toFilterState","params","defaultValue","timestamp","parseInt","Date","WorkspaceFilter","onValueChange","onClear","makeChangeHandler","event","target","value","makeTimeRangeHandler","newValue","Object","assign","makeDateChangeHandler","which","utils","DateFnsUtils","container","item","lg","control","fullWidth","labelId","onChange","label","options","renderSelect","margin","startTitle","format","inputVariant","endTitle","renderTimeRange","alignItems","justifyContent","flexDirection","image","width","height","message","NoRecords","actionText","actionHandler","src","alt","WorkspaceTableHead","order","orderBy","onRequestSort","headers","TableHead","TableRow","header","TableCell","key","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","defaultDescendingComparator","a","b","paper","table","minWidth","border","clip","overflow","top","WorkspaceTable","onSelected","compact","renderCellValue","rows","totalRows","page","onChangePage","rowsPerPage","onChangeRowsPerPage","descendingComparator","React","useState","setOrder","setOrderBy","emptyRows","length","makeHandleCellClick","row","column","clickable","Paper","TableContainer","Table","onSelectAll","checked","newSelection","rowCount","TableBody","array","comparator","auxillary","index","sort","stableSort","getComparator","isItemSelected","indexOf","hover","role","tabIndex","rowIndex","columnIndex","renderCells","style","colSpan","TablePagination","rowsPerPageOptions","count","newPage","_interopRequireDefault","require","defineProperty","exports","default","_react","_default","createElement","d","filterFields","actions1","AddIcon","FilterIcon","ListIcon","DeleteIcon","actions2","CompactIcon","statuses","new","future","in_trial","pending","halted","canceled","expired","paused","mapDispatchToProps","fetchSubscriptions","newSubscription","connect","state","subscriptions","withRouter","history","location","queryString","parse","search","setSelected","keys","openFilter","setOpenFilter","setCompact","setPage","limit","setRowsPerPage","defaultFilterValues","filterValues","setFilterValues","generateURL","flatValues","URLSearchParams","append","push","toString","Number","useEffect","records","subscription","plan","name","account","firstName","lastName","quantity","createdAt","status","totalRecords","newRowsPerPage","accountA","accountB","valueA","valueB","toLowerCase","newValues","defaultValues"],"mappings":"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","file":"static/js/11.3f1f29cd.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    appBar: {\n        color: theme.palette.primary,\n        background: \"white\",\n    },\n    toolbar: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    buttons: {\n        marginLeft: \"auto\",\n    },\n    action: {\n        textTransform: \"none\",\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    title: {\n        color: theme.palette.text.primary,\n        fontWeight: 500,\n    },\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    actionIcon: {\n        marginRight: 4,\n    },\n}));\n\nfunction WorkspaceToolbar(props) {\n    const classes = useToolbarStyles();\n    const { title, selectionCount, actions, onAction } = props;\n\n    const makeActionHandler = (identifier) => () => onAction(identifier);\n\n    const normalTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"h6\"\n            id=\"tableTitle\"\n            component=\"div\"\n        >\n            {title}\n        </Typography>\n    );\n\n    const selectedTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"subtitle1\"\n            component=\"div\"\n        >\n            {selectionCount} selected\n        </Typography>\n    );\n\n    const selected = selectionCount > 0;\n\n    const recordButtons = () => {\n        if (actions) {\n            return actions.map(\n                (action) =>\n                    !action.primary && (\n                        <Button\n                            className={classes.action}\n                            variant=\"text\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={makeActionHandler(action.identifier)}\n                        >\n                            <action.icon className={classes.actionIcon} />\n                            {action.title}\n                        </Button>\n                    )\n            );\n        }\n        return null;\n    };\n\n    const normalButtons = () => {\n        if (actions) {\n            return (\n                <React.Fragment>\n                    {actions.map(\n                        (action) =>\n                            action.primary && (\n                                <Button\n                                    className={classes.action}\n                                    variant=\"text\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    onClick={makeActionHandler(\n                                        action.identifier\n                                    )}\n                                >\n                                    <action.icon\n                                        className={classes.actionIcon}\n                                    />\n                                    {action.title}\n                                </Button>\n                            )\n                    )}\n                </React.Fragment>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <AppBar position=\"static\" elevation={1} className={classes.appBar}>\n            <Toolbar\n                className={clsx(classes.toolbar, {\n                    [classes.highlight]: selected,\n                })}\n            >\n                {selected ? selectedTitle : normalTitle}\n\n                <div className={classes.buttons}>\n                    {selected ? recordButtons() : normalButtons()}\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nWorkspaceToolbar.propTypes = {\n    selectionCount: PropTypes.number.isRequired,\n};\n\nexport default WorkspaceToolbar;\n","export function toDateString(date) {\n    const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n    return date.toLocaleDateString(undefined, options);\n}\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: 16,\n        marginLeft: 16,\n    },\n    title: {\n        fontSize: 16,\n        marginBottom: 24,\n    },\n    clear: {\n        display: \"block\",\n        marginLeft: \"auto\",\n        marginTop: 16,\n    },\n    datePicker: {\n        marginTop: theme.spacing(3),\n        marginBottom: 0,\n    },\n}));\n\nexport function extractFilterState(fields) {\n    const result = {};\n    fields.forEach(\n        (field) =>\n            (result[field.identifier] = JSON.parse(\n                JSON.stringify(field.defaultValue)\n            ))\n    );\n    return result;\n}\n\nexport function toURLParams(fields, values) {\n    console.log(values);\n\n    const result = {};\n    fields.forEach((field) => {\n        if (field.type === \"time_range\") {\n            result[field.identifier] = values[field.identifier].option;\n            if (values[field.identifier].option === \"custom\") {\n                result[field.startIdentifier] = values[\n                    field.identifier\n                ].startDate.getTime();\n                result[field.endIdentifier] = values[\n                    field.identifier\n                ].endDate.getTime();\n            }\n        } else {\n            result[field.identifier] = values[field.identifier];\n        }\n    });\n    console.log(result);\n    return result;\n}\n\nexport function toFilterState(fields, params) {\n    const result = {};\n    fields.forEach((field) => {\n        if (field.type === \"time_range\") {\n            result[field.identifier] = {};\n\n            if (field.identifier in params) {\n                result[field.identifier].option = params[field.identifier];\n            } else {\n                result[field.identifier].option = field.defaultValue.option;\n            }\n\n            if (field.startIdentifier in params) {\n                const timestamp = parseInt(params[field.startIdentifier], 10);\n                result[field.identifier].startDate = new Date(timestamp);\n            } else {\n                result[field.identifier].startDate =\n                    field.defaultValue.startDate;\n            }\n\n            if (field.endIdentifier in params) {\n                const timestamp = parseInt(params[field.endIdentifier], 10);\n                result[field.identifier].endDate = new Date(timestamp);\n            } else {\n                result[field.identifier].endDate = field.defaultValue.endDate;\n            }\n        } else {\n            if (field.identifier in params) {\n                result[field.identifier] = params[field.identifier];\n            } else {\n                result[field.identifier] = field.defaultValue;\n            }\n        }\n    });\n    return result;\n}\n\nexport default function WorkspaceFilter(props) {\n    const { fields, values, onValueChange, onClear } = props;\n    const classes = useStyles();\n    const makeChangeHandler = (field) => (event) => {\n        onValueChange(field, event.target.value);\n    };\n    const makeTimeRangeHandler = (field) => (event) => {\n        const newValue = Object.assign({}, values[field]);\n        newValue.option = event.target.value;\n        onValueChange(field, newValue);\n    };\n    const makeDateChangeHandler = (field, which) => (date) => {\n        const newValue = Object.assign({}, values[field.identifier]);\n        // ISO format\n        newValue[which] = date; // format(date, \"yyyy/MM/dd\");\n        onValueChange(field.identifier, newValue);\n    };\n\n    const renderSelect = (field, value) => (\n        <FormControl\n            variant=\"outlined\"\n            className={classes.control}\n            fullWidth={true}\n        >\n            <InputLabel id={field.identifier}>{field.title}</InputLabel>\n            <Select\n                labelId={field.identifier}\n                value={value}\n                onChange={makeChangeHandler(field.identifier)}\n                label={field.title}\n            >\n                {field.options.map((option) => (\n                    <MenuItem value={option.value}>{option.title}</MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    );\n\n    const renderTimeRange = (field, value) => (\n        <div>\n            <FormControl\n                variant=\"outlined\"\n                className={classes.control}\n                fullWidth={true}\n            >\n                <InputLabel id={field.identifier}>{field.title}</InputLabel>\n                <Select\n                    labelId={field.identifier}\n                    value={value.option}\n                    onChange={makeTimeRangeHandler(field.identifier)}\n                    label={field.title}\n                >\n                    {field.options.map((option) => (\n                        <MenuItem value={option.value}>{option.title}</MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n            {value.option === \"custom\" && (\n                <React.Fragment>\n                    <KeyboardDatePicker\n                        margin=\"normal\"\n                        id={field.identifier + \"Start\"}\n                        label={field.startTitle}\n                        format=\"MM/dd/yyyy\"\n                        inputVariant=\"outlined\"\n                        fullWidth={true}\n                        value={\n                            value.startDate === null\n                                ? new Date()\n                                : new Date(value.startDate)\n                        }\n                        onChange={makeDateChangeHandler(field, \"startDate\")}\n                        className={classes.datePicker}\n                    />\n                    <KeyboardDatePicker\n                        margin=\"normal\"\n                        id={field.identifier + \"End\"}\n                        label={field.endTitle}\n                        format=\"MM/dd/yyyy\"\n                        inputVariant=\"outlined\"\n                        fullWidth={true}\n                        value={\n                            value.endDate === null\n                                ? new Date()\n                                : new Date(value.endDate)\n                        }\n                        onChange={makeDateChangeHandler(field, \"endDate\")}\n                        className={classes.datePicker}\n                    />\n                </React.Fragment>\n            )}\n        </div>\n    );\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Paper className={classes.root}>\n                <Typography className={classes.title} variant=\"h6\">\n                    Filters\n                </Typography>\n                <Grid container={true} spacing={3}>\n                    {fields.map((field) => (\n                        <Grid item={true} lg={12}>\n                            {field.type === \"select\" &&\n                                renderSelect(field, values[field.identifier])}\n\n                            {field.type === \"time_range\" &&\n                                renderTimeRange(\n                                    field,\n                                    values[field.identifier]\n                                )}\n                        </Grid>\n                    ))}\n                </Grid>\n                <Button\n                    size=\"small\"\n                    color=\"secondary\"\n                    variant=\"text\"\n                    className={classes.clear}\n                    onClick={onClear}\n                >\n                    Clear\n                </Button>\n            </Paper>\n        </MuiPickersUtilsProvider>\n    );\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n    },\n    image: {\n        width: \"auto\",\n        height: 400,\n        marginTop: 96,\n    },\n    message: {\n        fontSize: 20,\n        fontWeight: 400,\n        color: theme.palette.text.secondary,\n    },\n    action: {\n        marginTop: 16,\n    },\n}));\n\nexport default function NoRecords(props) {\n    const classes = useStyles();\n    const { message, actionText, actionHandler, action, image } = props;\n\n    return (\n        <div className={classes.container}>\n            <img className={classes.image} src={image} alt=\"\" />\n            <Typography className={classes.message}>{message}</Typography>\n            {action && (\n                <Button\n                    className={classes.action}\n                    variant=\"contained\"\n                    size=\"large\"\n                    color=\"secondary\"\n                    onClick={actionHandler}\n                >\n                    {actionText}\n                </Button>\n            )}\n        </div>\n    );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n// import Checkbox from \"@material-ui/core/Checkbox\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\n\nexport default function WorkspaceTableHead(props) {\n    const {\n        classes,\n        // onSelectAll,\n        order,\n        orderBy,\n        // selectionCount,\n        // rowCount,\n        onRequestSort,\n        headers,\n    } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {/*<TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={\n                            selectionCount > 0 && selectionCount < rowCount\n                        }\n                        checked={rowCount > 0 && selectionCount === rowCount}\n                        onChange={onSelectAll}\n                    />\n                </TableCell>*/}\n                {headers.map((header) => (\n                    <TableCell\n                        key={header.id}\n                        align={header.numeric ? \"right\" : \"left\"}\n                        padding={header.disablePadding ? \"none\" : \"default\"}\n                        sortDirection={orderBy === header.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === header.id}\n                            direction={orderBy === header.id ? order : \"asc\"}\n                            onClick={createSortHandler(header.id)}\n                        >\n                            {header.label}\n                            {orderBy === header.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === \"desc\"\n                                        ? \"sorted descending\"\n                                        : \"sorted ascending\"}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nWorkspaceTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    selectionCount: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAll: PropTypes.func.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n// import Checkbox from \"@material-ui/core/Checkbox\";\n\nimport WorkspaceTableHead from \"./WorkspaceTableHead\";\n\n/* The default comparator is recommended if the column IDs and the values are primitive.\n * Otherwise you should provide a custom descending comparator.\n */\nfunction defaultDescendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(descendingComparator, order, orderBy) {\n    return order === \"desc\"\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const auxillary = array.map((value, index) => [value, index]);\n    auxillary.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) {\n            return order;\n        }\n        return a[1] - b[1];\n    });\n    return auxillary.map((value) => value[0]);\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n    },\n    paper: {\n        width: \"100%\",\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function WorkspaceTable(props) {\n    const classes = useStyles();\n    const {\n        onSelected,\n        headers,\n        selected,\n        compact,\n        onClick,\n        renderCellValue,\n        rows,\n        totalRows,\n        page,\n        onChangePage,\n        rowsPerPage,\n        onChangeRowsPerPage,\n        descendingComparator,\n    } = props;\n    const [order, setOrder] = React.useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"calories\");\n\n    const handleRequestSort = (event, property) => {\n        const ascending = orderBy === property && order === \"asc\";\n        setOrder(ascending ? \"desc\" : \"asc\");\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelection = rows.map((row) => row.id);\n            onSelected(newSelection);\n        } else {\n            onSelected([]);\n        }\n    };\n\n    // const makeHandleSelect = (name) => (event) => {\n    //     const selectedIndex = selected.indexOf(name);\n    //     let newSelected = [];\n\n    //     if (selectedIndex === -1) {\n    //         newSelected = newSelected.concat(selected, name);\n    //     } else if (selectedIndex === 0) {\n    //         newSelected = newSelected.concat(selected.slice(1));\n    //     } else if (selectedIndex === selected.length - 1) {\n    //         newSelected = newSelected.concat(selected.slice(0, -1));\n    //     } else if (selectedIndex > 0) {\n    //         newSelected = newSelected.concat(\n    //             selected.slice(0, selectedIndex),\n    //             selected.slice(selectedIndex + 1)\n    //         );\n    //     }\n\n    //     onSelected(newSelected);\n    // };\n\n    const emptyRows = rowsPerPage - rows.length;\n\n    const makeHandleCellClick = (row, column) => () => {\n        if (column.clickable) {\n            onClick(row);\n        }\n    };\n\n    const renderCells = (row, rowIndex) => (\n        <React.Fragment>\n            {headers.map((column, columnIndex) => (\n                <TableCell onClick={makeHandleCellClick(row, column)}>\n                    {renderCellValue(row, rowIndex, column, columnIndex)}\n                </TableCell>\n            ))}\n        </React.Fragment>\n    );\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        size={compact ? \"small\" : \"medium\"}\n                    >\n                        <WorkspaceTableHead\n                            classes={classes}\n                            selectionCount={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAll={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                            headers={headers}\n                        />\n                        <TableBody>\n                            {stableSort(\n                                rows,\n                                getComparator(\n                                    descendingComparator ||\n                                        defaultDescendingComparator,\n                                    order,\n                                    orderBy\n                                )\n                            ).map((row, index) => {\n                                const isItemSelected =\n                                    selected.indexOf(row.id) >= 0;\n\n                                return (\n                                    <TableRow\n                                        hover={true}\n                                        role=\"checkbox\"\n                                        tabIndex={-1}\n                                        key={row.identifier}\n                                        selected={isItemSelected}\n                                    >\n                                        {/*<TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    onChange={makeHandleSelect(\n                                                        row.identifier\n                                                    )}\n                                                />\n                                            </TableCell>*/}\n\n                                        {renderCells(row, index)}\n                                    </TableRow>\n                                );\n                            })}\n                            {emptyRows > 0 && (\n                                <TableRow\n                                    style={{\n                                        height: (compact ? 33 : 53) * emptyRows,\n                                    }}\n                                >\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[20, 40, 60, 80, 100]}\n                    component=\"div\"\n                    count={totalRows}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={(event, newPage) => onChangePage(newPage)}\n                    onChangeRowsPerPage={(event) =>\n                        onChangeRowsPerPage(parseInt(event.target.value, 10))\n                    }\n                />\n            </Paper>\n        </div>\n    );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import React, { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport WorkspaceTable from \"../common/WorkspaceTable\";\nimport WorkspaceToolbar from \"../common/WorkspaceToolbar\";\nimport WorkspaceFilter from \"../common/WorkspaceFilter\";\nimport NoRecords from \"../common/NoRecords\";\nimport { toURLParams, toFilterState } from \"../common/WorkspaceFilter\";\nimport * as actions from \"../../redux/actions\";\nimport { toDateString } from \"../../utils\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ListIcon from \"@material-ui/icons/ViewList\";\nimport FilterIcon from \"@material-ui/icons/FilterList\";\nimport CompactIcon from \"@material-ui/icons/ViewCompact\";\nimport queryString from \"query-string\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: 16,\n    },\n}));\n\nconst headers = [\n    {\n        identifier: \"name\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Name\",\n        clickable: true,\n    },\n    {\n        identifier: \"plan\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Plan\",\n        clickable: true,\n    },\n    {\n        identifier: \"quantity\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Quantity\",\n        clickable: true,\n    },\n    {\n        identifier: \"status\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Status\",\n    },\n    {\n        identifier: \"created\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Created\",\n        clickable: true,\n    },\n    /*{\n        identifier: \"nextInvoice\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Next Invoice\",\n    },*/\n];\n\nconst filterFields = [\n    {\n        identifier: \"date_range\",\n        type: \"time_range\",\n        title: \"Time Range\",\n        startTitle: \"Start Date\",\n        startIdentifier: \"start_date\",\n        endTitle: \"End Date\",\n        endIdentifier: \"end_date\",\n        options: [\n            {\n                value: \"all_time\",\n                title: \"All Time\",\n            },\n            {\n                value: \"last_3_months\",\n                title: \"Last 3 Months\",\n            },\n            {\n                value: \"last_6_months\",\n                title: \"Last 6 Months\",\n            },\n            {\n                value: \"last_9_months\",\n                title: \"Last 9 Months\",\n            },\n            {\n                value: \"last_12_months\",\n                title: \"Last 12 Months\",\n            },\n            {\n                value: \"last_15_months\",\n                title: \"Last 15 Months\",\n            },\n            {\n                value: \"last_18_months\",\n                title: \"Last 18 Months\",\n            },\n            {\n                value: \"custom\",\n                title: \"Custom\",\n            },\n        ],\n        defaultValue: {\n            option: \"all_time\",\n            startDate: new Date(),\n            endDate: new Date(),\n        },\n    },\n    /*{\n        // TODO: Change type to switch.\n        identifier: \"trial_status\",\n        type: \"select\",\n        title: \"Trial Status\",\n        options: [\n            {\n                value: \"all\",\n                title: \"All\",\n            },\n            {\n                value: \"in_trial\",\n                title: \"In Trial\",\n            },\n            {\n                value: \"not_in_trial\",\n                title: \"Not In Trial\",\n            },\n        ],\n        defaultValue: \"all\",\n    },*/\n    {\n        identifier: \"subscription_status\",\n        type: \"select\",\n        title: \"Subscription Status\",\n        options: [\n            {\n                value: \"all\",\n                title: \"All\",\n            },\n            {\n                value: \"new\",\n                title: \"New\",\n            },\n            {\n                value: \"future\",\n                title: \"Future\",\n            },\n            {\n                value: \"in_trial\",\n                title: \"In Trial\",\n            },\n            {\n                value: \"active\",\n                title: \"Active\",\n            },\n            {\n                value: \"pending\",\n                title: \"Pending\",\n            },\n            {\n                value: \"halted\",\n                title: \"Halted\",\n            },\n            {\n                value: \"canceled\",\n                title: \"Canceled\",\n            },\n            {\n                value: \"expired\",\n                title: \"Expired\",\n            },\n            {\n                value: \"paused\",\n                title: \"Paused\",\n            },\n        ],\n        defaultValue: \"all\",\n    },\n];\n\nconst actions1 = [\n    {\n        identifier: \"new\",\n        title: \"New\",\n        icon: AddIcon,\n        primary: true,\n    },\n    {\n        identifier: \"filter\",\n        title: \"Filter\",\n        icon: FilterIcon,\n        primary: true,\n    },\n    {\n        identifier: \"default\",\n        title: \"Default\",\n        icon: ListIcon,\n        primary: true,\n    },\n    {\n        identifier: \"delete\",\n        title: \"Delete\",\n        icon: DeleteIcon,\n        primary: false,\n    },\n];\n\nconst actions2 = [\n    {\n        identifier: \"new\",\n        title: \"New\",\n        icon: AddIcon,\n        primary: true,\n    },\n    {\n        identifier: \"filter\",\n        title: \"Filter\",\n        icon: FilterIcon,\n        primary: true,\n    },\n    {\n        identifier: \"compact\",\n        title: \"Compact\",\n        icon: CompactIcon,\n        primary: true,\n    },\n    {\n        identifier: \"delete\",\n        title: \"Delete\",\n        icon: DeleteIcon,\n        primary: false,\n    },\n];\n\nconst statuses = {\n    new: \"New\",\n    future: \"Future\",\n    in_trial: \"In Trial\",\n    active: \"Active\",\n    pending: \"Pending\",\n    halted: \"Halted\",\n    canceled: \"Canceled\",\n    expired: \"Expired\",\n    paused: \"Paused\",\n};\n\nconst DEFAULT_ROWS_PER_PAGE = 20;\n\n/* [TODO]\n * 1. Filter logic\n */\nfunction ViewSubscriptions(props) {\n    const {\n        subscriptions,\n        fetchSubscriptions,\n        newSubscription,\n        history,\n        location,\n    } = props;\n    const params = queryString.parse(location.search);\n    const classes = useStyles();\n    const [selected, setSelected] = useState([]);\n    const [openFilter, setOpenFilter] = useState(\n        Object.keys(params).length > 0\n    );\n    const [compact, setCompact] = useState(false);\n    const [page, setPage] = useState(parseInt(params.page, 10) || 0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(\n        params.limit || DEFAULT_ROWS_PER_PAGE\n    );\n    // TODO: Should we cache this?\n    const defaultFilterValues = toFilterState(filterFields, params);\n    const [filterValues, setFilterValues] = useState(defaultFilterValues);\n\n    const generateURL = (values, page, rowsPerPage) => {\n        const flatValues = toURLParams(filterFields, values);\n        const params = new URLSearchParams(flatValues);\n        params.append(\"page\", page);\n        params.append(\"limit\", rowsPerPage);\n\n        history.push(\"/subscriptions?\" + params.toString());\n    };\n\n    // Both the parameters must appear together. Otherwise, we automatically reset them both.\n    if (!(\"page\" in params) || !(\"limit\" in params)) {\n        generateURL(filterValues, page, rowsPerPage);\n    }\n\n    if (\"start_date\" in params) {\n        params[\"start_date\"] = new Date(Number(params[\"start_date\"]));\n    }\n    if (\"end_date\" in params) {\n        params[\"end_date\"] = new Date(Number(params[\"end_date\"]));\n    }\n\n    const handleAction = (type) => {\n        if (type === \"new\") {\n            newSubscription();\n        } else if (type === \"filter\") {\n            setOpenFilter(!openFilter);\n        } else if (type === \"compact\" || type === \"default\") {\n            setCompact(!compact);\n        }\n    };\n\n    const onClick = (subscription) => {\n        history.push(\"/subscriptions/\" + subscription.id);\n    };\n\n    // TODO: Create a deep copy without serializing!\n    const onFilterValueChange = (field, value) => {\n        const newValues = Object.assign({}, filterValues);\n        newValues[field] = value;\n        setFilterValues(newValues);\n\n        generateURL(newValues, page, rowsPerPage);\n    };\n\n    const onFilterClear = () => {\n        const defaultValues = toFilterState(filterFields, {});\n        setFilterValues(defaultValues);\n\n        generateURL(defaultValues, page, rowsPerPage);\n    };\n\n    const descendingComparator = (accountA, accountB, orderBy) => {\n        let valueA;\n        let valueB;\n        switch (orderBy) {\n            case \"plan\": {\n                valueA = accountA.plan.name.toLowerCase();\n                valueB = accountB.plan.name.toLowerCase();\n                break;\n            }\n\n            case \"name\": {\n                valueA = (\n                    accountA.account.firstName + accountA.account.lastName\n                ).toLowerCase();\n                valueB = (\n                    accountB.account.firstName + accountB.account.lastName\n                ).toLowerCase();\n                break;\n            }\n\n            case \"createdAt\": {\n                valueA = accountA.createdAt.getTime();\n                valueB = accountB.createdAt.getTime();\n                break;\n            }\n\n            default: {\n                valueA = accountA[orderBy];\n                valueB = accountB[orderBy];\n                break;\n            }\n        }\n\n        return valueB < valueA ? -1 : valueB > valueA ? 1 : 0;\n    };\n\n    const renderCellValue = (row, rowIndex, column, columnIndex) => {\n        switch (column.identifier) {\n            case \"plan\": {\n                return row.plan.name;\n            }\n\n            case \"name\": {\n                return row.account.firstName + \" \" + row.account.lastName;\n            }\n\n            case \"quantity\": {\n                return row.quantity;\n            }\n\n            case \"created\": {\n                return toDateString(row.createdAt);\n            }\n\n            case \"status\": {\n                return statuses[row.status];\n            }\n\n            case \"nextInvoice\": {\n                return \"TODO\";\n            }\n\n            default: {\n                return \"Unknown Column\";\n            }\n        }\n    };\n\n    const onChangePage = (newPage) => {\n        setPage(newPage);\n        generateURL(filterValues, newPage, rowsPerPage);\n    };\n\n    const onChangeRowsPerPage = (newRowsPerPage) => {\n        setPage(0);\n        setRowsPerPage(newRowsPerPage);\n        generateURL(filterValues, 0, newRowsPerPage);\n    };\n\n    useEffect(() => {\n        console.log(filterFields, filterValues);\n        const flatValues = toURLParams(filterFields, filterValues);\n        flatValues.page = page;\n        flatValues.limit = rowsPerPage;\n        fetchSubscriptions(flatValues);\n    }, [fetchSubscriptions, filterValues, page, rowsPerPage]);\n\n    return (\n        <div>\n            <WorkspaceToolbar\n                title=\"Subscriptions\"\n                selectionCount={selected.length}\n                actions={compact ? actions1 : actions2}\n                onAction={handleAction}\n            />\n            <Grid container={true} className={classes.container}>\n                <Grid item={true} lg={openFilter ? 10 : 12}>\n                    {subscriptions && subscriptions.records.length > 0 && (\n                        <WorkspaceTable\n                            headers={headers}\n                            onSelected={setSelected}\n                            selected={selected}\n                            compact={compact}\n                            onClick={onClick}\n                            renderCellValue={renderCellValue}\n                            rows={subscriptions.records}\n                            totalRows={subscriptions.totalRecords}\n                            page={page}\n                            rowsPerPage={rowsPerPage}\n                            onChangePage={onChangePage}\n                            onChangeRowsPerPage={onChangeRowsPerPage}\n                            descendingComparator={descendingComparator}\n                        />\n                    )}\n\n                    {(!subscriptions || subscriptions.records.length === 0) && (\n                        <NoRecords\n                            message=\"You have not created any subscriptions yet.\"\n                            action={true}\n                            actionText=\"Create Subscription\"\n                            actionHandler={newSubscription}\n                            image=\"assets/images/empty-subscriptions.svg\"\n                        />\n                    )}\n                </Grid>\n                \n                {openFilter && (\n                    <Grid item={true} lg={2}>\n                        <WorkspaceFilter\n                            fields={filterFields}\n                            values={filterValues}\n                            onValueChange={onFilterValueChange}\n                            onClear={onFilterClear}\n                        />\n                    </Grid>\n                )}\n            </Grid>\n        </div>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        subscriptions: state.subscriptions,\n    };\n}\n\nconst mapDispatchToProps = {\n    fetchSubscriptions: actions.fetchSubscriptions,\n    newSubscription: actions.newSubscription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(ViewSubscriptions));\n"],"sourceRoot":""}