{"version":3,"sources":["workspace/common/WorkspaceToolbar.js","utils.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/icons/MoreVert.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/icons/Pause.js","../node_modules/@material-ui/icons/Close.js","workspace/subscription/SubscriptionCard.js","workspace/subscription/ViewSubscription.js"],"names":["useToolbarStyles","makeStyles","theme","appBar","color","palette","primary","background","toolbar","paddingLeft","spacing","paddingRight","buttons","marginLeft","action","textTransform","title","text","fontWeight","highlight","type","secondary","main","backgroundColor","lighten","light","dark","actionIcon","marginRight","WorkspaceToolbar","props","classes","selectionCount","actions","onAction","makeActionHandler","identifier","normalTitle","className","variant","id","component","selectedTitle","selected","position","elevation","clsx","map","size","onClick","icon","Fragment","toDateString","date","toLocaleDateString","undefined","year","month","day","Card","React","ref","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","root","withStyles","overflow","name","CardContent","_props$component","Component","padding","paddingBottom","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","CardHeader","avatar","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","Typography","display","content","alignItems","flex","alignSelf","marginTop","createSvgIcon","Avatar","alt","childrenProp","children","imgProps","sizes","src","srcSet","_props$variant","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","userSelect","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","useStyles","expand","transform","transition","transitions","create","duration","shortest","expandOpen","activeAvatar","green","trialAvatar","orange","showMore","menuItem","link","textDecoration","statuses","future","in_trial","pending","halted","canceled","expired","paused","fields","render","subscription","status","createdAt","currentPeriodStart","currentPeriodEnd","renews","totalBillingCycles","quantity","setupFee","pricePerBillingCycle","SubscriptionCard","onEdit","onPause","onCancel","accountId","accountFirstName","accountLastName","accountUserName","planId","planName","planCode","notes","termsAndConditions","useState","menuAnchor","setMenuAnchor","substring","toUpperCase","IconButton","event","target","to","Menu","anchorEl","keepMounted","open","Boolean","onClose","MenuItem","Grid","container","field","item","lg","sm","subscriptionCard","maxWidth","section","marginBottom","sectionTitle","subscriptions","progress","top","left","mapDispatchToProps","fetchSubscription","clearSubscription","connect","state","withRouter","useParams","useEffect","CircularProgress","account","userName","firstName","lastName","plan","code","startsAt","activatedAt","cancelledAt","pausedAt"],"mappings":"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","file":"static/js/6.6b26d2d1.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    appBar: {\n        color: theme.palette.primary,\n        background: \"white\",\n    },\n    toolbar: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    buttons: {\n        marginLeft: \"auto\",\n    },\n    action: {\n        textTransform: \"none\",\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    title: {\n        color: theme.palette.text.primary,\n        fontWeight: 500,\n    },\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    actionIcon: {\n        marginRight: 4,\n    },\n}));\n\nfunction WorkspaceToolbar(props) {\n    const classes = useToolbarStyles();\n    const { title, selectionCount, actions, onAction } = props;\n\n    const makeActionHandler = (identifier) => () => onAction(identifier);\n\n    const normalTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"h6\"\n            id=\"tableTitle\"\n            component=\"div\"\n        >\n            {title}\n        </Typography>\n    );\n\n    const selectedTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"subtitle1\"\n            component=\"div\"\n        >\n            {selectionCount} selected\n        </Typography>\n    );\n\n    const selected = selectionCount > 0;\n\n    const recordButtons = () => {\n        if (actions) {\n            return actions.map(\n                (action) =>\n                    !action.primary && (\n                        <Button\n                            className={classes.action}\n                            variant=\"text\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={makeActionHandler(action.identifier)}\n                        >\n                            <action.icon className={classes.actionIcon} />\n                            {action.title}\n                        </Button>\n                    )\n            );\n        }\n        return null;\n    };\n\n    const normalButtons = () => {\n        if (actions) {\n            return (\n                <React.Fragment>\n                    {actions.map(\n                        (action) =>\n                            action.primary && (\n                                <Button\n                                    className={classes.action}\n                                    variant=\"text\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    onClick={makeActionHandler(\n                                        action.identifier\n                                    )}\n                                >\n                                    <action.icon\n                                        className={classes.actionIcon}\n                                    />\n                                    {action.title}\n                                </Button>\n                            )\n                    )}\n                </React.Fragment>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <AppBar position=\"static\" elevation={1} className={classes.appBar}>\n            <Toolbar\n                className={clsx(classes.toolbar, {\n                    [classes.highlight]: selected,\n                })}\n            >\n                {selected ? selectedTitle : normalTitle}\n\n                <div className={classes.buttons}>\n                    {selected ? recordButtons() : normalButtons()}\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nWorkspaceToolbar.propTypes = {\n    selectionCount: PropTypes.number.isRequired,\n};\n\nexport default WorkspaceToolbar;\n","export function toDateString(date) {\n    const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n    return date.toLocaleDateString(undefined, options);\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}), 'Pause');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { green, orange } from \"@material-ui/core/colors\";\nimport { Link } from \"react-router-dom\";\n\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CancelIcon from \"@material-ui/icons/Close\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\n\nimport { toDateString } from \"../../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    expand: {\n        transform: \"rotate(0deg)\",\n        marginLeft: \"auto\",\n        transition: theme.transitions.create(\"transform\", {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: \"rotate(180deg)\",\n    },\n    activeAvatar: {\n        backgroundColor: green[500],\n    },\n    trialAvatar: {\n        backgroundColor: orange[500],\n    },\n    title: {\n        fontWeight: 600,\n        fontSize: 14,\n    },\n    value: {\n        fontSize: 15,\n    },\n    showMore: {\n        marginLeft: \"auto\",\n        color: theme.palette.primary.main,\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    icon: {\n        display: \"inline-block\",\n        marginRight: 4,\n    },\n    menuItem: {\n        fontSize: 15,\n    },\n    link: {\n        textDecoration: \"none\",\n    },\n}));\n\nconst statuses = {\n    future: \"Future\",\n    in_trial: \"In Trial\",\n    active: \"Active\",\n    pending: \"Pending\",\n    halted: \"Halted\",\n    canceled: \"Canceled\",\n    expired: \"Expired\",\n    paused: \"Paused\",\n};\n\nconst fields = [\n    {\n        identifier: \"status\",\n        title: \"Status\",\n        size: 6,\n        render: (subscription) => statuses[subscription.status],\n    },\n    {\n        identifier: \"createdOn\",\n        title: \"Created\",\n        size: 6,\n        render: (subscription) => toDateString(subscription.createdAt),\n    },\n    {\n        identifier: \"currentPeriodStart\",\n        title: \"Current Period Start\",\n        size: 6,\n        render: (subscription) =>\n            subscription.currentPeriodStart\n                ? toDateString(subscription.currentPeriodStart)\n                : \"Unavailable\",\n    },\n    {\n        identifier: \"currentPeriodEnd\",\n        title: \"Current Period End\",\n        size: 6,\n        render: (subscription) =>\n            subscription.currentPeriodEnd\n                ? toDateString(subscription.currentPeriodEnd)\n                : \"Unavailable\",\n    },\n    {\n        identifier: \"renews\",\n        title: \"Renews\",\n        size: 6,\n        render: (subscription) => (subscription.renews ? \"Yes\" : \"No\"),\n    },\n    {\n        identifier: \"totalBillingCycles\",\n        title: \"Total Billing Cycles\",\n        size: 6,\n        render: (subscription) => subscription.totalBillingCycles,\n    },\n    {\n        identifier: \"quantity\",\n        title: \"Quantity\",\n        size: 6,\n        render: (subscription) => subscription.quantity,\n    },\n    {\n        identifier: \"setupFee\",\n        title: \"Setup Fee\",\n        size: 6,\n        render: (subscription) => `${subscription.setupFee} INR`,\n    },\n    /*{\n        identifier: \"renewsOn\",\n        title: \"Renews On\",\n        size: 6,\n        render: (subscription) => subscription.renewsOn,\n    },\n    {\n        identifier: \"startedOn\",\n        title: \"Started On\",\n        size: 6,\n        render: (subscription) => subscription.startedOn,\n    },\n    {\n        identifier: \"currentPeriod\",\n        title: \"Current Period\",\n        size: 12,\n        render: (subscription) =>\n            subscription.currentPeriodStart +\n            \" - \" +\n            subscription.currentPeriodEnd,\n    },*/\n    {\n        identifier: \"pricePerUnit\",\n        title: \"Price Per Unit\",\n        size: 6,\n        render: (subscription) => `${subscription.pricePerBillingCycle} INR`,\n    },\n    {\n        identifier: \"estimatedTotal\",\n        title: \"Estimated Total\",\n        size: 6,\n        render: (subscription) =>\n            `${subscription.pricePerBillingCycle * subscription.quantity} INR`,\n    },\n];\n\nfunction SubscriptionCard(props) {\n    const classes = useStyles();\n    const {\n        className,\n        onEdit,\n        onPause,\n        onCancel,\n        accountId,\n        accountFirstName,\n        accountLastName,\n        accountUserName,\n        planId,\n        planName,\n        planCode,\n        notes,\n        termsAndConditions,\n    } = props;\n    const [menuAnchor, setMenuAnchor] = useState(null);\n\n    const handleOpenMenu = (event) => setMenuAnchor(event.target);\n    const handleCloseMenu = () => setMenuAnchor(null);\n    const handleEdit = () => {\n        onEdit(\"id\");\n        setMenuAnchor(null);\n    };\n    const handlePause = () => {\n        onPause(\"id\");\n        setMenuAnchor(null);\n    };\n    const handleCancel = () => {\n        onCancel(\"id\");\n        setMenuAnchor(null);\n    };\n\n    return (\n        <Card className={clsx(classes.root, className)}>\n            <CardHeader\n                avatar={\n                    <Avatar className={classes.activeAvatar}>\n                        {planName.substring(0, 1).toUpperCase()}\n                    </Avatar>\n                }\n                action={\n                    <React.Fragment>\n                        <IconButton onClick={handleOpenMenu}>\n                            <MoreIcon />\n                        </IconButton>\n                    </React.Fragment>\n                }\n                title={\n                    <Link\n                        className={classes.link}\n                        to={`/plans/${planId}`}\n                    >{`${planName} • ${planCode}`}</Link>\n                }\n                subheader={\n                    <Link\n                        className={classes.link}\n                        to={`/accounts/${accountId}`}\n                    >{`${accountFirstName} ${accountLastName} • ${accountUserName}`}</Link>\n                }\n            />\n\n            <Menu\n                anchorEl={menuAnchor}\n                keepMounted\n                open={Boolean(menuAnchor)}\n                onClose={handleCloseMenu}\n            >\n                <MenuItem onClick={handleEdit} className={classes.menuItem}>\n                    <EditIcon className={classes.icon} />\n                    Edit\n                </MenuItem>\n                <MenuItem onClick={handlePause} className={classes.menuItem}>\n                    <PauseIcon className={classes.icon} />\n                    Pause\n                </MenuItem>\n                <MenuItem onClick={handleCancel} className={classes.menuItem}>\n                    <CancelIcon className={classes.icon} />\n                    Cancel\n                </MenuItem>\n            </Menu>\n\n            <CardContent>\n                <Grid container={true} spacing={2}>\n                    {fields.map((field) => (\n                        <React.Fragment>\n                            <Grid item={true} lg={field.size}>\n                                <Typography\n                                    variant=\"subtitle1\"\n                                    color=\"textSecondary\"\n                                    className={classes.title}\n                                >\n                                    {field.title}\n                                </Typography>\n                                <Typography className={classes.value}>\n                                    {field.render(props)}\n                                </Typography>\n                            </Grid>\n                        </React.Fragment>\n                    ))}\n                    {notes && (\n                        <Grid item={true} sm={12}>\n                            <Typography\n                                color=\"textSecondary\"\n                                className={classes.title}\n                            >\n                                Notes\n                            </Typography>\n                            <Typography>{notes}</Typography>\n                        </Grid>\n                    )}\n                    {termsAndConditions && (\n                        <Grid item={true} sm={12}>\n                            <Typography\n                                color=\"textSecondary\"\n                                className={classes.title}\n                            >\n                                Terms and Conditions\n                            </Typography>\n                            <Typography>{termsAndConditions}</Typography>\n                        </Grid>\n                    )}\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default SubscriptionCard;\n","import React, { useEffect } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { useParams, withRouter } from \"react-router-dom\";\n\nimport WorkspaceToolbar from \"../common/WorkspaceToolbar\";\nimport SubscriptionCard from \"../subscription/SubscriptionCard\";\nimport * as actions from \"../../redux/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: 16,\n    },\n    subscriptionCard: {\n        maxWidth: 600,\n    },\n    section: {\n        marginBottom: 32,\n    },\n    sectionTitle: {\n        fontSize: 20,\n        marginBottom: 16,\n        fontWeight: 500,\n    },\n    subscriptions: {},\n    progress: {\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -24,\n        marginLeft: -24,\n    },\n}));\n\n// Some fields aren't being rendered.\nfunction ViewSubscription(props) {\n    const classes = useStyles();\n    const { fetchSubscription, clearSubscription, subscription } = props;\n    const { identifier } = useParams();\n\n    useEffect(() => {\n        fetchSubscription(identifier);\n        return clearSubscription;\n    }, [identifier, fetchSubscription, clearSubscription]);\n\n    return (\n        <div>\n            <WorkspaceToolbar title=\"Subscription\" />\n            {!subscription && (\n                <CircularProgress size=\"48px\" className={classes.progress} />\n            )}\n            {subscription && (\n                <div className={classes.container}>\n                    <div className={classes.section}>\n                        <Typography\n                            variant=\"h2\"\n                            className={classes.sectionTitle}\n                        >\n                            General\n                        </Typography>\n                        <SubscriptionCard\n                            className={classes.subscriptionCard}\n                            accountId={subscription.account.id}\n                            accountUserName={subscription.account.userName}\n                            accountFirstName={subscription.account.firstName}\n                            accountLastName={subscription.account.lastName}\n                            planId={subscription.plan.id}\n                            planName={subscription.plan.name}\n                            planCode={subscription.plan.code}\n                            status={subscription.status}\n                            pricePerBillingCycle={\n                                subscription.plan.pricePerBillingCycle\n                            }\n                            setupFee={subscription.setupFee}\n                            quantity={subscription.quantity}\n                            startsAt={subscription.startsAt}\n                            totalBillingCycles={subscription.totalBillingCycles}\n                            renews={subscription.renews}\n                            notes={subscription.notes}\n                            termsAndConditions={subscription.termsAndConditions}\n                            activatedAt={subscription.activatedAt}\n                            cancelledAt={subscription.cancelledAt}\n                            pausedAt={subscription.pausedAt}\n                            currentPeriodStart={subscription.currentPeriodStart}\n                            currentPeriodEnd={subscription.currentPeriodEnd}\n                            createdAt={subscription.createdAt}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        subscription: state.subscription,\n    };\n}\n\nconst mapDispatchToProps = {\n    fetchSubscription: actions.fetchSubscription,\n    clearSubscription: actions.clearSubscription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(ViewSubscription));\n"],"sourceRoot":""}