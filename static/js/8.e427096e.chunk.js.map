{"version":3,"sources":["workspace/common/WorkspaceToolbar.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","workspace/account/AccountCard.js","workspace/account/ViewAccount.js"],"names":["useToolbarStyles","makeStyles","theme","appBar","color","palette","primary","background","toolbar","paddingLeft","spacing","paddingRight","buttons","marginLeft","action","textTransform","title","text","fontWeight","highlight","type","secondary","main","backgroundColor","lighten","light","dark","actionIcon","marginRight","WorkspaceToolbar","props","classes","selectionCount","actions","onAction","makeActionHandler","identifier","normalTitle","className","variant","id","component","selectedTitle","selected","position","elevation","clsx","map","size","onClick","icon","Fragment","Card","React","ref","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","root","withStyles","overflow","name","CardContent","_props$component","Component","padding","paddingBottom","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","CardHeader","avatar","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","Typography","display","content","alignItems","flex","alignSelf","marginTop","createSvgIcon","Avatar","alt","childrenProp","children","imgProps","sizes","src","srcSet","_props$variant","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","userSelect","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","CardActions","_props$disableSpacing","disableSpacing","useStyles","green","close","error","edit","fields","render","emailAddress","phoneNumber","addressLine1","addressLine2","city","state","zipCode","country","code","findCountryByCode","console","log","label","getCountryName","AccountCard","firstName","lastName","userName","onEdit","substring","toUpperCase","Grid","container","field","item","lg","Button","accountCard","maxWidth","section","marginBottom","sectionTitle","subscriptions","progress","top","left","mapDispatchToProps","fetchAccount","clearAccount","editAccount","connect","account","withRouter","useParams","useEffect","CircularProgress"],"mappings":"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","file":"static/js/8.e427096e.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    appBar: {\n        color: theme.palette.primary,\n        background: \"white\",\n    },\n    toolbar: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    buttons: {\n        marginLeft: \"auto\",\n    },\n    action: {\n        textTransform: \"none\",\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    title: {\n        color: theme.palette.text.primary,\n        fontWeight: 500,\n    },\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    actionIcon: {\n        marginRight: 4,\n    },\n}));\n\nfunction WorkspaceToolbar(props) {\n    const classes = useToolbarStyles();\n    const { title, selectionCount, actions, onAction } = props;\n\n    const makeActionHandler = (identifier) => () => onAction(identifier);\n\n    const normalTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"h6\"\n            id=\"tableTitle\"\n            component=\"div\"\n        >\n            {title}\n        </Typography>\n    );\n\n    const selectedTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"subtitle1\"\n            component=\"div\"\n        >\n            {selectionCount} selected\n        </Typography>\n    );\n\n    const selected = selectionCount > 0;\n\n    const recordButtons = () => {\n        if (actions) {\n            return actions.map(\n                (action) =>\n                    !action.primary && (\n                        <Button\n                            className={classes.action}\n                            variant=\"text\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={makeActionHandler(action.identifier)}\n                        >\n                            <action.icon className={classes.actionIcon} />\n                            {action.title}\n                        </Button>\n                    )\n            );\n        }\n        return null;\n    };\n\n    const normalButtons = () => {\n        if (actions) {\n            return (\n                <React.Fragment>\n                    {actions.map(\n                        (action) =>\n                            action.primary && (\n                                <Button\n                                    className={classes.action}\n                                    variant=\"text\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    onClick={makeActionHandler(\n                                        action.identifier\n                                    )}\n                                >\n                                    <action.icon\n                                        className={classes.actionIcon}\n                                    />\n                                    {action.title}\n                                </Button>\n                            )\n                    )}\n                </React.Fragment>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <AppBar position=\"static\" elevation={1} className={classes.appBar}>\n            <Toolbar\n                className={clsx(classes.toolbar, {\n                    [classes.highlight]: selected,\n                })}\n            >\n                {selected ? selectedTitle : normalTitle}\n\n                <div className={classes.buttons}>\n                    {selected ? recordButtons() : normalButtons()}\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nWorkspaceToolbar.propTypes = {\n    selectionCount: PropTypes.number.isRequired,\n};\n\nexport default WorkspaceToolbar;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\n\nimport EditIcon from \"@material-ui/icons/Edit\";\n// import CloseIcon from \"@material-ui/icons/Close\";\n\nimport { findCountryByCode } from \"../../common/countries\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    avatar: {\n        backgroundColor: green[500],\n    },\n    title: {\n        fontWeight: 600,\n        fontSize: 14,\n    },\n    value: {\n        fontSize: 15,\n    },\n    icon: {\n        display: \"inline-block\",\n        marginRight: 4,\n    },\n    close: {\n        marginLeft: \"auto\",\n        color: theme.palette.error.main,\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    edit: {\n        marginLeft: \"auto\",\n        color: theme.palette.primary.main,\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n}));\n\nfunction getCountryName(code) {\n    if (!code) {\n        return null;\n    }\n    const country = findCountryByCode(code);\n    console.log(country);\n    return country ? country.label : null;\n}\n\nconst fields = [\n    {\n        identifier: \"emailAddress\",\n        title: \"Email Address\",\n        size: 6,\n        render: (props) =>\n            props.emailAddress ? props.emailAddress : \"Unavailable\",\n    },\n    {\n        identifier: \"phoneNumber\",\n        title: \"Phone Number\",\n        size: 6,\n        render: (props) =>\n            props.phoneNumber ? props.phoneNumber : \"Unavailable\",\n    },\n    {\n        identifier: \"address\",\n        title: \"Address\",\n        size: 6,\n        render: (props) => {\n            const {\n                addressLine1,\n                addressLine2,\n                city,\n                state,\n                zipCode,\n                country,\n            } = props;\n            const available =\n                addressLine1 ||\n                addressLine2 ||\n                city ||\n                state ||\n                zipCode ||\n                country;\n            return available ? (\n                <React.Fragment>\n                    {addressLine1 && (\n                        <React.Fragment>\n                            {addressLine1} <br />\n                        </React.Fragment>\n                    )}\n                    {addressLine2 && (\n                        <React.Fragment>\n                            {addressLine2}\n                            <br />\n                        </React.Fragment>\n                    )}\n                    {city && (\n                        <React.Fragment>\n                            {city}\n                            <br />\n                        </React.Fragment>\n                    )}\n                    {state && (\n                        <React.Fragment>\n                            {state}\n                            <br />\n                        </React.Fragment>\n                    )}\n                    {country && (\n                        <React.Fragment>\n                            {getCountryName(country)}\n                            <br />\n                        </React.Fragment>\n                    )}\n                </React.Fragment>\n            ) : (\n                \"Unavailable\"\n            );\n        },\n    },\n];\n\nfunction AccountCard(props) {\n    const classes = useStyles();\n    const {\n        className,\n        firstName,\n        lastName,\n        userName,\n        onEdit /*, onClose */,\n    } = props;\n\n    return (\n        <Card className={clsx(classes.root, className)}>\n            <CardHeader\n                avatar={\n                    <Avatar className={classes.avatar}>\n                        {firstName.substring(0, 1).toUpperCase()}\n                    </Avatar>\n                }\n                title={firstName + \" \" + lastName}\n                subheader={userName}\n            />\n\n            <CardContent>\n                <Grid container={true} spacing={2}>\n                    {fields.map((field) => (\n                        <React.Fragment>\n                            <Grid item={true} lg={field.size}>\n                                <Typography\n                                    variant=\"subtitle1\"\n                                    color=\"textSecondary\"\n                                    className={classes.title}\n                                >\n                                    {field.title}\n                                </Typography>\n                                <Typography className={classes.value}>\n                                    {field.render(props)}\n                                </Typography>\n                            </Grid>\n                        </React.Fragment>\n                    ))}\n                </Grid>\n            </CardContent>\n\n            <CardActions>\n                {/*<Button className={classes.close} onClick={onClose}>\n                    <CloseIcon className={classes.icon} />\n                    Close\n                </Button>*/}\n                <Button className={classes.edit} onClick={onEdit}>\n                    <EditIcon className={classes.icon} />\n                    Edit\n                </Button>\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default AccountCard;\n","import React, { useEffect } from \"react\";\n// import Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { useParams, withRouter } from \"react-router-dom\";\n\nimport WorkspaceToolbar from \"../common/WorkspaceToolbar\";\n// import SubscriptionCard from \"../subscription/SubscriptionCard\";\nimport AccountCard from \"./AccountCard\";\nimport * as actions from \"../../redux/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: 16,\n    },\n    accountCard: {\n        maxWidth: 600,\n    },\n    section: {\n        marginBottom: 32,\n    },\n    sectionTitle: {\n        fontSize: 20,\n        marginBottom: 16,\n        fontWeight: 500,\n    },\n    subscriptions: {},\n    progress: {\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -24,\n        marginLeft: -24,\n    },\n}));\n\n/*\nconst subscriptions = [\n    {\n        identifier: \"1\",\n        currentPeriod: \"May 03 1999 — May 19 1999\",\n        plan: \"Premium\",\n        status: \"trial\",\n        termBehavior: \"Renews\",\n        collection: \"Manual\",\n        renewsOn: \"May 03 1999, 3:36 AM\",\n        startedOn: \"May 19 1999, 3:36 AM\",\n        pricePerUnit: \"100 INR\",\n        estimatedTotal: \"200 INR\",\n    },\n    {\n        identifier: \"2\",\n        currentPeriod: \"May 03 1999 — May 19 1999\",\n        plan: \"Platinum\",\n        status: \"active\",\n        termBehavior: \"Renews\",\n        collection: \"Manual\",\n        renewsOn: \"May 03 1999, 3:36 AM\",\n        startedOn: \"May 19 1999, 3:36 AM\",\n        pricePerUnit: \"100 INR\",\n        estimatedTotal: \"200 INR\",\n    },\n];\n*/\n\n// Some fields aren't being rendered.\nfunction ViewAccount(props) {\n    const classes = useStyles();\n    const { fetchAccount, clearAccount, account, editAccount } = props;\n    const { identifier } = useParams();\n\n    const handleEditAccount = () => {\n        editAccount(account);\n    };\n\n    useEffect(() => {\n        fetchAccount(identifier);\n        return clearAccount;\n    }, [identifier, fetchAccount, clearAccount]);\n\n    return (\n        <div>\n            <WorkspaceToolbar title=\"Account\" />\n            {!account && (\n                <CircularProgress size=\"48px\" className={classes.progress} />\n            )}\n            {account && (\n                <div className={classes.container}>\n                    <div className={classes.section}>\n                        <Typography\n                            variant=\"h2\"\n                            className={classes.sectionTitle}\n                        >\n                            General\n                        </Typography>\n                        <AccountCard\n                            className={classes.accountCard}\n                            onEdit={handleEditAccount}\n                            firstName={account.firstName}\n                            lastName={account.lastName}\n                            emailAddress={account.emailAddress}\n                            phoneNumber={account.phoneNumber}\n                            userName={account.userName}\n                            addressLine1={account.addressLine1}\n                            addressLine2={account.addressLine2}\n                            country={account.country}\n                            city={account.city}\n                            state={account.state}\n                            zipCode={account.zipCode}\n                        />\n                    </div>\n\n                    {/*<div className={classes.section}>\n                        <Typography\n                            variant=\"h2\"\n                            className={classes.sectionTitle}\n                        >\n                            Subscriptions\n                        </Typography>\n                        <Grid\n                            container={true}\n                            className={classes.subscriptions}\n                            spacing={2}\n                        >\n                            {subscriptions.map((subscription) => (\n                                <Grid\n                                    key={subscription.identifier}\n                                    item={true}\n                                    lg={4}\n                                >\n                                    <SubscriptionCard\n                                        currentPeriod={\n                                            subscription.currentPeriod\n                                        }\n                                        plan={subscription.plan}\n                                        status={subscription.status}\n                                        termBehavior={subscription.termBehavior}\n                                        collection={subscription.collection}\n                                        renewsOn={subscription.renewsOn}\n                                        startedOn={subscription.startedOn}\n                                        pricePerUnit={subscription.pricePerUnit}\n                                        estimatedTotal={\n                                            subscription.estimatedTotal\n                                        }\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </div>*/}\n                </div>\n            )}\n        </div>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        account: state.account,\n    };\n}\n\nconst mapDispatchToProps = {\n    fetchAccount: actions.fetchAccount,\n    clearAccount: actions.clearAccount,\n    editAccount: actions.editAccount,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(ViewAccount));\n"],"sourceRoot":""}